(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    587381,      11530]
NotebookOptionsPosition[    583287,      11427]
NotebookOutlinePosition[    583642,      11443]
CellTagsIndexPosition[    583599,      11440]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Legend for coloring", "Section"]], "Section",
 CellChangeTimes->{{3.695850564653019*^9, 3.695850575896942*^9}, {
  3.695850708085136*^9, 3.695850708893023*^9}}],

Cell["\<\
Flow of the discussion and labels for the action being performed.\
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["Technical comments (mostly on the Mathematica commands).", "Text",
 CellChangeTimes->{{3.695850626658449*^9, 3.69585063854694*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell["Comments and thoughts on what we are seeing.", "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Technical Setup", "Section",
 CellChangeTimes->{{3.695850690876594*^9, 3.695850693172535*^9}}],

Cell["\<\
This function is used to manually specify the bins in the histograms so that \
I can separate the distances that are exactly 0.0 from the ones that are \
close to 0. The automatic bin generation lumps those together.
To do this, I feed in a list of pairs of x-coordinates representing each \
particular bin I want the histogram command to use. The first of those pairs \
goes from a negative number to a very small number close to 0. The rest is \
just generated with the table command.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695849549603703*^9, 3.6958495918674097`*^9}, {3.695849670983222*^9, 
  3.695849701078623*^9}, {3.695849780114628*^9, 3.6958498368980207`*^9}, {
  3.695849901198181*^9, 3.695849938693994*^9}, {3.695850011442018*^9, 
  3.695850023024539*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bins", "[", 
   RowBox[{"dx_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "dx"}], ",", "0.000001"}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "dx", ",", "max", ",", "dx"}], "}"}]}], "]"}]}], 
    "]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6958499528014107`*^9, 3.69584997508759*^9}, {
  3.6958500713957577`*^9, 
  3.695850075930551*^9}},ExpressionUUID->"0d8ccb85-9e4d-4fd9-9aa4-\
8c38ec41cd91"],

Cell["\<\
Define some system-specific variables here - e.g. the base path for where the \
data files are stored. For some reason, Mathematica does not import the file \
successfully if it\[CloseCurlyQuote]s just located in the same folder and the \
path is omitted.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"7a541889-12eb-4678-9ca1-f712fa4fc323"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "pathBase", "=", 
   "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.695848948744624*^9, 
  3.695848975937291*^9}},ExpressionUUID->"dbcfa25b-7bc2-4287-bb6c-\
7807c9f41e8d"],

Cell["\<\
This will save time in replicating the results across subjects.\
\>", "Text",
 CellChangeTimes->{{3.695851835784102*^9, 3.695851845375249*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"1ffc0e77-0099-45ab-a469-5c6d5a90d468"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"euclideanHistogram", "[", 
    RowBox[{"filename_", ",", "dx_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "9"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "10"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "11"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"dx", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "LightGray", ",", "LightBlue", ",", "Blue", ",", " ", "Orange", ",", 
          "LightRed", ",", "Red"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{
        "{", "\"\<Euclidean distance from the true code\>\"", "}"}]}]}], 
      "]"}]}], ")"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.695848846914009*^9, 3.6958489015193367`*^9}, {
  3.695848967713339*^9, 3.695849013731596*^9}, {3.6958490822451687`*^9, 
  3.6958490928685207`*^9}, {3.695849197017473*^9, 3.695849199287992*^9}, {
  3.6958492397232647`*^9, 3.695849274716672*^9}, {3.697634376311413*^9, 
  3.697634532618259*^9}, {3.697634593703289*^9, 3.6976346434554653`*^9}, {
  3.697634769200047*^9, 3.697634773062634*^9}, {3.6976348044258423`*^9, 
  3.6976349769264917`*^9}, {3.69763501905956*^9, 3.697635030530478*^9}, {
  3.702455920479269*^9, 3.7024559621770077`*^9}, {3.702456094943227*^9, 
  3.702456096275984*^9}},ExpressionUUID->"2227902b-df6f-40b6-841e-\
1a5c703be86f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hammingHistogram", "[", 
   RowBox[{"filename_", ",", "dx_", ",", "maxval_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"dataCurrSubj", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"filename", ",", 
       RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
       RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "6"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "14"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"bins", "[", 
       RowBox[{"dx", ",", "maxval"}], "]"}], ",", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
         "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
         "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
      RowBox[{"ChartStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "LightGray", ",", "LightBlue", ",", "Blue", ",", " ", "Orange", ",", 
         "LightRed", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Hamming distance from the true code\>\"", ",", 
         "\"\<Number of images\>\""}], "}"}]}]}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.697635065908908*^9, 3.697635100313987*^9}, {
  3.702456068127377*^9, 3.702456091820939*^9}, {3.702456284491211*^9, 
  3.7024562906833143`*^9}},ExpressionUUID->"df4de3bd-1e11-4c0c-9f3a-\
83420de4bd53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hammingHistogramSmooth", "[", "filename_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"dataCurrSubj", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"filename", ",", 
       RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
       RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "6"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "12"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dataCurrSubj", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "14"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
         "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
         "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "LightGray", ",", "LightBlue", ",", "Blue", ",", " ", "Orange", ",", 
         "LightRed", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Hamming distance from the true code\>\"", ",", 
         "\"\<Number of images\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.697635065908908*^9, 3.697635100313987*^9}, {
  3.702456068127377*^9, 3.702456091820939*^9}, {3.702456284491211*^9, 
  3.7024562906833143`*^9}, {3.702456337605721*^9, 3.702456383286358*^9}, {
  3.7024567153619547`*^9, 3.702456720970333*^9}, {3.7024567577420273`*^9, 
  3.702456795908144*^9}},ExpressionUUID->"07728eae-856c-401e-8e6e-\
b159e98fc745"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"euclideanHistogramOnlyFAs", "[", 
    RowBox[{"filename_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "9"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"0.2", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", " ", "Orange"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\"\<Euclidean\>\"", "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hammingHistogramOnlyFAs", "[", 
    RowBox[{"filename_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "6"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "12"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"0.2", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"LightGray", ",", " ", "Orange"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\"\<Hamming\>\"", "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"euclideanHistogramOnlyFBs", "[", 
    RowBox[{"filename_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "10"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"0.2", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"LightBlue", ",", "LightRed"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\"\<Euclidean\>\"", "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hammingHistogramOnlyFBs", "[", 
    RowBox[{"filename_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "13"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"0.2", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"LightBlue", ",", "LightRed"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\"\<Hamming\>\"", "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"euclideanHistogramOnlyRCs", "[", 
    RowBox[{"filename_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "5"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "11"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"0.2", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", "Red"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\"\<Euclidean\>\"", "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hammingHistogramOnlyRCs", "[", 
    RowBox[{"filename_", ",", "maxval_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "dataCurrSubj", "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"dataCurrSubj", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
        RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "8"}], "]"}], "]"}], ",", 
         RowBox[{"dataCurrSubj", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "14"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"bins", "[", 
        RowBox[{"0.2", ",", "maxval"}], "]"}], ",", 
       RowBox[{"ChartLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Fa Genuine\>\"", ",", "\"\<Fb Genuine\>\"", ",", 
          "\"\<Rc Genuine\>\"", ",", " ", "\"\<Fa Imposter\>\"", ",", 
          "\"\<Fb Imposter\>\"", ",", "\"\<Rc Imposter\>\""}], "}"}]}], ",", 
       RowBox[{"ChartStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", "\"\<Hamming\>\"", "}"}]}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.695848846914009*^9, 3.6958489015193367`*^9}, {
  3.695848967713339*^9, 3.695849013731596*^9}, {3.6958490822451687`*^9, 
  3.6958490928685207`*^9}, {3.695849197017473*^9, 3.695849199287992*^9}, {
  3.6958492397232647`*^9, 3.695849274716672*^9}, {3.697634376311413*^9, 
  3.697634532618259*^9}, {3.697634593703289*^9, 3.6976346434554653`*^9}, {
  3.697634769200047*^9, 3.697634773062634*^9}, {3.6976348044258423`*^9, 
  3.6976349769264917`*^9}, {3.69763501905956*^9, 3.697635030530478*^9}, {
  3.697635304119666*^9, 3.6976353964011297`*^9}, {3.697635430294325*^9, 
  3.697635483989608*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.697635065908908*^9, 3.697635100313987*^9}, {
  3.697635322422863*^9, 3.697635338047987*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Subject 00070
(Low FB and Low RC Matching Scores)\
\>", "Section",
 CellChangeTimes->{{3.695849118550416*^9, 3.695849122037072*^9}, {
  3.695849166096017*^9, 3.695849174294766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euclideanHistogram", "[", 
  RowBox[{
  "\"\<data_howfar_meb_subject_00070_with_imposter_.csv\>\"", ",", "0.2", ",",
    "10.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.7024559710927563`*^9, 
  3.702455971712151*^9}},ExpressionUUID->"9063f844-c58b-488b-b655-\
293b7b62658c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.315]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.315]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            GrayLevel[0.85]]], {{{
             
             RectangleBox[{0.4, 0.}, {0.6000000000000001, 7}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.6000000000000001, 0.}, {0.8, 28}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{0.8, 0.}, {1., 23}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.2, 17}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.2, 0.}, {1.4000000000000001`, 13}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.4000000000000001`, 0.}, {1.6, 3}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1.6, 0.}, {1.8, 5}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.8, 0.}, {2., 3}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.315]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{{
             
             RectangleBox[{2.6000000000000005`, 0.}, {2.8000000000000003`, 2},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.8000000000000003`, 0.}, {3.0000000000000004`, 3},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.0000000000000004`, 0.}, {3.2, 1}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3.2, 0.}, {3.4000000000000004`, 7}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.4000000000000004`, 0.}, {3.6000000000000005`, 8},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.6000000000000005`, 0.}, {
              3.8000000000000003`, 11}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{3.8000000000000003`, 0.}, {4., 12}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4., 0.}, {4.2, 18}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4.2, 0.}, {4.4, 9}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{4.4, 0.}, {4.6000000000000005`, 12}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{4.6000000000000005`, 0.}, {4.800000000000001, 11}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{4.800000000000001, 0.}, {5.000000000000001, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{5.000000000000001, 0.}, {5.2, 1}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{5.2, 0.}, {5.4, 1}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{5.4, 0.}, {5.6000000000000005`, 1}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.315]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{{
             RectangleBox[{8.2, 0.}, {8.4, 2}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{8.4, 0.}, {8.6, 5}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{8.6, 0.}, {8.799999999999999, 22}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{8.799999999999999, 0.}, {9., 14}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{9., 0.}, {9.2, 7}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.2, 0.}, {9.4, 12}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.4, 0.}, {9.6, 10}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.6, 0.}, {9.8, 12}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.8, 0.}, {10., 13}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{10., 0.}, {10.2, 2}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.315]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.5, 0]]], {{{
             RectangleBox[{9.6, 0.}, {9.8, 7}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.8, 0.}, {10., 48}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{10., 0.}, {10.2, 44}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.315]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{{
             RectangleBox[{9.6, 0.}, {9.8, 3}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.8, 0.}, {10., 51}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{10., 0.}, {10.2, 45}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.315]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{{
             RectangleBox[{9.4, 0.}, {9.6, 2}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.6, 0.}, {9.8, 17}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.8, 0.}, {10., 38}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{10., 0.}, {10.2, 26}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{10.2, 0.}, {10.4, 16}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}}, {}}}, \
{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}}, {}}}, {{{{}, {}, \
{}}, {}}}, {{{{}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"Euclidean distance from an fa-generated code\"", TraditionalForm], 
       None}, AxesOrigin -> {-0.41200000000000003`, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.2, 10.4}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.315]]], 
                    GrayLevel[0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.315]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.315]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.315]]], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.315]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.315]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.5666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.85]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.315`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.697635256431795*^9, 
  3.7024559727327843`*^9},ExpressionUUID->"58f8ec7c-6072-4122-b82b-\
1e9fd52b357a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hammingHistogram", "[", 
  RowBox[{
  "\"\<data_howfar_meb_subject_00070_with_imposter_.csv\>\"", ",", "0.2", ",",
    "0.8"}], "]"}]], "Input",
 CellChangeTimes->{{3.702456122431892*^9, 
  3.702456132869198*^9}},ExpressionUUID->"0c7cfcf8-d760-42c6-bc77-\
67061b29b5b4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.651]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            GrayLevel[0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.2, 0.}, {1.*^-6, 97}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 97]& , TagBoxNote -> "97"], 
              StyleBox["97", {}, StripOnInput -> False]], Annotation[#, 
              Style[97, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.2, 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.2, 99}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 99]& , TagBoxNote -> "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.4, 29}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 29]& , TagBoxNote -> "29"], 
              StyleBox["29", {}, StripOnInput -> False]], Annotation[#, 
              Style[29, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 70}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 70]& , TagBoxNote -> 
               "70"], 
              StyleBox["70", {}, StripOnInput -> False]], Annotation[#, 
              Style[70, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.5, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 99}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 99]& , TagBoxNote -> 
               "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 99}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 99]& , TagBoxNote -> 
               "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 99}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 99]& , TagBoxNote -> 
               "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}}, {}}}, {{{{}}, {}}}, \
{{{{}, {}}, {}}}, {{{{}}, {}}}, {{{{}}, {}}}, {{{{}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Hamming distance from the true code\"", TraditionalForm], 
       None}, AxesOrigin -> {-0.22, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.2, 0.8}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    GrayLevel[0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.5666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.85]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.697635258570229*^9, 
  3.7024561338695803`*^9},ExpressionUUID->"363fe3e8-efca-439c-bdc7-\
d087329200fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hammingHistogramOnlyRCs", "[", 
  RowBox[{
  "\"\<data_howfar_meb_subject_00070_with_imposter_.csv\>\"", ",", "0.8"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6976354012945433`*^9, 3.697635410578663*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.651]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.4, 29}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 29]& , TagBoxNote -> "29"], 
              StyleBox["29", {}, StripOnInput -> False]], Annotation[#, 
              Style[29, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 70}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 70]& , TagBoxNote -> 
               "70"], 
              StyleBox["70", {}, StripOnInput -> False]], Annotation[#, 
              Style[70, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 99}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 99]& , TagBoxNote -> 
               "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}}, {}}}, {{{{}}, \
{}}}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Hamming\"", TraditionalForm], None}, 
     AxesOrigin -> {-0.22, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.2, 0.8}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.697635411076438*^9, 
  3.697635488063422*^9},ExpressionUUID->"dd1827bf-23cd-4540-a043-\
1bf24240e647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hammingHistogramOnlyFBs", "[", 
  RowBox[{
  "\"\<data_howfar_meb_subject_00070_with_imposter_.csv\>\"", ",", "0.8"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.697635507027444*^9, 3.697635516094513*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.651]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.2, 99}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 99]& , TagBoxNote -> "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.651]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6000000000000001, 99}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 99]& , TagBoxNote -> 
               "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}}, {}}}, {{{{}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Hamming\"", TraditionalForm], None}, 
     AxesOrigin -> {-0.22, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.2, 0.8}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.651]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.87, 0.94, 1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.85, 0.85]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.651`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6976355166220617`*^9},ExpressionUUID->"c29017bf-6b3c-4774-8d9e-\
ff1cb3e853b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["All Subjects", "Section",
 CellChangeTimes->{{3.695849118550416*^9, 3.695849122037072*^9}, {
  3.695849166096017*^9, 3.695849174294766*^9}, {3.695851987060305*^9, 
  3.6958520061002398`*^9}, {3.7024558949216957`*^9, 
  3.702455901981646*^9}},ExpressionUUID->"368d651a-4492-4c8f-9345-\
96b17593ebeb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"euclideanHistogram", "[", 
  RowBox[{"\"\<data_howfar_meb_all_subjects.csv\>\"", ",", "0.5", ",", "20"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7024559035011883`*^9, 3.702455905023435*^9}, {
  3.702455981716507*^9, 
  3.702456021385552*^9}},ExpressionUUID->"647992be-4bb7-4ef8-b410-\
c29277badbb4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.39899999999999997`]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.39899999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            GrayLevel[0.85]]], {{{
             
             RectangleBox[{1.*^-6, 0.}, {0.5, 17209}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{0.5, 0.}, {1., 1616}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.5, 1444}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.5, 0.}, {2., 26}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.39899999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{{
             
             RectangleBox[{1.*^-6, 0.}, {0.5, 2878}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{0.5, 0.}, {1., 5597}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.5, 3496}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1.5, 0.}, {2., 2380}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2., 0.}, {2.5, 1511}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2.5, 0.}, {3., 1137}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3., 0.}, {3.5, 935}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3.5, 0.}, {4., 771}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4., 0.}, {4.5, 539}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4.5, 0.}, {5., 280}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{5., 0.}, {5.5, 180}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{5.5, 0.}, {6., 194}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{6., 0.}, {6.5, 204}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{6.5, 0.}, {7., 109}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{7., 0.}, {7.5, 73}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{7.5, 0.}, {8., 11}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.39899999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{{
             
             RectangleBox[{1.*^-6, 0.}, {0.5, 335}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{0.5, 0.}, {1., 1841}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.5, 1999}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1.5, 0.}, {2., 1798}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2., 0.}, {2.5, 1897}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2.5, 0.}, {3., 1912}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3., 0.}, {3.5, 1769}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3.5, 0.}, {4., 1188}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4., 0.}, {4.5, 805}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4.5, 0.}, {5., 740}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{5., 0.}, {5.5, 828}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{5.5, 0.}, {6., 858}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{6., 0.}, {6.5, 924}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{6.5, 0.}, {7., 828}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{7., 0.}, {7.5, 730}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{7.5, 0.}, {8., 417}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{8., 0.}, {8.5, 417}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{8.5, 0.}, {9., 323}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9., 0.}, {9.5, 345}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.5, 0.}, {10., 232}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{10., 0.}, {10.5, 109}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.39899999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.5, 0]]], {{{
             RectangleBox[{1.*^-6, 0.}, {0.5, 73}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{0.5, 0.}, {1., 26}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.5, 99}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.5, 0.}, {10., 99}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{10., 0.}, {10.5, 671}, "RoundingRadius" -> 0]}}, {{
            
             RectangleBox[{10.5, 0.}, {11., 4228}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{11., 0.}, {11.5, 11298}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{11.5, 0.}, {12., 3704}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{12., 0.}, {12.5, 97}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.39899999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{{
             RectangleBox[{1.*^-6, 0.}, {0.5, 7}, "RoundingRadius" -> 0]}}, {{
            
             RectangleBox[{0.5, 0.}, {1., 77}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.5, 15}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1.5, 0.}, {2., 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2., 0.}, {2.5, 14}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2.5, 0.}, {3., 41}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3., 0.}, {3.5, 28}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3.5, 0.}, {4., 9}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4., 0.}, {4.5, 5}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4.5, 0.}, {5., 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{8.5, 0.}, {9., 63}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9., 0.}, {9.5, 195}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.5, 0.}, {10., 511}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{10., 0.}, {10.5, 2913}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{10.5, 0.}, {11., 7726}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{11., 0.}, {11.5, 7624}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{11.5, 0.}, {12., 1064}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{12., 0.}, {12.5, 1}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.39899999999999997`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{{
             RectangleBox[{1.*^-6, 0.}, {0.5, 22}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{0.5, 0.}, {1., 71}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{1., 0.}, {1.5, 6}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2., 0.}, {2.5, 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2.5, 0.}, {3., 27}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3., 0.}, {3.5, 19}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{3.5, 0.}, {4., 2}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{4.5, 0.}, {5., 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{5.5, 0.}, {6., 3}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{6., 0.}, {6.5, 6}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{6.5, 0.}, {7., 20}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{7., 0.}, {7.5, 19}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{7.5, 0.}, {8., 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{8.5, 0.}, {9., 5}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9., 0.}, {9.5, 298}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{9.5, 0.}, {10., 2259}, "RoundingRadius" -> 0]}}, {{
            
             RectangleBox[{10., 0.}, {10.5, 6158}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{10.5, 0.}, {11., 7400}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{11., 0.}, {11.5, 3649}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{11.5, 0.}, {12., 328}, "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, \
{{{{}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"Euclidean distance from an fa-generated code\"", TraditionalForm], 
       None}, AxesOrigin -> {-0.91, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.5, 20.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.39899999999999997`]]], 
                    GrayLevel[0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.39899999999999997`]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.39899999999999997`]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.39899999999999997`]]], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.39899999999999997`]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.39899999999999997`]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.5666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.85]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.39899999999999997`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.702456005159585*^9, 
  3.702456022480587*^9}},ExpressionUUID->"1d9c8f03-41e2-4294-994b-\
872a21a290e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hammingHistogram", "[", 
  RowBox[{
  "\"\<data_howfar_meb_all_subjects.csv\>\"", ",", "0.05", ",", "0.65"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.702456144526958*^9, 3.702456160085977*^9}, {
  3.7024562414136553`*^9, 
  3.702456246873652*^9}},ExpressionUUID->"6534751d-2ae7-4e7b-854f-\
81eb7fb02e89"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.588]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            GrayLevel[0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.05, 0.}, {1.*^-6, 18903}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 18903]& , TagBoxNote -> "18903"], 
              StyleBox["18903", {}, StripOnInput -> False]], Annotation[#, 
              Style[18903, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.05, 1392}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1392]& , TagBoxNote -> "1392"], 
              StyleBox["1392", {}, StripOnInput -> False]], Annotation[#, 
              Style[1392, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.05, 0.}, {1.*^-6, 10177}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10177]& , TagBoxNote -> "10177"], 
              StyleBox["10177", {}, StripOnInput -> False]], Annotation[#, 
              Style[10177, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.05, 7132}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 7132]& , TagBoxNote -> "7132"], 
              StyleBox["7132", {}, StripOnInput -> False]], Annotation[#, 
              Style[7132, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.1, 1757}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1757]& , TagBoxNote -> "1757"], 
              StyleBox["1757", {}, StripOnInput -> False]], Annotation[#, 
              Style[1757, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.15000000000000002`, 538}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 538]& , 
               TagBoxNote -> "538"], 
              StyleBox["538", {}, StripOnInput -> False]], Annotation[#, 
              Style[538, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 357}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 357]& , 
               TagBoxNote -> "357"], 
              StyleBox["357", {}, StripOnInput -> False]], Annotation[#, 
              Style[357, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.25, 221}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 221]& , TagBoxNote -> "221"], 
              StyleBox["221", {}, StripOnInput -> False]], Annotation[#, 
              Style[221, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.25, 0.}, {0.3, 107}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 107]& , TagBoxNote -> "107"], 
              StyleBox["107", {}, StripOnInput -> False]], Annotation[#, 
              Style[107, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.3, 0.}, {0.35000000000000003`, 6}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 6]& , TagBoxNote -> 
               "6"], 
              StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
              Style[6, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{-0.05, 0.}, {1.*^-6, 3158}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3158]& , TagBoxNote -> "3158"], 
              StyleBox["3158", {}, StripOnInput -> False]], Annotation[#, 
              Style[3158, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.05, 7280}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 7280]& , TagBoxNote -> "7280"], 
              StyleBox["7280", {}, StripOnInput -> False]], Annotation[#, 
              Style[7280, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.1, 2843}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2843]& , TagBoxNote -> "2843"], 
              StyleBox["2843", {}, StripOnInput -> False]], Annotation[#, 
              Style[2843, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.15000000000000002`, 1459}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1459]& , 
               TagBoxNote -> "1459"], 
              StyleBox["1459", {}, StripOnInput -> False]], Annotation[#, 
              Style[1459, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 1398}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1398]& , 
               TagBoxNote -> "1398"], 
              StyleBox["1398", {}, StripOnInput -> False]], Annotation[#, 
              Style[1398, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.25, 1199}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1199]& , TagBoxNote -> "1199"], 
              StyleBox["1199", {}, StripOnInput -> False]], Annotation[#, 
              Style[1199, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.25, 0.}, {0.3, 1020}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1020]& , TagBoxNote -> "1020"], 
              StyleBox["1020", {}, StripOnInput -> False]], Annotation[#, 
              Style[1020, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.3, 0.}, {0.35000000000000003`, 729}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 729]& , 
               TagBoxNote -> "729"], 
              StyleBox["729", {}, StripOnInput -> False]], Annotation[#, 
              Style[729, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35000000000000003`, 0.}, {0.4, 470}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 470]& , 
               TagBoxNote -> "470"], 
              StyleBox["470", {}, StripOnInput -> False]], Annotation[#, 
              Style[470, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45, 368}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 368]& , TagBoxNote -> "368"], 
              StyleBox["368", {}, StripOnInput -> False]], Annotation[#, 
              Style[368, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45, 0.}, {0.5, 236}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 236]& , TagBoxNote -> "236"], 
              StyleBox["236", {}, StripOnInput -> False]], Annotation[#, 
              Style[236, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 118}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 118]& , TagBoxNote -> "118"], 
              StyleBox["118", {}, StripOnInput -> False]], Annotation[#, 
              Style[118, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.55, 0.}, {0.6000000000000001, 17}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 17]& , TagBoxNote -> 
               "17"], 
              StyleBox["17", {}, StripOnInput -> False]], Annotation[#, 
              Style[17, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.5, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.05, 0.}, {1.*^-6, 99}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 99]& , TagBoxNote -> "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.05, 99}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 99]& , TagBoxNote -> "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35000000000000003`, 0.}, {0.4, 99}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 99]& , TagBoxNote -> 
               "99"], 
              StyleBox["99", {}, StripOnInput -> False]], Annotation[#, 
              Style[99, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45, 1287}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1287]& , TagBoxNote -> "1287"], 
              StyleBox["1287", {}, StripOnInput -> False]], Annotation[#, 
              Style[1287, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45, 0.}, {0.5, 6831}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 6831]& , TagBoxNote -> "6831"], 
              StyleBox["6831", {}, StripOnInput -> False]], Annotation[#, 
              Style[6831, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 10494}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10494]& , TagBoxNote -> "10494"], 
              StyleBox["10494", {}, StripOnInput -> False]], Annotation[#, 
              Style[10494, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.55, 0.}, {0.6000000000000001, 1386}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1386]& , 
               TagBoxNote -> "1386"], 
              StyleBox["1386", {}, StripOnInput -> False]], Annotation[#, 
              Style[1386, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.05, 0.}, {1.*^-6, 91}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 91]& , TagBoxNote -> "91"], 
              StyleBox["91", {}, StripOnInput -> False]], Annotation[#, 
              Style[91, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.*^-6, 0.}, {0.05, 76}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 76]& , TagBoxNote -> "76"], 
              StyleBox["76", {}, StripOnInput -> False]], Annotation[#, 
              Style[76, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.1, 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.15000000000000002`, 3}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 3]& , TagBoxNote -> 
               "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35000000000000003`, 0.}, {0.4, 308}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 308]& , 
               TagBoxNote -> "308"], 
              StyleBox["308", {}, StripOnInput -> False]], Annotation[#, 
              Style[308, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45, 1149}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1149]& , TagBoxNote -> "1149"], 
              StyleBox["1149", {}, StripOnInput -> False]], Annotation[#, 
              Style[1149, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45, 0.}, {0.5, 6695}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 6695]& , TagBoxNote -> "6695"], 
              StyleBox["6695", {}, StripOnInput -> False]], Annotation[#, 
              Style[6695, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 10786}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10786]& , TagBoxNote -> "10786"], 
              StyleBox["10786", {}, StripOnInput -> False]], Annotation[#, 
              Style[10786, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.55, 0.}, {0.6000000000000001, 1159}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1159]& , 
               TagBoxNote -> "1159"], 
              StyleBox["1159", {}, StripOnInput -> False]], Annotation[#, 
              Style[1159, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.05, 0.}, {1.*^-6, 95}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 95]& , TagBoxNote -> "95"], 
              StyleBox["95", {}, StripOnInput -> False]], Annotation[#, 
              Style[95, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.05, 37}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 37]& , TagBoxNote -> "37"], 
              StyleBox["37", {}, StripOnInput -> False]], Annotation[#, 
              Style[37, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.1, 16}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 16]& , TagBoxNote -> "16"], 
              StyleBox["16", {}, StripOnInput -> False]], Annotation[#, 
              Style[16, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.15000000000000002`, 1}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1]& , TagBoxNote -> 
               "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 3}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 3]& , TagBoxNote -> 
               "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.25, 17}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 17]& , TagBoxNote -> "17"], 
              StyleBox["17", {}, StripOnInput -> False]], Annotation[#, 
              Style[17, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.25, 0.}, {0.3, 22}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 22]& , TagBoxNote -> "22"], 
              StyleBox["22", {}, StripOnInput -> False]], Annotation[#, 
              Style[22, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.3, 0.}, {0.35000000000000003`, 7}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 7]& , TagBoxNote -> 
               "7"], 
              StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
              Style[7, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35000000000000003`, 0.}, {0.4, 24}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 24]& , TagBoxNote -> 
               "24"], 
              StyleBox["24", {}, StripOnInput -> False]], Annotation[#, 
              Style[24, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45, 1255}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1255]& , TagBoxNote -> "1255"], 
              StyleBox["1255", {}, StripOnInput -> False]], Annotation[#, 
              Style[1255, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45, 0.}, {0.5, 6832}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 6832]& , TagBoxNote -> "6832"], 
              StyleBox["6832", {}, StripOnInput -> False]], Annotation[#, 
              Style[6832, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 10448}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10448]& , TagBoxNote -> "10448"], 
              StyleBox["10448", {}, StripOnInput -> False]], Annotation[#, 
              Style[10448, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.55, 0.}, {0.6000000000000001, 1535}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1535]& , 
               TagBoxNote -> "1535"], 
              StyleBox["1535", {}, StripOnInput -> False]], Annotation[#, 
              Style[1535, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6000000000000001, 0.}, {
                   0.6500000000000001, 3}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}}, {}}}, {{{{}, {}, {}, \
{}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Hamming distance from the true code\"", TraditionalForm], 
       FormBox["\"Number of images\"", TraditionalForm]}, 
     AxesOrigin -> {-0.064, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     PlotRange -> {{-0.05, 0.6500000000000001}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    GrayLevel[0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[1, 0.5, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.5666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.85]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}], 
                 ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.702456152263713*^9, 3.702456161088438*^9}, 
   3.702456248304885*^9, 
   3.702456297501004*^9},ExpressionUUID->"64722b15-8b92-43dc-867d-\
28f8ead16c10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hammingHistogramSmooth", "[", 
  "\"\<data_howfar_meb_all_subjects.csv\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7024563961110153`*^9, 
  3.702456401157592*^9}},ExpressionUUID->"bd095ef2-ef03-4c8d-82a3-\
110ca2af90b4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.85]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQrfineI7K4dX7GaCA4y7L2T88Lhj82asObiqb2mS/
ziD2xONDzvuPfn0WwXZ0gn1oy9bDpyqc93/8H3j07J3p9r+v8+7fqOe838KE
NWvX4wX2i7TTds144rRfxaN6x7ETy+096vdtrZ/ltN/T5RrzmxUb7N9dEtuY
FuC0v05eZ9th8+32U9Xy1/iyOe3PbV8nZS1xwN666vhykz2O+3kd5CctMzpm
/+is/GLpIsf9y5sdJt4pOWffoVgxj0nDcf/1Lwvj+E9esdcrvTDz5V2H/e03
hDuULO/YXz2hMfXCZIf9fFmzfS/wP7avlmmcsN3TYf+Vz0Kv4+e+tHd5sEnc
9r/9/itzpzR/kvtoP6E9mY87237/phsWhluOfLO/qyfCevOa3X7dz+/Wysr/
s9e6duT3Mie7/U80KuMcLjE7lNWWfipZZ7u/662Ea+1nTocjKmovnaRs989b
ZPY575mAg8CZa/cF2mz2v56zeNW+p6IOG90LJDZZ2+z/ELYpb7WQpAMAMBe7
gQ==
         "]], 
        LineBox[CompressedData["
1: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
fYyoU+Tf/+T/AX8zGB0=
         "]], 
        LineBox[CompressedData["
1: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
zw6LUizbjXBBp33OHSPBwbR+5ThlG6zp1J+ostMkOLXKMmLfek100C0pfy6Y
BOxqQUbBFl1s0FG50ZBOgi33Be5lBfEjf6uqcUYECTx+7DcQ2qSEzRntF6i5
SAK32+2EVlktLExzTIU3nQRGX98rbVPSwoSV6HbWuSSgZLsYhkiYoAxpEf/z
t0nw6kZkN2+tFiYvejO2pZQEWqE3ZErUdFHRKqPC9VUkqJbMiDtduxMZLb1q
OfCcBE47uXuLPqqi59+9JlNfkUDG+6VNG1sTc/o0L/zuLQksFr3fDvlvRu8/
XNTY8pEE989GPdI5Lov5dG53PPaFBHJB57EH/KZopuFRUN4PEoRWTVgdlZDH
mNjexNElEth7eXYWt+9Ea8o+Fu9YRYY7pMcbo95ZYskF5A7/9WRYOD4WIPxc
G9uWs3amSJIMpNbigqVoY+xOcq7YjBwZ9pbceGt/atpE77yejp4aGaybs9aM
5y9U1bCanKm6ZAjuY2d8ytfE7InHiE8QGTZKBAY+UzPAus/8TPlrTYbbRS+8
L0kpYSePnS83cyKDS275xfpHitiky7buiCNk+ODpbRj6YMaEalc213CSDGTa
/XXzjgYYr+keibVnyTC673zYoXEuFK/Xp+9AWuG3NYfyBokgKTW86yUWGXQD
p0b2Il10U3Y17U00GR7YOBw+rSCNaW66kilxiQw90dzpr2dlsCdrtSrdLpPB
lStaX0nCFLPmftGbfZ0MZfnp72/+MEWdc26Lg4Vk8JYeZHfVqmEeX6ekFR6S
QSlYfE7DXh+Nf4ww8X1Khm/qVa86SkwwwtvNHncaySDyxmz3XUtL7G9LEXOy
YyV+2VZ5z1sO2IVnFjma78kg+n4bfSbBDNtY0VNNGFnxB0LU8ZHOWO69gIGH
k2TY/qptb8BaE0ztOg/XwhwZir/4pk2Oa2APM9JlERcF1Gi4q3gLY8w8fqcZ
R4AC/BHPL+v/ssNaw2tP1IlRwGws4QwtyBhzpR0KW7WFAm5HM08X0XXQcOBE
nq0iBfC0N523m82xwFOcujgNCjDmxu2+XBFFC0c2jrTpU6CfLzGh5TFgkY53
+MTNKGC//Wa3waQlJmIFiofsKFC569eJmVxeLMvojVWmMwX8egPnbpPGTJQ0
z/h8OEqBSe+TDxtGACtV/Bsl40OBtKZUszST3RiSTs4/GUQBni+1R6bidmON
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
DRzz+w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[0.87, 0.94, 1]], 
        LineBox[{{-0.05422319803073373, 0.}, {-0.008361683521984242, 
         0.}, {-0.008030931935091242, 
         0.005872752557166217}, {-0.00770018034819824, 
         0.012996789254072869`}, {-0.007369428761305238, 
         0.027816643819688177`}, {-0.007038677174412237, 
         0.057577014316379266`}, {-0.006707925587519236, 
         0.11525792717331618`}, {-0.0063771740006262345`, 
         0.2231368161560656}, {-0.006046422413733233, 
         0.4177841360750945}, {-0.005715670826840232, 
         0.7565096625473844}, {-0.005384919239947231, 
         1.3248306940590207`}, {-0.005054167653054229, 
         2.2439381110483096`}, {-0.004723416066161227, 
         3.6756907676086708`}, {-0.004392664479268226, 
         5.823166631205853}, {-0.004345165215645621, 6.268232087740884}}], 
        LineBox[CompressedData["
1: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
TP/3E2n/lbSxf/j/z/8DM0eYtQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        LineBox[CompressedData["
1:eJxdh3841HccwL+n1sjPCgkbeZC01WzhtNX7o2Jr+XGMfkw91+mWW2cXc3pq
TI/zo1MXruTXXeKOcz/QEktRby4PKodUSGnmR7HsntbkwXRte579tdfzvJ7X
81odfST8GyOKorb9479dvZAgdb2lQeo//v+iCdpR6SEN5uaOx9Sap8DMg5xQ
66UadBYQdudIKkS3vLdWVK3GSHVo1cTmDOis1hgtDlNj+l5N49N1WUAv9nuS
NK3CueOkZk57BmSZ7fV/FqiQsSbBmZYjBvOEyBzupyp0V9ylb9HkwTHmKGf0
qRIvuWkirgUWwujO+K1RAiX+lmbaQU+QQgj9rcN9NyVSWW6KAFkpNLieef3l
7Uo8qF4WdoojB9dlDt3a2Eqc8v3FPaVQAdlvlMpNVpU4j3zDLlDD/KSPoPaK
AvsohrFFbA2w+1qjPHcrMLQvNO27gsvQrQ33ls1XoCx+afD1oDrYdGnYwr6k
AgP1N1VNzKtQIeFNiP0rkH7wOu/i4HWwEi60mIyX40BqZ+btjpuQxD8lSRWW
47EjujEvSQs8O2CXOLeuHPu3wCU/u1YIC1aExHfLUbv9xv5jI23Q6LfRY/J7
OXYIbQtCaHfA3V1LY9nKkcZRU0nJOhAvZzweuCZDUWIp3aWmBxYMQ3WM/TJk
obep4kEvxLzgZndQMhQO7lq/w+ch9PbPxZDyMnTd3s1v7u+Hza0n/Rs+L0M+
WHt23xgE5U82Dh+9KMXmxtZO7u9DsOKCfLoyuxRLxgqN7tUPw49ZXl1OH5fi
VzznbW0lI9DzIiV0g+Yi7k7qWuVRNwaK1mIjp1clKOPmPcqYfQbJF36ut/Ar
wR0ebzQs3iSEH+3lGE5cwF+Z+WG+dlPgEap30LdJ0XmJ7M7hWT0Y1iztHjKX
4nCQ9esy4z/gAeUu0EVIcMqR5pdY+wrUj/y9b0iKcdy05Lzyh2lIqd0/UTVS
hDFq7dj70TMQcfq4RLq2CH35f6mk386CJ/t8iCiuEE2rifaWeB6ozZdpyVcL
cIlj5IdWjxegz0ZXxzXkY486P+1+wFuo0k/ERAXkY5BV+IqVkxQRtC922Ck6
j9bZktfGxIjsKXXu2nQ/D3czFr2RVi4i649/luppn4d9lhbJeU7vEKPwPRvt
WeewkPHy+bnKJWTAk//cRHkWZUxepBMYk5pFucVzejHurUrgScdNSPoTTfCk
txj7E+deMopNydf17dSj5Fzcd+WMS/Q+c3LAsT1GfDIHDfHCiIeelsSsy6CL
s8nGHe9y6F8IrEjDCZ+NDLkIx1yoxA/4ywjbi1e8wes0ZpbJvWIPLydmoxWU
JWahGZurD2avIA15Q4f0QUKsyiQupixrwgm00ekGM5Efd1Z1j2lDrGaDPqnm
ZCCjb96vlWlLmlXpRaKZNFSsNbu7wFxJOFFNb7npAjSxZ1lmM+3IZJOQzTqR
ii931fI0y1eRvwEsdRVc
         "]], 
        LineBox[CompressedData["
1:eJw9V3c41W/cthJFoYwQksqmQiV1n4gixU9SUjKympQilaIlUbaGSrJl7733
XufYzrFXmecg4j3vdb3X+/3ne93X83yez3qu+34+uyzuGlgxMTAwcDAzMPzv
/yHHvjdBuj8wY5RyJ45nByHBH1JGN39Aro+PMDsrQFCPStbrq/wBvcKbkUO+
AoSOnN0PrSXCIOOQKnJYSYBwpyEw5M/zMGxN7Vrq6OAnMA1sLH3YG4b7O/6w
pDzjJ3ykPhpfO/ITX0/UvP8lyU+QZZ/a+iboJ77fcndPauUjlAibqmyd/4kU
m9KF8Od8BCPFpivBeuGocXmSZK/AR5jSUH8h+iscDLR8rr/9vITnF9Niotgi
MFYiOrbPj5fAd3Nvk4JVBAx/+vlRNHkJv1w/0jKLI/BdRFxs68p2AsFv006C
SCR6JQw/f0reTiBGPNGocokE49tehZt22wk3sv/Y6ZMi8bqbb8Nd8e0Ehnoz
n46DUYhnPNLj27ONEEBuyTDziQJrnkFRcfA2gvTCyd6xqSgoxVlK/jm/jVCw
MZPZQTsaxrou29i4txEMhaSklyOi8bKTmsnYyEOYkP+i78YUg/NVvY0N3jwE
V3VOJ/ZrMXj2RvPZ9bM8hO1Gz7765sZAt79LMZuThxBtN1u6QyAWnoM3g8oa
uAlqTy0nfjjG4jrv99hnPtyENp92LunmWNw6cUB4yICbYBt+6lCKXBzWH81t
+s3LTVjNzL6q6hkH5dEL1kGdXASfWpmXJSNx+BdW97fnKxdBsv9rrI7GL+id
lnEusOAi5M1tbW75/gvq815sRyS5CPqs7ouXV3/hrsjWrcE9WwljOxZ2Dl6K
h1vlkckJu62EJ3LWJ2+mx0PqyxWX20tbCFwnOm7McyfAr/LmdVGPLYRwQx3f
x3cSwL9Qe5xpxxaCmm1eJnNtAtRXLpjzx3ESmh7L973bl4jCi4HG5sc5Cdc/
hLJsf5kI6l/L+oEWDsJqGI9MCDkRenonf3yz5SCcNimR9BNJwobnnlwf1zcT
eKxWjhJ1k7B8NY+vJXgzoeeOkp7g4yQQQssy9fZvJkQ737YwjUmCrZySwva6
TYR77pEPwkhJmDEWeSZuu4mg5tXvMbIhGYHfUl4+3bCJwBokECKtlAziExMN
yXB2Qsv3/xLvWCSjTu7hd4mT7ISQGM+SFJ9k3PznwPdgmI1gnVraTitIxjqL
1A8hDzbCgfzVMdXfych1kZ7bIctGWK1QXnUVSoG66NsfDs0bCRVNd7aWaqfA
WIaYvtt5I8GnK0p8o3MKxEyPNiqKbSRcGSIrn4lMAU07K/pTNSth758d2h/a
UpAup8Rx1ZGVMLNocKWVKRWNwedZncVYCXmMXnf596dioCSihVa/gfB6c7m7
ybVU/Dt/1a3pyQaCPu9a4HfvVPi07shlkdtAEBQ9FDOYm4rzfPElfn0shBFJ
+7x9E6ngLGh44OTLQkg6ENN4UyAN58wzf6ZrshBc1AYGErXScP41mXRmhZlw
UkuINu+YhtMSE/sOpTATuPQN2Q//TMOrg0sOD28wE7qMvYWfNKdBnRgkxCbB
TAi3rFAoWk+DzGfHJ+N9TAT72+vqLPLpOMtq9WrnFyaCqtNho9NX0jF+WJ4l
9BITgcXNwc7LMx2Ltjt/3+VnIjR4xj5pykrHQNeMpBeJkfA5YPDD9tF02HcO
Z8x9ZCRc/yb88xJvBryIe46GmzAS5KMvZIRoZCB68s6+UFFGwt/k99Vkhwxo
jDIEDQ0xEMpyK3skQjMQWNAq7BDHQHhfzjBj25CBXinCLs37DIRLjUeY41cz
IPf1Pc1UjYEg0XmPb1Y6E+98deOLWRkIfwbipJSNMxEaw+zVHr6OrKkhtUdv
MrHxrPr5tOPrcKft1M9Pz8TJlsXnot1rOMdw0ZJxKBOBFXfteV3WILDJ56Em
TxaCPXV6goXWMLCt+u1bQhZi/A0jogr/IWEn09f6O1mQ6WVmVLf+B+d9R5O4
v2ZBqSCqzHrrP6jvdyy9UJuFY1L1Iry5q+A4Gk/8tJwFhr/Dttp2q+g4OTLe
uy8bsZkSRmyCqwg7J/pvl1E24j0yTujWr+DWpUtc1i+zseVSIfO2Fys4bOG7
OzYlG5pytjyXj66A6VaNyh9yNq7siN+wk/YXdQ+YdQ5szcEmHyN349S/CHqm
dvXhsRy89tDcw3n/LyzePrDPuZkDpd3G/ykq/4Wsf8KLtU85OBr332T+8jJo
IaNB6lU50Eul5SYWLaMoUiz2NS0HCX0zWatvl+GVZJxfI5ELy6/aRmEXlmGU
49e05XwuDp4M8gjcvQyxstpBA7dc7FT8crB+fglT9SyLQYm5CFW59w8VS8gg
HdvU3ZuLPEehloHPS3hOebhTlCMPcfauEXEOS9CZTFS0VM1D8aaf7311lsBH
HdOIss1DReGD8Vd7lkBe23VxMigPKTrCZU+YlhDLZnJDoTwPBXkhqnaURTjy
BDy9P5+HrU/F9qiVLIIgXO+TuSsf70KkZyfDF7FpL2v4il4+Pue8s7V9u4g2
BWTCNR8y3p2fwu4uIvSIc82LX/nIdeTj97q4iBsayb2VXfl4ustOl/fEIpTO
TsxsZi+Ab+yOcwqyi1gz2s2if6gAfAtRWfUCi6gxu8IfYFUA2Y0NDn2siwi4
ESjd4V+AcuvnsQY0GkwdG44JlxRA3nKOV2iUBmnXjf+ZzRTggKzr8t5OGhbe
EK6HixQi0vGK4Y06Ggp8HzmN6RZCclMksa2IBo8vKZ6yjwvxh9tiwiiDBsOI
ya/2MYVo/uK5beAXDSKJEslppEIojBJu2ITT4Ngjb7HKVAStZL47HSE0GJvX
3hQRLILZ35dLUkE0YMTmAWF/EQ5JIfWMDw0SN1meWZwuwvTUlmrFdzSwz4R6
vLxWhJ5AolLdaxqmHY/5RT4sQsHmNgmuFzS0LXd+qfIugqnZ6eS5ZzRkuz6M
mAgvghTbpKLNUxq+MW9L5MgrApHxHL/5YxpeeiRmybcWwaVl0qX9EQ12nLol
+hNFML4SopLtTMM5v7Hae4zF2NOQf4yRjpX4X7UHCBRD/4eZXaQTDTtCdvVn
KBTjqPUFqxA6XhMrGOvQKsad0PQTXXQ8GHF57u/VYmityLBdpNtXSy+uCD8o
xmwYUYWd7i8h0X8DvIrR3T2oOUHH/kqKW81/FmPnC+vtcy40OGfXCbzIKcZq
utQ4/xN6v47biUc0F8OEZ1uXIT0fjdINspVjxThw6l7lD1caJE+HKY+vF2Op
dUlzkZ7/lvrj2MxfAs1G+57/3GiY/6/7tJx8CY62vFeJcaehg+hkoKdZAv+Y
EfIivX75JtuvOFwpgdIq2+PDr2j4SU6y8r9fAt7qi8et6PX2sDp7N92zBClt
e61d3tBwe2LcmfSjBEwqF97e96Dh/N3X7stZJShJyDxz5i0NhxfEvYSaSqDt
0zr0j453PioMPDZagmN5sQ/eeNLAtGby/dpaCf4OlUcO0vGY+1K0G28p2Fau
/OCm97t+Y2DKT9lSRLjwOHPQcYrX/rxyjVL8atnp10zfH8zdUD56uRTcDi6v
TOn4adCNRvZ7peglOn5IovuzENrYKfO2FGGtJk8r6PGdCv05cDa0FCMegtu+
0+OX20OYuptZikpf3/xD9Px4Ynuovg2lyPjPNeDDSxoW5R+tpw6XInTPdHQE
vV49qbzsxNVSaD10s3N+TkPJ4RSepW1luBXt0M1Or39U/jlhQZkyeAqKyFyi
3y8v9ck9auplUPG/5mtJ7/+9yjcKpsZlUBLl/Cb7gIaLuhJHntuXoSxw8Weq
Aw1qzUXqYW/KoPFpr9Tf2zTsMrqqW/atDBEl+mC6QcPG7uULI+llEIoc56uz
omHqWtA1tvoycP1LGjE2p6F56ICd9BB9ndZZEn+Fhgy7xnu6K2VYuRl9qfoi
DSF/bj65w1MOTtMDjMkGNLjdZ3vtI1UOojirtfVZGqyXwj+kEMpRFu/0dOoU
DbpPT3xqu1iOrDirZC11GvYz9YXR7pQj83KxgrMaDXxvXH4JvC6Hhy/ryEsV
GlY282eofi3HtIZ5jIMiDRSf1MIraeVQFvxEJUjTUMGrX+1aWw7phrmzi7tp
iPs81RI6UI5V9+Kujztp8BV921OyTLf/EqovxU/Dw/A9I0NcFUia5bqewEWD
iVTJNKtkBU46j9jLbKKBkGC6LIkKDJLC7cOZadh7cIXpjFEFQkjpZTv/UbE5
K5jj9u0KvEnJ0v1Co2JGTYnvw8sK6FJlN+2aoYJY3CSa/KUCe+zaelPHqcjR
ui3VmlKBTXIKfy4MUhFay36QWl0BMZLc6qZeKl7rR6rxUyqwmH50O5FIxY12
da0jSxW480DIJbuJCv3L/XomWytRYGaZm1VDhUr/Y+OneyvBbBN7rr2MCsHr
Apbfj1Xi2tTrB1yFVDCMp90qNqwEz3aa+81sKoZu//dw8GYlkrJmmEdTqaiZ
+/1sw4tK6EZ/4HmRQEWSk+fbfZ8r0RLc+54QQ0XA6l5/7eRKJBezi+4Mp8LF
rTTkZlUlvHJK6vm/U2HGahbp3V8JljrKN/nPVJx8t5qYSKvEeNOap2kgFdJc
n7KbOasQyPzEN8KHCq5A5dJ5iSrsqTn0a/0dFQs7Wup41aog5f1ll+0bKrq+
3SEeOl+Fy/0bbna5U1G0ezPZ+EYVvga93v+fKxXh0VHjj92qwOz65kPFIyo8
5U7Of/1YhfEk9Y/KD6i4k0JeLUykn2f12S3IngrDQ09ZByqqQA16UzhwkwrV
vB1cLH1VECfJHtlmQ4XIiYwde6lVeMX2QlfMggqWCoPdpzmqQToYeJT5KhUT
OtOyN3ZX47/4d7ZpF6loaHyn4qVaDW9XlwIZAyrSDCUJCf9Vo+4Ws4CFLhWf
O8u0m2yrIburV0ZfiwpXU/Pzc8+qcSbQNfEPqLg++O/K9uBqWJqe9Dt8hIrT
tp+tVRKqkTnRYLP3ABXyv1XsL5VXQ63pLzFFmort91ofufRUY9Z5YrVDnIol
2t0XIfPVMD70SitAkIq+xxzeBZtqIBWqMk/hpqKMISaIvKsGY0bKrwrZqIh+
pRnKdKQGbfVyTtLrC3i/aSBGQr8Gp/sfnxOnLsDxg2uqlk0NVFi8VaImFnBp
u1C+rWsNwu53LWf3L+D4p8wKz8Aa9BS6aZq2LUBcxLDp168amAtuFgmqWgDb
z5nOhtIaME+pTlrlLeDPPu/Bma4ajJ7/uN6SuICWX1K/eeZqoPfc8sRg2AKy
9lfQlNhrkdE2p/EtcAHfMiwYLorV4qdW5QkOjwW4H11nf3SoFo2yx7couyzA
tujLti/napEVLHFC/NYCzmke3plvVYu4Acfc3qsLOFDTtrf/SS3uycbqOugt
QEDPQZExoBZqTorC44QFrLZyqu6Oq8UDtiO0cwcWMHApVkOzpBbOxQ4j8bsX
UNWrddamsxbbQoNXuHgX8Mti0OjtTC2G/87nuLMuwG/0mVncxjoMpL1n37I0
D+dbwjfqReqg1fDvQ/74PK7MZt2fVq5D2fLazKfueag/vPCU+2wd5G8kX/lV
Pw/JldnXB6/XoVXG5d9q4Tw4nr/3ufC4Du6l8p/8UuYxxyLz2cmvDl2bns47
Rsyj423lz08xdbDr3/s6+uM88rZcj88tqkPiCqvnfq95hPkzZPaS6lC1fExj
2/N5vBb4WrT+pw5ut8Tc9RzncevrkZpdrPVIsrxuMGo7DwNxYqvGznpkKP7a
3n11HipR93qtlOrRjZP6kufnISy7dfTNmXpsqvZNqzs9D6bkuJkYi3r87Hv2
oez4PEaUT/+tfVQPFj6VhE3K86jLGWL+41MPnTPePp9l5pECN06u6Ho8nghZ
viU+j6CynfwHCutxSFjb3GXHPJ5o54gZEutxZ1y+K4drHmYNRtIPf9fDkavO
dw/bPLTOzx/8yNKAf1WMz5LX5yDb8eFYjlADPrx34jdanAPXVdlTPQcaMDX9
7Rfb9BxolCr9Ne0GdJMtMwtH5tBjbXVZzLwBQp/rHjr0zaFokvG6unMDDvWE
920jziHS/tvt6x8aYLxB4cu3+jl4UVWdXkc24KOJkhxb+RzsXUjPo/MboJa4
nnsqbw5G6/c9a9oaEEDLuHkhdQ6qL7kCpiYbIHenK10qdg5i7PFftzA34mN9
eEd+6BxY32tHKQo24trpY9ycwXOY4BlJMtjfiD1x93m4vefQFOye43i6EZMb
KqbL3eeQISxaFnStEdd3Wp6VdJ7D5x+59VkPGxFWJ6+nfHsOz/deInV5N+Jv
ULLalPkcrOMWyKvhjfh+fJVX12gOOoq+EyJ5jSBIqQcb6sxBMV1ugdDaiMBf
Ws2sx+fAp1rzz2KiEdWcpP+u75/D02upL0oYmpDgfhZ3JeYw88PN4zxHE259
csqU4Z+DxZCe9xB/E0xEXh8LYZ9D+14Rvwe7mxC9fwdT+cosTttNBbEqNCGs
b/x27O9Z5MTlfAlWbULbuUcU/f5ZyP3xCJXUasK1KPGx/KZZhCpejMj+rwls
E78daMWz4Lm/J1bnahP4X/uIrqfM4lX6fEK3bROCtW5y9v6cxdJiceotxyaM
81JXAwJmcUPVJ+vfsyb4kNUPy7yaRe8T0/z375qQab12KOLBLPQKZUtEg5sg
dE19aoP1LEoYVyqSwpogYFVO1TeahfLJ6toTCU0oGhk3fas1i6jXwU0t2U14
MHdUO1llFoLVVu2W5U1YF9h1tnbvLLw3K3UtNDUhRiu1v4NvFutnmfpf9TTB
94fPzi7WWdzzaRrkG2sCoY3VspE2g+GWb2NR801gyeA7kjUyg4u8t38fXm8C
NyfpoD9xBjUXj85Vb2qGU9u6gFnFDNQ+sy9e5mvG/usdTUIZM0jsIa1M7mqG
wMs906URMxAXjWR4KteMg188fC8EziDA3HHDliPN+MvaolD/cgYbw9U3fT/Z
jEucAiH7HGfgMsK1VVG/GeEWS6fMLWcwJdm/rdikGReV9314YDCDazfjBQxs
mrFi+D7E7MQMWuIf7xy814y9+lfNRBRncHJGW9zRtRnajFqXYkVmkHlAYN8G
z2Zs3Oy/iYlzBtIPRmSCAptB2M2XdoI2jZDMNMV9P5rheSPgN2vLNLb+dVfO
+tWMJp2ywbPx03BT+09VO6sZUVPqPVwe01hwFUVXaTPkzC+f0rWYhk3xb42b
jc1g02UZ+nd0Gp3MeadXu5pR2Hp1fhfvNHS1PM96jzTjrcTV0czff1DocclA
ZK4ZMh4yq4Xlf7C/du/FxH/NOH2EM1b16x+Ec1JNCOwtODLaKiXn+Af8+qVm
zdtb0PbZaP6Tzh+89fO1shBrwQspNYnXYn+w2nbtxrxMCxh5bc8uUX/jDr/8
3ZeHWmB/KP/tYs1vUIxX7/NqtKCn6uSs1/ffMAypcY4814Lf8fXfSu//RkXf
x6eHLregxfM/nfBTv3Fkl417lVULlhWzSapCv/HLUvmNsUMLpGLLrf3/TEEk
ktlr4kkLjHRW27KLp+A71uzz2KMFR784GOQHTIFFJjSQI6AFa764HGszhYe3
73z++r0Fx/Sib79XncJ4otp3+bgWxJh+83LinILJ3KbwwowW3Gbs0bxPnkSD
Ume0fkkLbg6fsvyQOokTTlHxlPoWSPZkBna9nkRq9oOUe50t6D1B+Wl2eRJ7
VzUymYdbkKjP8FJefhKfjvPkBcy0YNGE/Yo+0yQ2u5GL9qy2AILU2SbiBFxL
E8ozNraiu711NC9uArMbntac2taKYmaTpJ1uE7A8faaxQ6QVpGs9RqtGEyB6
7mizk27F0Ru2KeZyEzhdP9rxV7kV711yH15gmUDu1ozedydacdXpVUxf9zjk
DV4OCJ9tRegDE+UNaeMIDTAYjb/UinaNMZF6r3FsI4lNHb/eCmX7/cVHrcfx
esf0TOPdVlyzCrW6QBjHkkk+1ewx3d8rNc6dQuO4+e3d39nXrcgU36cVTBtD
H9l43d2vFU1iPMcrWsagv1uSZfu3VrC8FvSNSxxDqRWNLSKmFW0Cnw9re49B
JbqMUyW9FUoJcQ9Db44hesKPp7KoFVsyOnem6IxBSM6c/1IdPd5rCRxu0mPw
vqsgPE5qReCRdDOOzWNgSPkn5jLYiiHRbxsuTI3i/kLtns3Trfi8FPjOpGEU
wyqfpUP+tmKRt7JNNHkUlx7ZKsixtuH0u39WPwNGUZurolTA3QaRA052I86j
OLbGckRvZxtSXJptxq6OIonQeows2YbksrCkGI1R7H7xQ91BqQ3j/73ml5Ye
RWD53VNMBDom29fbco+Cje24rv+ZNtwwrnhmszwCFx2O/yQutiGB9KB698AI
fnt1XUi3aMNKimhJSO0IzBqjL2vdaYMhA2mmKX0ELdxO10iP2iBOjk3MDx2B
pqHmddtXbVjbvPu5udcIsoK22S37tKGJ1KmX7TwC6U7Kbc+QNmwQPmxQZDWC
r0JJ94Si2yD6ljrncH4EXKauTr9S23CqgvFF1YkRuIfqPjlW2Aahn1fy8xRH
QB0QdGuoacO7O1ki2mIjsNkz/uoasQ0mw4L5llwj6LLJ9JyhtKH/+VYBZsYR
nI199cHtdxt2GNkEC88No3DqfADPchvmyM8lwgeHcUBB/NNPlnboiCl+9G4f
RoTDzFclrnbEORBf1VYOgz+tIKxcqB0PxK/6nssZhifNK8poXzs6s3zVNsYP
499hk1+jB9oxI3dLYPj7MO4+lkp2Pt6Os1xXOIh+wxjIX0xn12lHkJm8T82r
YVxgqMj5fKEdXwQ3TCQ4D6NSPaBQxrwd27O/PLG/OQzVVxZlebfaIdHM4rR6
dRi/KhWrzzq3Y0o3/A30hyG6ab2+70U73nbsPrVPfRh+uvUtdz+0IzlpPeXH
wWGwfPhCYvjSDmumkawvEsNwarbr8Y1sx9HOk+PMvMOY2HaYIp7SDlP2RKtq
lmFcMWIdSc1vh/tv3afd80No/Ng2cbK6HYeK1jjkBoag3h023d7WjsXyEs3E
xiGk7XRYsCa3Q0awKPFC3hD2mWF5cbIdpzDrwBs9hE9hnGsei+2wCv3dOuQ3
BI7hbiZBZiKMOubN8p4M4dm+2I1xW4g4O1K0HmQ1hFk7Zw41QSLmbnuq3z07
hOu/tLjr9xDBbuO6oq40BNKf7Xym+4no2GD4jltwCNr7BwWn1YhwODPm1r02
iLz7yaLPTxMR+1/atYiBQShkPJPgNiTC4mDvjvvlg/ixdFYq7BoRgvKnF3Si
BrH9qLD8wZtE9LrY71T2GMTrpxMHyh4SoWw+NahqO4jlwqxDF9yJaLmUYWlz
ahC3mN6ojXgTcXBdU75qzyD6Tl444fSJiAxx2jU75kH892a3FlsEEXs85fKN
yQMoq57V+ZRERHm09ufovAGocBTpSecR0eduZGj1cQAx594b5lYSIcFTMPnj
/gCEfa8Y67YSkXWK9O3OuQG8b5U27e0jYso1XbxHcgCMfMsWdyaI+OERE7nC
NADHS5U261T6+YsjHb09FIx8Drzlw0iCuMkHaf8MCox7LR12cZKQK2zGLudD
Qa3ogYcpAiS0E9dcs+0oOG7B8FhDggT3qdXXpzQoSA5veNamQEJSgfPokDAF
u0dDXlodJYEsxjr0lUZGkNTNtzQtEqpOU/GsiQz2W0fevzEgYXefmax/LBmP
Ezb6C5jScU+Q18BLMv7MtAfH2JGwVfTFqwfXyDA/GB6i+oCENhXvBANVMlof
3PtR+5yEy9qKh5/xkqGVRYi84kWCVIvHUcaBfmT93RL3O5gEmcQf/Mmf+iFz
rDfR9ScJo2ukHm6Dfnx7Fpe2NZGEDTvb0yU294Or5FF2aA4JBV6rY6NlfXjB
crpgfwUJHJo7j15+1geaFl9pSTMJQU+0Rx6q9sH27VDl+V76eup8kwqtF921
KXVDYyTYHvio6p/Si3Nb3JofLJCg3tk+9OJuL4r09YisDB3QF310bV22Fwf9
d3YHb+5AsIYYO8NkDyLaJ/sl+TtQ3yzd/yimBwICOUPZ4h1Qk/UpvG7bg3eX
PcZ15Dvwpk4jK2tfD/6FGP3pPtKBhGtPR2+PdsO+X2L+lmYHbt/njnoW1Y3B
XfOL//Q7wHvvkc+4TTcuXC9efX+lA4fsggyjJLtRFfmBUcy2A34HT+hkjXfh
6PhV1uT7HRAOP3NmZ1wX4mVkN6s/68D9ef0fHbe6IHbn79ZWzw50Xbl+YU6+
C35JVduvB3XgRt3QZvvZTmyYD9pB/dEB3eKXclfSOuGsbCXyOr4D0d8t7pc6
dWLC6eBu/uwO/JU8tT/taCeu5jBKRpd1QPvjl1oCQyeaVhtljzR1oK/nvt3T
8g6o49v+mu4O7JGnKLm+60C62y0Vk9EOUB8f4zcx6IBkmerRqbkOzEnynpYT
7MBnVnbC07UO3MvTUdsySAKnNunklk2dcIj2GxaOJ+H5uwjt77ydiHjGyevo
TMJc/f1zirs6sabWZbBfkwQrLvXzxbKdiAo68vLeNhJIBlyXDA53ojMlfdZw
kAidwL4rgxqduPi1vZiWRkQ+6Ze5o14nRJ3zYx94EKEg+Nh6g0knsoVEjaeu
EhF2RftmkHUnBOO1sx8oE8H7nd9+371OFLh5j0lvJeINZdgx62kn0ojnDMXp
vPd3d9oj7bedaGHlM7hP583b1u6uXQGduDWzw0Yhth390fovboZ24gLn0WZr
73YYTIp4rMZ14muKuf6+++0ok/vt5Z3ZicuUS2cem9B51z7XV6S0E0pHmvtu
aLUjNuVtUGJDJ0hcE+UrB9shTL34hdDVCUZVx/vyEu34cGhvaPNwJ1LUhrIZ
+dvB5LIQbkHv68aMdD4HjnY45pXEzK92Qq0JSo50nRtd80l4ydYF7/m7Hkzr
bbh84loq7/YupBZZNXGutqHuhVxWpGgXeo9fHn+10gZUrOQdkunCZg8p/0v/
6O8KtpriKpUutKhE59kz0nXqzMcKY/UuSG22qMjc2I5gb+vaibNduCVn+J2P
rqPsTUpNj427MC1ZFOIg2I4nPMztHFZdkCnbdDt+bzumDZs7v9p34Y5fs028
UjvMg7/3yT/pwq7aqD3nT7ajrfP2YOGbLuw96XnLna6bp4TVxvT9u/Bo1KZX
yLYd2aabflO+0e+12Ed9hiftkP3RMXsvtgvKc4cPcfu24/tgJI05owtGL08W
KkS1g3vvg5WA4i7MzFl/P1bQjpe2Ggx76+n2l0JNRIntoMVyb8js6MK+rA3k
9D/tsPvdz356qAsj3wOshzcS0aOQsKVzugvzE+rP/XYRce7ek203Vujr6QnN
P44SUZymI7DC2o0nMWtiKxeIUFoU2OnF041LpfM7XtkTEXlkdNdOkW68XSVI
73tHxI4n6XsTpLrxaLsJfw1dR7wKXshAuRvv/nUzXywiYo3BQLGJ0I1inpNu
mV1E2GuIKZvrdkNhy0oEaYGIoVd/jsxd7Mbc2XmeH1tIMKrKO/7Ckr7fvmBo
bR+dtze909h+txvSgpZnewgkqJ01Ph3h0o1+RfPF3cYkJHzYd1bldTdO7fVn
KrEnQayF+l+lL92+KEb6xxsSAraXGV362o36/a42cV9JYL3oZzIe3Y0hYeb1
mhQSnD+ZmbmkdePjOPn2OJ13p7rlrTYXdeOiUpLCdCcJpiL/7EJquyE/Ejxa
MUlCk1ntHTlSN/bW/N1ycZWEkz8/3S8Y6AYh4vCBN3RezRi2cdb70w2tw5I6
x3fQ+UJS5Sl5me7vrrSTxZ4OhNxgcXfY0IPP5s+juxQ6sCW+5TUTdw/83l1l
9D7cgefToe/8hXvQONhINQWdZ/bf9ZGQ7EGIc1KzyskOWDseC0w/2IP9Br6c
K1od6MjY/FkLPUgwYtbwO9UBneXObySdHny8dPznMJ2XC45G/7Q16kHvjhDV
3hMdUHR9GL1s3gMb3T1nLI92IKzoZLzn7R6IOsx/szzQAT7mbSlCj3rgURh+
t3ZvBzw0KRm/XvagLO+/cU8BOo++Scw95tMDzmOdmgEbO3Cn5mlRw5cekNZY
jLrn6brLoVt+LaoHUc3UexfpOmWgJ1gzk9KDy1lr+UxlJFT4jjW4FfSgPE4v
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
QJyJ5egf/H/8P10AdoQ=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[CompressedData["
1:eJxFkXs41Xccx3+OSx2kuRW6olitp6swery/7k21tOhK45Q7NTTVwXbKMp2z
iBiyyehyOqF00cw0NFZqmjuh+n4lNqfLWSXrONrZ8+zZPs/zeT7P6/n8875Y
CvZ8FMLjOC5Yvf/chT/VW+R6UTzfdGn3eSNzYvOjr3uED8Wjkt+dTMPNSPYZ
swi/9RTSKdUlbknTiUbmw3T4UZjXXRMGHZxG9iRKryzcSnFK+P6wXGhK+kI+
uWe6Q813rTjf3SbEx9eR09hJEWR3cJ+jwJhcc+Js5GEUdtKlHLfDiMyff3NN
VzSF47z5PGW4ITk+9VhsfSyFR+laWduRdwj3ZnNuWQLFp/WOvD8lU8nuR3Nq
8hIpxGsH87e6GZDe5iGWIqJw32Kyf5PTFPJB1YXJew6r//HT8vXj9cm1kn2L
t4kpzl3/ujNoSI/MU6v3zKC4mTPiFJSuR7L2TxIuzaY4MNzg/Ha7HnkruHty
Rj5F8iErP2M3PRKzLrdBp5Dicm3+DuEyPXLP4eMRRTHFCfON1vNm6JHVVraG
/WcpPs94GeSi0CWV+s/sb5ZSZJ2RbreW6hLr15UBlysoqrzCXlk46JJM+tmh
wkqK30L9Ysfy+GTitpf0SDXFSbNkFn9nMomuNGjeW0vxc1n8Wqf2SeReUeeL
jxsobg/2Z9ZU6hBvSaH5miYKo14ty6pkbXL101DY31X7M9JeE71Si1gFLQ6x
bKe436HQKhrhkWM+o2L9HopvHJLL0ss1iMru+sXX/RSa/U1GXRKORM1J7WSM
IjpLNDE8+y16+B+O/zqk7tufzLRKVcHrpalVlZyisG9TuOH2cVy53+99SkER
cyxvafhpJSxvnY7JGFX7GVvs/zhUiYzLMceFSgp7vW7bugIlVN+urArhGJSP
UkOtnccRmaa676vNUB7u9aTeQYXuuAatVboM7bfOG0SKJuAZeHSh7VSGAzph
363gOHLZ29/XyIQhfq5ooeouRyyXz0pQmTG4SvrSIos1SPrMwYLhWQzGu047
R0fwyLhOWV2bFYN5qHOXeJomiVDsHbpuy5A2/n3AuQJN0tW7aopsEUNuQPyD
0RFN4tGotSJnGcO6E7p9fJUmuXTxzhaRPYPGLwu6eTc1ydyC7M+inBnqXNJS
jvpokqOHA05tIgyJFVWc6EseUe6Z1+TqyfB1Z4LoVaoGCd8mf7bIh2HDWZuh
On+OdHpcMTVbzyBJKC2OmzwBjyVJzpp+DNOfaIc+XK1EhblH8NMtDF/IUxoE
x8YwR0v/y55Atd7gXaNaE6/w1dO20p8FDO9670t+Kn2BN90FrRfCGCwS876P
LVQg7MbOsRPRDG71zTLbG8/QUfbe7NRYBvfI8rkbuuVwz3vhHpvAUMIXxu4Q
/IGLh6ojAhIZhE8SrjMMY3ZMSoa3iEGnr6VU9OFjSDavubr8MEOQfY5BxieP
8Jerce8sMcOylYfO8TMZwhb1cvwMBkuDxxaBpx+ifVqJzcvjDMk9N1yct/XD
TSNq7YM8hqvlq3ytg3pwYWR5XNO3DM0if/nBhA7M6nyTe7WYwVsxf7dPdQsk
tfU1RWfVeSyIG7PJuYMxmXhAUsqQNHlketreRoTmfMTfV8HQkv3FdzFL6tD2
ucUSQSWDSbpqMf2mCq6RzG9dNcO5H6KUW7IvodxPJnSsVedV0WbZ6CzDTMQV
WTcw3DIowmHtYogXODUaNDHYeajE/tPz8NqYJ/+rmWHjj/tnavlnIGTiluFg
G4PvBpF8eWsKWoczHX7rZnAKlGS9FuwHadsaWN3P0FuU8kLXLgblNZYpZxiD
R6T8oQcvGDOkv0szhxiivrrYcdtzI45kVTQnyRmy5uokci6eGE068DJMwdB6
fnONd6M9doW5WmwcZbin+GFEUGuLlg184qJU+ykIkK02MwNWtYQs4AYw9cmV
vNuNk1Bmky8x0R6A4flS86zWURcLw+CKt/wBlDtO0KXrB13SlO92/WEwgJ3i
9hXHt7W5vBp8Pt5hPIAj6ZGOJ2W1/zH375h1PpfpP/if/wYukOvE
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.85, 0.85]], 
        LineBox[CompressedData["
1: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
5vFIPfbsB3Dkvug/X4L+4V4WbxPUD+gck76OPw0IhZocSVxMPxyb8HurytqH
nBadUm9M7QeUlN7lDZI2RJLKGvMjrx8eF3Y/5nqGRVTGqU8xVPaDydbo09za
OuRtcbyDeGM/PKH7Wy95/xM64KPY2Mvufvg6MUliUBSPztJsu+E2vBevRlZ3
MV86uvmq+qfM6X7oywuXV2etQKZpV3Z65vsh13Vwkhbtgfyd9nyxsd4PQd8J
K7M9nciJipNozv8GQH/37VtnFzW0WEABuzTNAKB8dpVuX8tBHunKvDdkHgBq
5atLAqwdiBFCGAnkGgDxoi/Pd0s/I54MZtfLBAegfu9yUbuYhk6aI4sauzwA
ndkb3MGoFgRTHbVJCgNAw249uTyLRkZChFXO3RsAslheAfnlGmTNoKHskeIA
8JMQAsE2D6GXUmG1URuAN/aGCrwaeegLLAvWsa8HwE9uzMOxvwJ9d955sMFs
AKRrBhnuWdUg2vUsV3+8H4DZR08lzKyiEMfIrDB69wGIKBh5eXjlMxJtIrV2
NWAA7lsav3LX70CXSOOevIzao790GDXqbkN62Q2LXZMHYPXM4UdDq1XI/O9d
psycAXhLpnzpxNd8NGVLiGVP2QCEFXxpvNRQj+aNFehfrxuAoyJC+ubnS9Bg
WS3K2TkAm1QNp3x0R9HPZRWDbw8OwKUF2uDi5MeSVlxzSwaTAyDHEJqQYa4n
GbRm9zjwxwBU67ddvhvyXjK7g76gdHUAdGJFgo5d8ZNsTUylH9sdgG3Kusj3
9PGSMzYSZqRHcMAvXV1MGpknSaKAxQoy4WD0OvmsAbpGkp1PR+QRJw5usEu4
2bzESl7d3vS3PouDho9bBBLyccnHPX6/Pl3CgfjRb8ep/X9KvknjUWhAcKAZ
+0fP2HtT0su+LOf7HRzcUtlUfXqRHFIU5ejoH+EgYuTXN5YqBqgRmDK++hwH
V0lW8Fm1nEDYtepU08FBvlEWxbbHWVgfoL7gaoKDi+SpLJZkosCYFe/z2RYH
cYtyWvM5CAg5i/3EuuBA3azm3Q9KaZBVbru/7osDhl8nOh6SyoOOkHrmyQgc
9Je4BxOGlMCJdOXI7UQcWDzU9+e49AJiRjwNDLJw8MdQ2zQoWAvK8k62BZTg
IFmc36qP8Br63AsESmtwcDkiIiN21hh+vZDxGm3DgXBLovTRB+ZwRJQwd3gA
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
/wOAngcI
         "]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxFeHc4luH7vowSZUtRJJVKQ0UL7/kqimzKTGUmmaGIMkrI3mTv7L1fXnvv
vYlKURkpldHP7zi+n8/n+ec5zuM6z+u+rue6j+u674dX11zZgJKCgmI7FQXF
/3/zrltFHq5NJ1P83zOxe7l73NTvv3iXtXYKm68veazoXDsb+1ncbRtIM73q
Q9Zfb6SkvQFkHVbMavjpRaZepGK+NScDiufNuTypnuQ50Y7L9DfVodR/tdD2
zhtywwXSuM9bfcSfIpV0M3qQU4f0jq3utMQPV2HSiVo3cqBK03dvO3tITmSR
Xz55TXZb9+h6EeaKkAvHaseOu5LlU4TiPb38MOsT1yA8/pK83fyHi3RZGC7N
crb4+LmQ5925Vj9RxsMDQe2z15zJzl6SpQNBqSg6wxXv/N2RvO8qS65oUS7U
p3annr/9nLz/vGRI/pdi/PWjyPlY/oys/fxUpuozMiLFfxSFHrIlb0ZqqKie
rwNh+WOFtIcNuYJDKjL+RjOm4ofq1hYekx1JLV2rQx14pdLamqlqQR6jrQSv
Zg+kaB2SyM8ekR92X9i/R6Yffg918vmkDMmuFuoJWRxDGGq5Xu3GrkPWmTlW
6BY8AkF19ejBejXyJt2BktiIMTgJX7dG9U3y0jk3u/LtE6CYM8smjPKTmeRe
cN6pmECV04HLxBQxeNum7WnIm0BslMPyjk4lmOStPbH7PI6Do7kDELqDPSYK
kYumY5Dyshovl9XDlRO3r2XeHQGtgE+nmqMRct163OYnBlHV/K76R64ptA+N
TLhx9EO04P3wjceWEJi/HV1+tgeRVAs9wfTW+Bw7lBiR3IHfyuutM4lPIHBK
pEnzYjPU43fWnyXYYbtZEpWZRB0KlvZUOg7ao0so/kPZABlM4oeL2y1eoCO4
4SCLVQkuNe0d2u3qhAnzwHJD7Tx8Mo/pK+h2RgHb7dDAbekI4TjarcX9Es7i
Ke92P0mABDmjnfLRK/CKflSd9YrAiuH5ltRiVxS92mOXJRqIeIayBkVqN3Bz
v5c0LH0DxSJi7aqiO85MNQ571bqA4m4jOTrKA7uSz+/x17VHDo08SXLuDRr1
+7rmw21wJ7Ov5OsFL2Rplyc85LLCrttahYEvvfGD5qQ6I68VSOvvc690+UD4
jk9M10EbCCkLDVow+OGCscgF2grbLb9Pb9cV+OG6Oibii57jw5+yXg4tf/Bq
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
/x/q0p5z
         "]], 
        LineBox[CompressedData["
1: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
XlsuXQ+Jrk8F7D4GXP/T/+d/AVrv0oA=
         
         "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-0.05422319803073373, 
      0.6209777201353885}, {-2.8759237322281593`*^-13, 6.268232087740884}}, 
     PlotRangeClipping -> False, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Hamming distance from the true code\"", TraditionalForm], 
       FormBox["\"Number of images\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-0.05422319803073373, 
      0.6209777201353885}, {-2.8759237322281593`*^-13, 6.268232087740884}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Fa Genuine\"", "\"Fb Genuine\"", "\"Rc Genuine\"", "\"Fa Imposter\"",
        "\"Fb Imposter\"", "\"Rc Imposter\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.85]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.87, 0.94, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.87, 0.94, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.5666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "GrayLevel[0.85]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.702456403023285*^9, 
  3.702456725722028*^9},ExpressionUUID->"bfc0b375-6480-45ca-a69a-\
9d9e25748c7f"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Subject 00468
(Almost Perfect FB but Low RC Matching Scores)\
\>", "Section",
 CellChangeTimes->{{3.695849118550416*^9, 3.695849122037072*^9}, {
  3.695849166096017*^9, 3.695849174294766*^9}, {3.695851987060305*^9, 
  3.6958520061002398`*^9}, {3.695852508273757*^9, 3.695852508639756*^9}, {
  3.695852544466386*^9, 3.6958525463845167`*^9}, {3.695852667613948*^9, 
  3.695852667932583*^9}}],

Cell["\<\
Subject 00636
(Almost Perfect FB but Middle RC Matching Scores)\
\>", "Section",
 CellChangeTimes->{{3.695849118550416*^9, 3.695849122037072*^9}, {
  3.695849166096017*^9, 3.695849174294766*^9}, {3.695851987060305*^9, 
  3.6958520061002398`*^9}, {3.695852508273757*^9, 3.695852508639756*^9}, {
  3.695852544466386*^9, 3.6958525463845167`*^9}, {3.695852667613948*^9, 
  3.6958526806534557`*^9}, {3.695852762808779*^9, 3.695852763422669*^9}}],

Cell["\<\
Subject 00682
(Low FB, Low RC)\
\>", "Section",
 CellChangeTimes->{{3.695849118550416*^9, 3.695849122037072*^9}, {
  3.695849166096017*^9, 3.695849174294766*^9}, {3.695851987060305*^9, 
  3.6958520061002398`*^9}, {3.695852508273757*^9, 3.695852508639756*^9}, {
  3.695852544466386*^9, 3.6958525463845167`*^9}, {3.695852667613948*^9, 
  3.6958526806534557`*^9}, {3.6958527869454117`*^9, 3.695852798552681*^9}}]
},
WindowSize->{1142, 1017},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 184, 2, 64, "Section", "ExpressionUUID" -> \
"ca897c7e-0a46-4022-be45-788811f11532"],
Cell[767, 26, 195, 4, 46, "Text", "ExpressionUUID" -> \
"5832968a-95cd-44f0-8ad7-43f5e2dc335c"],
Cell[965, 32, 171, 2, 46, "Text", "ExpressionUUID" -> \
"e897691d-ae61-4d69-8a8f-6ec7975b7286"],
Cell[1139, 36, 313, 4, 46, "Text", "ExpressionUUID" -> \
"dc970c9c-d134-409f-8a32-8ab04d125a74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489, 45, 100, 1, 64, "Section", "ExpressionUUID" -> \
"4c291f85-5d9f-49ed-91ab-c80f8d1dd9c1"],
Cell[1592, 48, 856, 14, 103, "Text", "ExpressionUUID" -> \
"0f4613ab-ab41-45a0-b092-41b2bd72e6b3"],
Cell[2451, 64, 600, 18, 32, "Input", "ExpressionUUID" -> \
"0d8ccb85-9e4d-4fd9-9aa4-8c38ec41cd91"],
Cell[3054, 84, 539, 10, 65, "Text", "ExpressionUUID" -> \
"7a541889-12eb-4678-9ca1-f712fa4fc323"],
Cell[3596, 96, 280, 8, 32, "Input", "ExpressionUUID" -> \
"dbcfa25b-7bc2-4287-bb6c-7807c9f41e8d"],
Cell[3879, 106, 245, 5, 46, "Text", "ExpressionUUID" -> \
"1ffc0e77-0099-45ab-a469-5c6d5a90d468"],
Cell[4127, 113, 2796, 63, 180, "Input", "ExpressionUUID" -> \
"2227902b-df6f-40b6-841e-1a5c703be86f"],
Cell[6926, 178, 2313, 56, 180, "Input", "ExpressionUUID" -> \
"df4de3bd-1e11-4c0c-9f3a-83420de4bd53"],
Cell[9242, 236, 2403, 56, 180, "Input", "ExpressionUUID" -> \
"07728eae-856c-401e-8e6e-b159e98fc745"],
Cell[11648, 294, 9595, 237, 789, "Input", "ExpressionUUID" -> \
"a2afacde-930c-4d8e-95d8-47928b795da0"],
Cell[21246, 533, 141, 2, 32, "Input", "ExpressionUUID" -> \
"25bb9364-9b71-465c-b49a-d6f2870bf77c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21424, 540, 191, 5, 99, "Section", "ExpressionUUID" -> \
"15ce745e-906f-416b-bcb3-d4869a617a10"],
Cell[CellGroupData[{
Cell[21640, 549, 299, 7, 32, "Input", "ExpressionUUID" -> \
"9063f844-c58b-488b-b655-293b7b62658c"],
Cell[21942, 558, 154460, 2948, 142, "Output", "ExpressionUUID" -> \
"58f8ec7c-6072-4122-b82b-1e9fd52b357a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176439, 3511, 294, 7, 32, "Input", "ExpressionUUID" -> \
"0c7cfcf8-d760-42c6-bc77-67061b29b5b4"],
Cell[176736, 3520, 39574, 825, 142, "Output", "ExpressionUUID" -> \
"363fe3e8-efca-439c-bdc7-d087329200fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216347, 4350, 230, 5, 32, "Input", "ExpressionUUID" -> \
"e523f523-3170-472a-ac76-1071a105c98a"],
Cell[216580, 4357, 22358, 462, 209, "Output", "ExpressionUUID" -> \
"dd1827bf-23cd-4540-a043-1bf24240e647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238975, 4824, 228, 5, 32, "Input", "ExpressionUUID" -> \
"033c64c3-322e-491a-a130-9f4253670005"],
Cell[239206, 4831, 21954, 452, 209, "Output", "ExpressionUUID" -> \
"c29017bf-6b3c-4774-8d9e-ff1cb3e853b3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[261209, 5289, 305, 5, 64, "Section", "ExpressionUUID" -> \
"368d651a-4492-4c8f-9345-96b17593ebeb"],
Cell[CellGroupData[{
Cell[261539, 5298, 326, 7, 32, "Input", "ExpressionUUID" -> \
"647992be-4bb7-4ef8-b410-c29277badbb4"],
Cell[261868, 5307, 94436, 1784, 369, "Output", "ExpressionUUID" -> \
"1d9c8f03-41e2-4294-994b-872a21a290e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356341, 7096, 330, 8, 32, "Input", "ExpressionUUID" -> \
"6534751d-2ae7-4e7b-854f-81eb7fb02e89"],
Cell[356674, 7106, 92021, 1958, 432, "Output", "ExpressionUUID" -> \
"64722b15-8b92-43dc-867d-28f8ead16c10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448732, 9069, 245, 5, 32, "Input", "ExpressionUUID" -> \
"bd095ef2-ef03-4c8d-82a3-110ca2af90b4"],
Cell[448980, 9076, 133002, 2317, 442, "Output", "ExpressionUUID" -> \
"bfc0b375-6480-45ca-a69a-9d9e25748c7f"]
}, Open  ]]
}, Open  ]],
Cell[582009, 11397, 399, 8, 99, "Section", "ExpressionUUID" -> \
"6b96fe8c-9c3a-4f61-bc10-ae0eb0066751"],
Cell[582411, 11407, 450, 8, 85, "Section", "ExpressionUUID" -> \
"a5559037-a5f5-4c6c-b15d-7f155eb0cfee"],
Cell[582864, 11417, 419, 8, 85, "Section", "ExpressionUUID" -> \
"d7b365bd-9bf5-4b84-8f11-c570a2a8522b"]
}
]
*)

