(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49781,       1274]
NotebookOptionsPosition[     44622,       1153]
NotebookOutlinePosition[     44976,       1169]
CellTagsIndexPosition[     44933,       1166]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Legend for coloring", "Section"]], "Section",
 CellChangeTimes->{{3.695850564653019*^9, 3.695850575896942*^9}, {
  3.695850708085136*^9, 3.695850708893023*^9}}],

Cell["\<\
Flow of the discussion and labels for the action being performed.\
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["Technical comments (mostly on the Mathematica commands).", "Text",
 CellChangeTimes->{{3.695850626658449*^9, 3.69585063854694*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell["Comments and thoughts on what we are seeing.", "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Technical Setup", "Section",
 CellChangeTimes->{{3.695850690876594*^9, 3.695850693172535*^9}}],

Cell["\<\
Define some system-specific variables here - e.g. the base path for where the \
data files are stored. For some reason, Mathematica does not import the file \
successfully if it\[CloseCurlyQuote]s just located in the same folder and the \
path is omitted.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"a44fe5f3-dac1-47f7-b46c-88c74282d4c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "pathBase", "=", 
   "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.695848948744624*^9, 
  3.695848975937291*^9}},ExpressionUUID->"23be5e82-fe7f-4995-92bf-\
4f99c8303be1"],

Cell["\<\
Define function functions for accessing the data. Note that these functions \
(or most of them) do not work over the index but over the row itself provided \
as an argument. That is because functions such as Select in Mathematica \
provide for that.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell["\<\
First some functions to be used in the Select clause to pick out subjects and \
codes.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.6973677803628283`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"isSubject", "[", 
     RowBox[{"subjid_", ",", "r_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "subjid"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "checks", " ", "if", " ", "the", " ", "given", " ", "row", " ", "belongs", 
    " ", "to", " ", "the", " ", "given", " ", "subject"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isImgCode", "[", 
    RowBox[{"code_", ",", "r_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "code"}]}], ";"}]}], "Input",\

 CellChangeTimes->CompressedData["
1:eJwd0VtIkwEABeDlQp1Xig0tLykipA6WN6KYsIm5LJk5yivITJwXRIVhBYn6
EuRtvrh/jQyzkdccykqrqWg5bxOlSNPp2CYibvOaJqmw9Z//4fA9nfNyQh9X
iApdaDRaBBnoc5Hp+brezu/+fcEPRp/3sqGQ0HKg111zFvThLuVBhqJUv9Vg
57+nVy/AqY7wlStNdv7a4g1KSewjIyRsAWbIDeNtwYOdO2cwJlXihDc7uR5X
SR0aqwAWdilFMLd+LQN+2VdJYJnNVAq5AyFS6F2R/hx+s8leQh6jqAW2yq2U
BsGEHEZWCrphOU+shQ/ZVWNQ3Zj/HX5WvPoBR4cXDLDSZKFsMx2Z4ZtNTwuM
cfKt1I5bkh0enE39g+IQbyd0cSTTA0g7M/so24zXPwSix1apoW6JqYGXhayP
cHPx8Cucj0umBZHW+I/EwzLziyQ4rp9Nge0JVkqHTpkB9+4VFMGnc3UyyDHq
WuBg2rIc+v4sIOCTEmkH/KV1fQdjE0800PB2+xN0ChnTUCRVz8OZnFNLJOnY
354NOLTu2IFh+uBd+KB/6A90z2QewWd1YnoUaXQi6xKsPQ1nQWIy7Rr0k6my
oEKQmw03mm/13CadLFaq4XK1YWIX/63e10H342DXPVI3gkP5H3oSTGM=
  
  "],ExpressionUUID->"ca5bd5e9-50ff-4c14-a6a0-b2f6be0d997e"],

Cell["Next, some functions to select the code for the subject.", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.697367807635425*^9}, {3.697767649021193*^9, 
  3.697767653210724*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"vector", "[", "r_", "]"}], ":=", 
    RowBox[{"r", "[", 
     RowBox[{"[", 
      RowBox[{"4", ";;", 
       RowBox[{"Length", "[", "r", "]"}]}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "used", " ", "to", " ", "get", " ", "just", " ", "the", " ", "MEB", " ", 
     "from", " ", "the", " ", "row"}], ";", " ", 
    RowBox[{
    "the", " ", "first", " ", "3", " ", "entries", " ", "are", " ", 
     "metadata", " ", "such", " ", "as", " ", "subjid", " ", "and", " ", 
     "imgcode"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"quantize", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", ">", "0.0"}], ",", "1", ",", "0"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"quantize", " ", "a", " ", "single", " ", "number"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"quantizedVector", "[", "r_", "]"}], ":=", 
    RowBox[{"quantize", "/@", 
     RowBox[{"vector", "[", "r", "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "return", " ", "the", " ", "quantized", " ", "MEB", " ", "for", " ", "the",
     " ", "row"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"targetForSubject", "[", 
    RowBox[{"subjid_", ",", "data_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"quantizedVector", "/@", 
      RowBox[{"Select", "[", 
       RowBox[{"data", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"isSubject", "[", 
           RowBox[{"subjid", ",", "#"}], "]"}], "&&", 
          RowBox[{"isImgCode", "[", 
           RowBox[{"\"\<fa\>\"", ",", "#"}], "]"}]}], "&"}]}], "]"}]}], ")"}],
     "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "find", " ", "the", " ", "real", " ", "MEB", " ", "of", " ", "the", " ", 
     "given", " ", "subject"}], ";", " ", 
    RowBox[{"returns", " ", "just", " ", "a", " ", "single", " ", "list"}]}], 
   " ", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imgCodeVectorForSubject", "[", 
   RowBox[{"subj_", ",", "code_", ",", "data_"}], "]"}], ":=", 
  RowBox[{"quantizedVector", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"data", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"isSubject", "[", 
         RowBox[{"subj", ",", "#"}], "]"}], "&&", 
        RowBox[{"isImgCode", "[", 
         RowBox[{"code", ",", "#"}], "]"}]}], "&"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.697765993987249*^9, 3.697766011952283*^9}, {
  3.697766045456891*^9, 3.6977661129858913`*^9}, {3.697766386530478*^9, 
  3.697766387387166*^9}, {3.697766459767111*^9, 3.697766460711588*^9}, {
  3.6977672035339518`*^9, 3.697767245885685*^9}, {3.69776731203275*^9, 
  3.697767316103174*^9}, {3.697767397638145*^9, 3.697767445239097*^9}, {
  3.698149844992034*^9, 
  3.698149857158798*^9}},ExpressionUUID->"5bcf5400-bb08-4938-ac5a-\
9763fc02ceee"],

Cell["\<\
Here are some functions to compute the distance between the fa and the fb/rc \
for a subject.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.697367807635425*^9}, {3.697767649021193*^9, 
  3.697767671627081*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"faFbDist", "[", 
    RowBox[{"subj_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"HammingDistance", "[", 
    RowBox[{
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj", ",", "\"\<fa\>\"", ",", "data"}], "]"}], ",", 
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj", ",", "\"\<fb\>\"", ",", "data"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"faRcDist", "[", 
    RowBox[{"subj_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"HammingDistance", "[", 
    RowBox[{
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj", ",", "\"\<fa\>\"", ",", "data"}], "]"}], ",", 
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj", ",", "\"\<rc\>\"", ",", "data"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"faFbDiffSubjDist", "[", 
    RowBox[{"subj1_", ",", "subj2_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"HammingDistance", "[", 
    RowBox[{
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj1", ",", "\"\<fa\>\"", ",", "data"}], "]"}], ",", 
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj2", ",", "\"\<fb\>\"", ",", "data"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"faRcDiffSubjDist", "[", 
    RowBox[{"subj1_", ",", "subj2_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"HammingDistance", "[", 
    RowBox[{
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj1", ",", "\"\<fa\>\"", ",", "data"}], "]"}], ",", 
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj2", ",", "\"\<rc\>\"", ",", "data"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distSubjCodes", "[", 
    RowBox[{"subj_", ",", "code1_", ",", "code2_", ",", "data_"}], "]"}], ":=", 
   RowBox[{"HammingDistance", "[", 
    RowBox[{
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj", ",", "code1", ",", "data"}], "]"}], ",", 
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj", ",", "code2", ",", "data"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distDiffSubjectsForCodes", "[", 
    RowBox[{
    "subj1_", ",", "subj2_", ",", "code1_", ",", "code2_", ",", "data_"}], 
    "]"}], ":=", 
   RowBox[{"HammingDistance", "[", 
    RowBox[{
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj1", ",", "code1", ",", "data"}], "]"}], ",", 
     RowBox[{"imgCodeVectorForSubject", "[", 
      RowBox[{"subj2", ",", "code2", ",", "data"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6977675930976963`*^9, 3.697767620395381*^9}, {
  3.697768396858053*^9, 3.697768410701078*^9}, {3.697768556381795*^9, 
  3.697768556916205*^9}, {3.6977687593268967`*^9, 3.697768818505282*^9}, {
  3.699478069113306*^9, 3.6994781383029757`*^9}, {3.699478293337532*^9, 
  3.6994783379700327`*^9}},ExpressionUUID->"c0a2259d-3d8f-4b6b-836c-\
34df61467403"],

Cell["\<\
These functions get some listing of subjects that we can work with for the \
evaluation, including imposter pairs and such.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.6973677803628283`*^9}, {3.6973678160853243`*^9, 
  3.697367868717016*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"allsubjectsSorted", "[", "data_", "]"}], ":=", 
    RowBox[{"Sort", "[", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "gets", " ", "a", " ", "list", " ", "of", " ", "all", " ", "subjects", " ",
     "in", " ", "a", " ", "sorted", " ", "order"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"allsubjectsShuffled", "[", "data_", "]"}], ":=", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"allsubjectsSorted", "[", "data", "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "gets", " ", "a", " ", "list", " ", "of", " ", "all", " ", "subjects", 
     " ", "in", " ", "a", " ", "SHUFFLED", " ", "order"}], ",", " ", 
    RowBox[{"used", " ", "for", " ", "imposter", " ", "generation"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imposterPairs", "[", "data_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"allsubjectsSorted", "[", "data", "]"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"allsubjectsShuffled", "[", "data", "]"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"allsubjectsSorted", "[", "data", "]"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allSubjectsWithCode", "[", 
    RowBox[{"data_", ",", "code_"}], "]"}], ":=", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"data", ",", 
       RowBox[{
        RowBox[{"isImgCode", "[", 
         RowBox[{"code", ",", "#"}], "]"}], "&"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imposterParisForSubjectsWithCode", "[", 
    RowBox[{"data_", ",", "code_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"subj", ",", "imp"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"subj", "=", 
      RowBox[{"allSubjectsWithCode", "[", 
       RowBox[{"data", ",", "code"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"imp", "=", 
      RowBox[{"RandomSample", "[", "subj", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"subj", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"imp", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "subj", "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imposterParisForSubjectsWithCodeWithSpecificImposterPairs", "[", 
    RowBox[{"data_", ",", "code_", ",", "pairs_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pairs", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"pairs", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "subj", "]"}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6973677922483397`*^9, 3.697367840928968*^9}, {
  3.697367876553668*^9, 3.6973678797585783`*^9}, {3.697767681972005*^9, 
  3.6977676949004173`*^9}, {3.697768565245699*^9, 3.697768601718479*^9}, {
  3.697768681774829*^9, 3.697768685294572*^9}, {3.699477805667152*^9, 
  3.69947803659625*^9}, {3.699478452930509*^9, 3.699478453488469*^9}, {
  3.69948034990022*^9, 
  3.6994804126816797`*^9}},ExpressionUUID->"4e051a86-002a-44a8-b28e-\
6bb396f1a1dd"],

Cell["\<\
These functions generate the fa/fb and the fa/rc distances for all subjects.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.6973677803628283`*^9}, {3.6973678160853243`*^9, 
  3.697367868717016*^9}, {3.697767697379546*^9, 3.697767706915917*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allFaFbDistances", "[", 
    RowBox[{"subjects_", ",", "data_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"faFbDist", "[", 
      RowBox[{"#", ",", "data"}], "]"}], "&"}], "/@", "subjects"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allFaRcDistances", "[", 
    RowBox[{"subjects_", ",", "data_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"faRcDist", "[", 
      RowBox[{"#", ",", "data"}], "]"}], "&"}], "/@", "subjects"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"allDistancesForCode", "[", 
    RowBox[{"subjects_", ",", "code_", ",", "data_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"distSubjCodes", "[", 
      RowBox[{"#", ",", "\"\<fa\>\"", ",", "code", ",", "data"}], "]"}], 
     "&"}], "/@", "subjects"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697767720259822*^9, 3.69776777949415*^9}, {
   3.697768170805359*^9, 3.6977681715725107`*^9}, 3.697768610368012*^9, {
   3.697769512044937*^9, 3.697769532995646*^9}, {3.6994781499944277`*^9, 
   3.699478205060358*^9}},ExpressionUUID->"138e14c2-a1ca-42dc-a4f8-\
b709784c96ce"],

Cell["\<\
Finally, these functions give us the data in a format of tuples of the form \
(subjid, genuine_score, imposterid, imposter_score). The imposters are chosen \
randomly in each run.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.6973677803628283`*^9}, {3.6973678160853243`*^9, 
  3.6973678954938374`*^9}, {3.697371070019114*^9, 3.6973710770582733`*^9}, {
  3.697371358395001*^9, 3.697371401747113*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"4ba12882-3a73-43bc-beae-3d028318c709"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"genuineAndImposterDataInTuples", "[", 
    RowBox[{"subjectPairs_", ",", "genuineScores_", ",", "imposterScores_"}], 
    "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"subjectPairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"genuineScores", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"subjectPairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], ")"}], "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"imposterScores", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "subjectPairs", "]"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6973704713412313`*^9, 3.6973706246547823`*^9}, 
   3.697370671658127*^9, {3.697370993643567*^9, 3.697371000273035*^9}, {
   3.697818925199761*^9, 3.6978189715468893`*^9}, {3.697819183330203*^9, 
   3.69781918656855*^9}},ExpressionUUID->"3d1177fb-38aa-42f9-bb50-\
3a34e0bdf560"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"allGenuineAndImposterScoresFromData", "[", 
    RowBox[{"data_", ",", "code_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "pairs", "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"pairs", "=", 
      RowBox[{"imposterParisForSubjectsWithCode", "[", 
       RowBox[{"data", ",", "code"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"genuineAndImposterDataInTuples", "[", 
      RowBox[{"pairs", ",", 
       RowBox[{"allDistancesForCode", "[", 
        RowBox[{
         RowBox[{"pairs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "code", ",", 
         "data"}], "]"}], ",", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"distDiffSubjectsForCodes", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<fa\>\"", ",", "code", 
             ",", "data"}], "]"}], "&"}], ")"}], "/@", 
         RowBox[{"(", "pairs", ")"}]}], ")"}]}], "]"}]}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allGenuineAndImposterScoresFromDataForSpecificPairs", "[", 
   RowBox[{"data_", ",", "code_", ",", "pairs_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "pairsLoc", "]"}], ";", " ", "\[IndentingNewLine]", 
    
    RowBox[{"pairsLoc", "=", 
     RowBox[{"imposterParisForSubjectsWithCodeWithSpecificImposterPairs", "[", 
      RowBox[{"data", ",", "code", ",", "pairs"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"genuineAndImposterDataInTuples", "[", 
     RowBox[{"pairs", ",", 
      RowBox[{"allDistancesForCode", "[", 
       RowBox[{
        RowBox[{"pairs", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "code", ",", "data"}],
        "]"}], ",", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"distDiffSubjectsForCodes", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<fa\>\"", ",", "code", 
            ",", "data"}], "]"}], "&"}], ")"}], "/@", 
        RowBox[{"(", "pairs", ")"}]}], ")"}]}], "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.697371299553843*^9, 3.697371342900865*^9}, {
   3.6977689489080133`*^9, 3.697768975194549*^9}, 3.697769577925952*^9, {
   3.697769738517702*^9, 3.697769739166135*^9}, {3.6978190985348454`*^9, 
   3.697819103389431*^9}, {3.699478235514512*^9, 3.699478262560835*^9}, {
   3.699478370205411*^9, 3.699478375851318*^9}, {3.699480430091783*^9, 
   3.699480461339313*^9}},ExpressionUUID->"18d63c65-a2af-4797-babf-\
e38c63916bae"],

Cell["\<\
More functions to calculate the confusion matrix, GAR\[CloseCurlyQuote]s, FAR\
\[CloseCurlyQuote]s, etc. -- these will work with data in the format output \
by allGenuineAndImposterScoresFromData, i.e. the 4-tuple format.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.6973677803628283`*^9}, {3.6973678160853243`*^9, 
  3.6973678954938374`*^9}, {3.697371070019114*^9, 3.6973710770582733`*^9}, {
  3.697371358395001*^9, 3.697371401747113*^9}, {3.697400980605628*^9, 
  3.697401043780719*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"4ae3ff8b-4321-41a4-a73b-564b84f363b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"genuineScores", "[", "resultsTuplesData_", "]"}], ":=", 
   RowBox[{"resultsTuplesData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imposterScores", "[", "resultsTuplesData_", "]"}], ":=", 
   RowBox[{"resultsTuplesData", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"truePositive", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#2", "<", "threshold"}], ",", 
        RowBox[{"#1", "+", "1"}], ",", "#1"}], "]"}], "&"}], ",", "0", ",", 
     RowBox[{"genuineScores", "[", "resultsTuplesData", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"falseNegative", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#2", ">=", "threshold"}], ",", 
        RowBox[{"#1", "+", "1"}], ",", "#1"}], "]"}], "&"}], ",", "0", ",", 
     RowBox[{"genuineScores", "[", "resultsTuplesData", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trueNegative", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#2", ">=", "threshold"}], ",", 
        RowBox[{"#1", "+", "1"}], ",", "#1"}], "]"}], "&"}], ",", "0", ",", 
     RowBox[{"imposterScores", "[", "resultsTuplesData", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"falsePositive", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#2", "<", "threshold"}], ",", 
        RowBox[{"#1", "+", "1"}], ",", "#1"}], "]"}], "&"}], ",", "0", ",", 
     RowBox[{"imposterScores", "[", "resultsTuplesData", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gar", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"truePositive", "[", 
     RowBox[{"resultsTuplesData", ",", "threshold"}], "]"}], 
    RowBox[{"Length", "[", "resultsTuplesData", "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"far", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"falsePositive", "[", 
     RowBox[{"resultsTuplesData", ",", "threshold"}], "]"}], 
    RowBox[{"Length", "[", "resultsTuplesData", "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"frr", "[", 
    RowBox[{"resultsTuplesData_", ",", "threshold_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"falseNegative", "[", 
     RowBox[{"resultsTuplesData", ",", "threshold"}], "]"}], 
    RowBox[{"Length", "[", "resultsTuplesData", "]"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.69740100836029*^9, 3.6974011446640053`*^9}, {
  3.697401248149468*^9, 3.6974012516675673`*^9}, {3.697401851263797*^9, 
  3.6974018615893993`*^9}, {3.6974022279025908`*^9, 3.697402230060083*^9}, {
  3.6974028197455378`*^9, 3.6974028385125933`*^9}, {3.6974028692590446`*^9, 
  3.697402898818714*^9}, {3.6974029335253363`*^9, 3.697402987445756*^9}, {
  3.697403085954893*^9, 3.6974030898574877`*^9}, {3.6974034264940023`*^9, 
  3.6974034449969788`*^9}, {3.697403482977364*^9, 3.697403515760474*^9}, {
  3.6974035479528227`*^9, 3.697403635331787*^9}, {3.697774156314892*^9, 
  3.6977741673600883`*^9}},ExpressionUUID->"bcda0020-97c7-471e-9c10-\
572a30029b0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"garAt0Far", "[", "resultsTuplesData_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "allscores", ",", "garsList", ",", "farsList", ",", "garFarPairs", ",", 
      "only0Fars"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"allscores", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"genuineScores", "[", "resultsTuplesData", "]"}], ",", 
       RowBox[{"imposterScores", "[", "resultsTuplesData", "]"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"garsList", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"gar", "[", 
        RowBox[{"resultsTuplesData", ",", "#"}], "]"}], "&"}], "/@", 
      "allscores"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"farsList", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"far", "[", 
        RowBox[{"resultsTuplesData", ",", "#"}], "]"}], "&"}], "/@", 
      "allscores"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"garFarPairs", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"garsList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"farsList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"allscores", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "allscores", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"only0Fars", "=", 
     RowBox[{"Select", "[", 
      RowBox[{"garFarPairs", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "0.0000001"}], "&"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"N", "[", 
     RowBox[{"Max", "[", 
      RowBox[{"only0Fars", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.697403671799939*^9, 3.697403698926627*^9}, {
  3.6974037942980547`*^9, 3.697403828720755*^9}, {3.69740387376458*^9, 
  3.697403985014831*^9}, {3.697404020834564*^9, 3.697404051177046*^9}, {
  3.697404302478901*^9, 3.6974045063207703`*^9}, {3.697773538599841*^9, 
  3.6977735539626493`*^9}, {3.697773789752585*^9, 3.697773814143167*^9}, {
  3.697773881103692*^9, 3.697773886351061*^9}, {3.697774172667223*^9, 
  3.697774183456643*^9}, {3.6977998005015497`*^9, 
  3.6977998012015543`*^9}},ExpressionUUID->"77b79140-a6bd-49a7-bf74-\
cbaf301f0d41"],

Cell["\<\
The EER function will return the result in the format (frr, far, diff).\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}, {3.697333751803813*^9, 3.697333780884739*^9}, {
  3.697367763675489*^9, 3.6973677803628283`*^9}, {3.6973678160853243`*^9, 
  3.6973678954938374`*^9}, {3.697371070019114*^9, 3.6973710770582733`*^9}, {
  3.697371358395001*^9, 3.697371401747113*^9}, {3.697400980605628*^9, 
  3.697401043780719*^9}, {3.697819348484427*^9, 3.697819384082111*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eer", "[", "resultsTuplesData_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "allscores", ",", "frrsList", ",", "farsList", ",", "frrFarDiffTriples", 
      ",", "minDiff"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"allscores", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"genuineScores", "[", "resultsTuplesData", "]"}], ",", 
       RowBox[{"imposterScores", "[", "resultsTuplesData", "]"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"frrsList", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"frr", "[", 
        RowBox[{"resultsTuplesData", ",", "#"}], "]"}], "&"}], "/@", 
      "allscores"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"farsList", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"far", "[", 
        RowBox[{"resultsTuplesData", ",", "#"}], "]"}], "&"}], "/@", 
      "allscores"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"frrFarDiffTriples", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"frrsList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"farsList", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"frrsList", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"farsList", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "allscores", "]"}]}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"minDiff", "=", 
     RowBox[{"Min", "[", 
      RowBox[{"frrFarDiffTriples", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"frrFarDiffTriples", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "minDiff"}], "&"}]}], 
        "]"}], "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.697403540370153*^9, 3.6974035459697933`*^9}, {
  3.697404524276897*^9, 3.697404714231636*^9}, {3.69740477862834*^9, 
  3.697404781546236*^9}, {3.697404887056005*^9, 3.697404890509688*^9}, {
  3.697404929471328*^9, 3.697404980208268*^9}, {3.697405018259491*^9, 
  3.697405164382913*^9}, {3.697405201128594*^9, 3.697405250713578*^9}, {
  3.697405749069346*^9, 3.697405749498557*^9}, {3.697799840274926*^9, 
  3.6977998412334538`*^9}},ExpressionUUID->"f89077b8-aac9-44a0-9235-\
fc7a213a86ab"],

Cell["\<\
This function will help with generating the analysis tuples and saving them \
to a file (so that when we generate random imposters, we save off the \
imposter pairs to a file and can later reproduce our results).\
\>", "Text",
 CellChangeTimes->{{3.6994791823752317`*^9, 3.699479218471405*^9}},
 Background->RGBColor[
  0.9, 1, 1],ExpressionUUID->"7f915905-9e9f-450d-bb11-d8e4a321d7f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"analysisTuples", "[", 
     RowBox[{"data_", ",", "code_", ",", "filename_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tup", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tup", "=", 
       RowBox[{"allGenuineAndImposterScoresFromData", "[", 
        RowBox[{"fullData", ",", "code"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "pathBase", "<>", "\"\</mathematica-exports/\>\"", "<>", "filename"}],
         ",", "tup", ",", " ", 
        RowBox[{"Path", "\[Rule]", "pathBase"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "tup"}], "\[IndentingNewLine]", ")"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"I", " ", "have", " ", "added", " ", 
     RowBox[{"a", " ", "/", "mathematica"}]}], "-", 
    RowBox[{
     RowBox[{"exports", "/", " ", "folder"}], " ", "here", " ", "in", " ", 
     "order", " ", "to", " ", "keep", " ", "this", " ", "form", " ", 
     "overwriting", " ", "previous", " ", "data", " ", "when", " ", "the", 
     " ", "notebook", " ", "is", " ", "evaluated", " ", "from", " ", 
     RowBox[{"scratch", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"analysisTuplesWithSpecificPairs", "[", 
     RowBox[{"data_", ",", "code_", ",", "filename_", ",", "pairs_"}], "]"}], 
    ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "tup", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tup", "=", 
       RowBox[{"allGenuineAndImposterScoresFromDataForSpecificPairs", "[", 
        RowBox[{"fullData", ",", "code", ",", "pairs"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{
        "pathBase", "<>", "\"\</mathematica-exports/\>\"", "<>", "filename"}],
         ",", "tup", ",", " ", 
        RowBox[{"Path", "\[Rule]", "pathBase"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "tup"}], "\[IndentingNewLine]", ")"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.699479239644841*^9, 3.699479304623517*^9}, {
  3.6994795691298523`*^9, 3.699479570529364*^9}, {3.69947971045982*^9, 
  3.699479719346258*^9}, {3.699479905643021*^9, 3.6994799364654284`*^9}, {
  3.699480479900817*^9, 
  3.699480512047524*^9}},ExpressionUUID->"aa19d17c-708a-45a4-b418-\
f7e16a70f3ec"],

Cell[CellGroupData[{

Cell["Pick a Pair, any Pair", "Subsection",
 CellChangeTimes->{{3.69948052630864*^9, 
  3.699480532675424*^9}},ExpressionUUID->"0f793ff6-844d-48f5-80a1-\
a93c1a5cde1a"],

Cell["\<\
Here I will standardize several sets of imposter pairs to work with.\
\>", "Text",
 CellChangeTimes->{{3.699480539677882*^9, 
  3.699480548445134*^9}},ExpressionUUID->"685a2c56-4278-46df-9054-\
0bc4ac8c2c3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
   "producePairsFromExportedData", "[", "exportedAnalyzedData_", "]"}], ":=", 
   
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"exportedAnalyzedData", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"exportedAnalyzedData", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "exportedAnalyzedData", "]"}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.699480639600868*^9, 
  3.699480665189816*^9}},ExpressionUUID->"256dec9d-5c67-41ff-9856-\
8a69df374b87"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pairsRCList1", "=", 
   RowBox[{"producePairsFromExportedData", "[", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<data_imposter_and_genuine_tuples_for_quantized_vgg_for_rc_subjects.\
csv\>\"", ",", 
      RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
      RowBox[{"HeaderLines", "\[Rule]", "0"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.699480572375279*^9, 3.699480630393709*^9}, {
  3.6994806729577436`*^9, 
  3.6994806895594387`*^9}},ExpressionUUID->"38341325-e0ac-489d-a1e5-\
0dbe89d7d1a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pairsRCList2", "=", 
   RowBox[{"producePairsFromExportedData", "[", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<data_imposter_and_genuine_tuples_for_quantized_vgg_for_rc_subjects_\
2.csv\>\"", ",", 
      RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
      RowBox[{"HeaderLines", "\[Rule]", "0"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.69948069578538*^9, 
  3.699480706197085*^9}},ExpressionUUID->"8e7cbd25-ae0e-4b3e-b2cf-\
63ff838d1e11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pairsFBList1", "=", 
   RowBox[{"producePairsFromExportedData", "[", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<data_imposter_and_genuine_tuples_for_quantized_vgg_for_fb_subjects.\
csv\>\"", ",", 
      RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
      RowBox[{"HeaderLines", "\[Rule]", "0"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.699480712247794*^9, 
  3.699480736598171*^9}},ExpressionUUID->"96b60152-0ac5-44b1-96b9-\
f810d46b05b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analysis", "Subsection",
 CellChangeTimes->{{3.699479154117332*^9, 
  3.699479155093177*^9}},ExpressionUUID->"743e8332-4cb7-46f4-bff2-\
5a9547b71278"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fullData", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<vgg_output_one_img_per_type_per_subject.csv\>\"", ",", 
     RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
     RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697766283066517*^9, 3.697766308168106*^9}, 
   3.6977998096241417`*^9},ExpressionUUID->"746895ed-dcda-4eca-8688-\
80d5e5b1b76c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyzedDataFilteredPairs", "=", 
   RowBox[{"allGenuineAndImposterScoresFromDataForSpecificPairs", "[", 
    RowBox[{"fullData", ",", "\"\<rc\>\"", ",", 
     RowBox[{"Select", "[", 
      RowBox[{"pairsRCList1", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.699480779864201*^9, 3.6994808148636*^9}, {
  3.699648674626855*^9, 3.699648692665831*^9}, {3.6996487257959127`*^9, 
  3.699648727555938*^9}},ExpressionUUID->"52f0849e-5a54-4a40-a858-\
1d56747f6a13"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"garAt0Far", "[", "analyzedDataFilteredPairs", "]"}]], "Input",
 CellChangeTimes->{{3.699480829130147*^9, 3.6994808349108877`*^9}, 
   3.6996487297498693`*^9},ExpressionUUID->"7dc0237f-4e78-4650-ab84-\
e09a9b259ef8"],

Cell[BoxData["0.7572115384615384`"], "Output",
 CellChangeTimes->{3.69948083551446*^9, 
  3.699648772399269*^9},ExpressionUUID->"74aa8f9d-9b13-4340-96f3-\
781e87d88470"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eer", "[", "analyzedDataFilteredPairs", "]"}]], "Input",
 CellChangeTimes->{{3.699480842079259*^9, 3.699480846383211*^9}, 
   3.699648731452345*^9},ExpressionUUID->"77587a58-b924-4b58-9d31-\
6e27fe7103a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04567307692307692`", ",", "0.04567307692307692`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6994808470068073`*^9, 
  3.6996487726332817`*^9},ExpressionUUID->"2dc807c8-cfa3-4920-b974-\
216602811c3a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"analyzedDataAllPairs", "=", 
   RowBox[{"allGenuineAndImposterScoresFromDataForSpecificPairs", "[", 
    RowBox[{"fullData", ",", "\"\<rc\>\"", ",", "pairsRCList1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.699648710084697*^9, 
  3.699648738643938*^9}},ExpressionUUID->"1fbe9b2c-9188-4a88-b2e0-\
e47203b11dd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"garAt0Far", "[", "analyzedDataAllPairs", "]"}]], "Input",
 CellChangeTimes->{{3.699480829130147*^9, 3.6994808349108877`*^9}, 
   3.699480876791668*^9, 
   3.699648744262219*^9},ExpressionUUID->"7f59b5ba-b30f-4a49-8112-\
5f8b39e66f4a"],

Cell[BoxData["0.38995215311004783`"], "Output",
 CellChangeTimes->{3.69948083551446*^9, 3.69948088718748*^9, 
  3.69964878465044*^9},ExpressionUUID->"7fa4f5ce-1b08-4571-b22a-5ea6dcc249c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eer", "[", "analyzedDataAllPairs", "]"}]], "Input",
 CellChangeTimes->{{3.699480842079259*^9, 3.699480846383211*^9}, 
   3.699480877895914*^9, 
   3.699648746102388*^9},ExpressionUUID->"bb4bf1e7-3f3d-4416-b620-\
27dd93ad77d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.04784688995215311`", ",", "0.04784688995215311`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6994808470068073`*^9, 3.6994808889200983`*^9, 
  3.699648784848165*^9},ExpressionUUID->"8bf8d100-1296-456c-83b2-\
2e619ca7b866"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{896, 755},
WindowMargins->{{60, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 184, 2, 64, "Section", "ExpressionUUID" -> \
"ea5767c3-abf2-4bf5-a005-3105a464569d"],
Cell[767, 26, 195, 4, 46, "Text", "ExpressionUUID" -> \
"71577b5d-8bcc-40ae-abbb-fe4ee2089e23"],
Cell[965, 32, 171, 2, 46, "Text", "ExpressionUUID" -> \
"f3f8b48c-3f88-4f11-a394-d100fe2290d3"],
Cell[1139, 36, 313, 4, 46, "Text", "ExpressionUUID" -> \
"48433001-8e5e-4c16-b886-bad852115f1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489, 45, 100, 1, 64, "Section", "ExpressionUUID" -> \
"40c15da2-bc49-4b53-a0b9-28145e773bfb"],
Cell[1592, 48, 539, 10, 65, "Text", "ExpressionUUID" -> \
"a44fe5f3-dac1-47f7-b46c-88c74282d4c0"],
Cell[2134, 60, 280, 8, 32, "Input", "ExpressionUUID" -> \
"23be5e82-fe7f-4995-92bf-4f99c8303be1"],
Cell[2417, 70, 667, 11, 65, "Text", "ExpressionUUID" -> \
"1d715b27-a840-4720-ac26-87814d5996d8"],
Cell[3087, 83, 555, 10, 46, "Text", "ExpressionUUID" -> \
"29c2c4fb-917f-49a3-80c2-52e75f28255b"],
Cell[3645, 95, 1441, 35, 75, "Input", "ExpressionUUID" -> \
"ca5bd5e9-50ff-4c14-a6a0-b2f6be0d997e"],
Cell[5089, 132, 564, 8, 46, "Text", "ExpressionUUID" -> \
"ba4ea8a0-55b3-4688-9b8d-e33cab2c6146"],
Cell[5656, 142, 3098, 83, 201, "Input", "ExpressionUUID" -> \
"5bcf5400-bb08-4938-ac5a-9763fc02ceee"],
Cell[8757, 227, 609, 11, 46, "Text", "ExpressionUUID" -> \
"1f422d01-ad09-42c7-8a4f-49232b2ce928"],
Cell[9369, 240, 3029, 74, 348, "Input", "ExpressionUUID" -> \
"c0a2259d-3d8f-4b6b-836c-34df61467403"],
Cell[12401, 316, 643, 11, 46, "Text", "ExpressionUUID" -> \
"a04dced4-989d-44df-b00c-8de2a92891dc"],
Cell[13047, 329, 4266, 114, 348, "Input", "ExpressionUUID" -> \
"4e051a86-002a-44a8-b28e-6bb396f1a1dd"],
Cell[17316, 445, 642, 10, 46, "Text", "ExpressionUUID" -> \
"e1b3dcf1-6836-4054-b055-a2aaa0abd37b"],
Cell[17961, 457, 1175, 32, 75, "Input", "ExpressionUUID" -> \
"138e14c2-a1ca-42dc-a4f8-b709784c96ce"],
Cell[19139, 491, 856, 14, 65, "Text", "ExpressionUUID" -> \
"4ba12882-3a73-43bc-beae-3d028318c709"],
Cell[19998, 507, 1312, 34, 96, "Input", "ExpressionUUID" -> \
"3d1177fb-38aa-42f9-bb50-3a34e0bdf560"],
Cell[21313, 543, 2944, 69, 222, "Input", "ExpressionUUID" -> \
"18d63c65-a2af-4797-babf-e38c63916bae"],
Cell[24260, 614, 947, 15, 65, "Text", "ExpressionUUID" -> \
"4ae3ff8b-4321-41a4-a73b-564b84f363b3"],
Cell[25210, 631, 3895, 102, 352, "Input", "ExpressionUUID" -> \
"bcda0020-97c7-471e-9c10-572a30029b0e"],
Cell[29108, 735, 2577, 64, 201, "Input", "ExpressionUUID" -> \
"77b79140-a6bd-49a7-bf74-cbaf301f0d41"],
Cell[31688, 801, 785, 12, 46, "Text", "ExpressionUUID" -> \
"ef2291fb-1e08-4af0-9ce2-149bc4429759"],
Cell[32476, 815, 2814, 71, 222, "Input", "ExpressionUUID" -> \
"f89077b8-aac9-44a0-9235-fc7a213a86ab"],
Cell[35293, 888, 396, 7, 65, "Text", "ExpressionUUID" -> \
"7f915905-9e9f-450d-bb11-d8e4a321d7f6"],
Cell[35692, 897, 2449, 57, 306, "Input", "ExpressionUUID" -> \
"aa19d17c-708a-45a4-b418-f7e16a70f3ec"],
Cell[CellGroupData[{
Cell[38166, 958, 168, 3, 44, "Subsection", "ExpressionUUID" -> \
"0f793ff6-844d-48f5-80a1-a93c1a5cde1a"],
Cell[38337, 963, 218, 5, 30, "Text", "ExpressionUUID" -> \
"685a2c56-4278-46df-9054-0bc4ac8c2c3a"],
Cell[38558, 970, 736, 22, 75, "Input", "ExpressionUUID" -> \
"256dec9d-5c67-41ff-9856-8a69df374b87"],
Cell[39297, 994, 558, 14, 75, "Input", "ExpressionUUID" -> \
"38341325-e0ac-489d-a1e5-0dbe89d7d1a1"],
Cell[39858, 1010, 506, 13, 75, "Input", "ExpressionUUID" -> \
"8e7cbd25-ae0e-4b3e-b2cf-63ff838d1e11"],
Cell[40367, 1025, 505, 13, 75, "Input", "ExpressionUUID" -> \
"96b60152-0ac5-44b1-96b9-f810d46b05b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40909, 1043, 156, 3, 44, "Subsection", "ExpressionUUID" -> \
"743e8332-4cb7-46f4-bff2-5a9547b71278"],
Cell[41068, 1048, 428, 9, 32, "Input", "ExpressionUUID" -> \
"746895ed-dcda-4eca-8688-80d5e5b1b76c"],
Cell[41499, 1059, 713, 17, 54, "Input", "ExpressionUUID" -> \
"52f0849e-5a54-4a40-a858-1d56747f6a13"],
Cell[CellGroupData[{
Cell[42237, 1080, 239, 4, 32, "Input", "ExpressionUUID" -> \
"7dc0237f-4e78-4650-ab84-e09a9b259ef8"],
Cell[42479, 1086, 169, 3, 32, "Output", "ExpressionUUID" -> \
"74aa8f9d-9b13-4340-96f3-781e87d88470"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42685, 1094, 229, 4, 32, "Input", "ExpressionUUID" -> \
"77587a58-b924-4b58-9d31-6e27fe7103a3"],
Cell[42917, 1100, 254, 6, 32, "Output", "ExpressionUUID" -> \
"2dc807c8-cfa3-4920-b974-216602811c3a"]
}, Open  ]],
Cell[43186, 1109, 356, 8, 54, "Input", "ExpressionUUID" -> \
"1fbe9b2c-9188-4a88-b2e0-e47203b11dd7"],
Cell[CellGroupData[{
Cell[43567, 1121, 258, 5, 32, "Input", "ExpressionUUID" -> \
"7f59b5ba-b30f-4a49-8112-5f8b39e66f4a"],
Cell[43828, 1128, 188, 2, 32, "Output", "ExpressionUUID" -> \
"7fa4f5ce-1b08-4571-b22a-5ea6dcc249c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44053, 1135, 250, 5, 32, "Input", "ExpressionUUID" -> \
"bb4bf1e7-3f3d-4416-b620-27dd93ad77d3"],
Cell[44306, 1142, 276, 6, 32, "Output", "ExpressionUUID" -> \
"8bf8d100-1296-456c-83b2-2e619ca7b866"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

