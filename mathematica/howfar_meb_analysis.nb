(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    362904,       6833]
NotebookOptionsPosition[    361641,       6786]
NotebookOutlinePosition[    362005,       6802]
CellTagsIndexPosition[    361962,       6799]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Data Import", "Text",
 CellChangeTimes->{{3.694950184821402*^9, 3.694950200977116*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataSubj00140", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/data_howfar_meb_subject_00140.csv\>\"", ",", 
     RowBox[{"HeaderLines", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFAsSubj00140", "=", 
   RowBox[{"dataSubj00140", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFBsSubj00140", "=", 
   RowBox[{"dataSubj00140", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanRCsSubj00140", "=", 
   RowBox[{"dataSubj00140", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFAsSubj00140", "=", 
   RowBox[{"dataSubj00140", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFBsSubj00140", "=", 
   RowBox[{"dataSubj00140", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingRCsSubj00140", "=", 
   RowBox[{"dataSubj00140", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.694949662855568*^9, 3.694949706528145*^9}, {
  3.694949862904303*^9, 3.694949874248372*^9}, {3.6949499207710133`*^9, 
  3.6949500053398933`*^9}, {3.69497216507957*^9, 3.694972229199086*^9}, {
  3.694974418641842*^9, 3.694974422856551*^9}, {3.694974689514085*^9, 
  3.6949746898263607`*^9}, {3.69497479669309*^9, 3.6949748307587023`*^9}, {
  3.6958484110654593`*^9, 3.695848444562508*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{"{", 
   RowBox[{
   "euclideanFAsSubj00140", ",", "euclideanFBsSubj00140", ",", 
    "euclideanRCsSubj00140"}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/wtI8i3FT8Zw/4/+Pw4SDqs=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
FdNoPnMk8u1VNrSd3br4xBcaA0y+bh6SY4N6i0xhfinDr+ZepScj9ZCgs8tL
8iuD7925m+mJ9cBXDCoh5YwfX48NUThTDw6K6nOz35h8P/Zy0Sq6HuqTtbKt
K2n0kJwxhx91oMjSvVpdRWOEiwkrPaIOnj4y2KX0nUbNXtXKSyfqYMHy079j
apj+o+N77dbUgfUNq7QVdUw+XXLtf1xdC18nbR1d6xm/f7Oc+BtYC9I2jjs6
2Mz+dLBqq+ehWghpcR3WaqTRRWXu99altfBHxyPpfRONPN08zyZLasC4+NY5
oplG3ijbjfW3aqBA0V/Cr4XJC/9VZV9Va2BTSnD3+A/mukncunp+DfixwmOM
2xh/cUnZ+DPvOww9ijIvbmfqay73mHX/DrrLX5I7ftI4M5brsVH5O3y4kfQj
vJPh49tXp1T+VoPwr7dPFnQz88/cdtryYzV42GQYnu9h5jG+5bqPczX8bMlb
z+6lkTATsYiXq4b9usX1Kv00ym2fJIvHq+BVcXlI4gCNJz6py7WlVsFKpRrd
NUM0Psve6vX7QhU4pTSuvD5MY8LoD/0l26ugkdVW0TNCo2WOsJrQQCXsCev2
1xlj8IssP7A5oRKilw9pZo3TuCa54LecdSUs8pzg3TRJYxKv6h61TZVg82u6
OPAXjdb33vqnllRAhQ3XrT+/aSy2HL3VqVoB//1YrGr+h8YtchKtkvnf4JEu
3/zyaRqvejT/9FP+BjPFAnnyM0xeVG48xZtRDqeVNrhH/aPRKXEfkSxfDp9T
SKUlczSa9BTd9377FSTENk87zmOh8pqbJvelv4J/2Pb0Zi4W+ij11LcllcHo
crnLGtwsFAta73hNsgz0PBVlUxew8FXI2bRz8aWQ8UtlTGgRC78+OB2TIV4K
G8/tT/FezMJWa915l2K/gOePw+eHeFh4/9Bv22ixL9Cte3zriSUsXM3z9vLR
mBLQLDHsy1/Kwswnpr53xUogWcksTnI5C8+/PXnFJLYYBFKtrUL4WBj9l6NQ
J14MLmIXWHMrWNj0UlL1X3wRcMKc2q1XsjAI/I3athYB8l2Lql7Fwh3OXNn+
KYUQ4+l5SkmAhUrYXMQnVwi8v32EY9ewMPBq3ZmLGZ/B7lxg44q1LFx2cu+v
HPwM1T9CHrmuY6GTl4X24pJPIH/ssV7HehZGyE5NHdP+BOEl0QKHNrDQTvFv
5duGAphViq9+L8zCPT/5BrdbFIB5avI9YiMLNdfFzFQN50Ox2PvDfqIs/JDT
oRl3LR8kw7OWTRAszP3j1pC5JB/u8X0qNaYY/H+Za6wNz4MJzy8+xTQLD5sb
nyjakgcnfleo7xBj4YzXorMvXHMh61zdgohNLKQ1o71vR+UA2copWLCZhcZS
GTH7S7Ph5rEOj/MSLPT0fhk1/SsL+kp697C3MHgL+yYlb8qCw8ojMypbWWhU
t+qao0EmvEn9lZG4jYUnfc3N9AMzQHDTP5c1Uiw8MedB25R8hCvh3ArXpVn4
ZXh/14cFH+EH35LJnh0s5Nf9ZKepmg77vPjf6vzHQvd5qQ47bn+AuN+C9lmy
LNQWL2t0KH8Py2xFpDbJM/ctLxSuX/seLrbSg4EKLGy5maO41SINao5tSfyz
k4XTz3efevPuHez8In3WfDcL07oEst/xvIMnygri5YosZN/T75A//Ra43ih3
yiuzsEBBQkIx8w1YbVJ9HrWHhZ8+RBQUrn8DpeEHTZcgCwuPdV9suJoK21cc
Fb2kwsLTI8dFXNpS4L6XfnPzXhb+var9N+pgCvz+bRyhocq8L9Uv8eX5ZDC0
tTBIVWP4FN12W/jIa8httVm7QYOFi+Q+fQ6TTwLWcfv//ctYLGiv3r9G7BX4
fHEOHjrA3P+gujhIKBEGlN2PntBkYeihEeqfYAJov/FeUaDFQj8uDYsjQvGQ
tulOueRhht85Ud9cWXGwPiLoTsgRFprsKDpiJ/cS3FY8OjCnzcJ3UqGXhA7F
QrtX5OKzOsw8LtRdtjkXA+pTLwqrdVl4MTRot/a9F5Bgm+ildJyFIpFr+tIz
nwNfW6pKrB4LF/wQ/u4/GA2Ox9PnVpxgYczLeTFvxaKh/ktOtqsBo9e6hB9C
Fs9AcU/h1Y6TDD7qAz0v46Ig6k3ZrkNGLDwT1Tl9pespLBCv/v3emIULr3Gr
Bt2OBOsIdhphwkI56UsaJ2SfwNcVPxz9TrPwAjdPUfBABOzw7twxYcpCb8P6
m6tTwiFkqn/Y2JyFrHhbOsI9DP7YjiUVW7Bwg4/G0hH9R3CqbercDisWJpwb
MKxXDIWC43MSEWdYeG5zuMuaLQ9hU+nCngVnGf0u6fA8R4WA355lsedtWDhk
9+FZFOsBDL9ZZcE+x8K3sq+VL0sHg674emqvHeM3GwqOv1a7D+kRoq2J5xm8
1c8HLbMIAmH+TZFrLrLwx6LWV3p37oGH91aj6/YsbLBrk/G/HAg/p2SEeh1Y
uC7d9eTBbn/Yb7eLrXOJ0XPlULGl9V1IaoOHWU4slCKsX5394wcr9dSPbXJm
8GluU/gR5guXS7VW3XNhoZlMfav2AR9o3KNb+ceVhT/Ld7Tj4tuw561BgPlV
FlZxuJN2fb8J0eKntcqvsfCIOg9/8StvWPTYaomCO1NfC5/+5WAvOMdvVxJ1
nYWK7TLWdbc8ocLb8daSGyy0725rcb51A2T/uKpe8mShrQZXb3+QBzyy85jf
4sU8/5rT7HX0Osy03crTuMnCkIrnGxVC3OC0nr976i0W6jVyW60eugqFpcFK
G3wYv/xoveuU4RWQgPBpb18W5issVd7FcQH/t1HpQ34sNLwcdqHtgjOMib+8
fOIuC0tqhdfmrrkMeo+TZAv8GT5ZfVAe/HoJMvjfjUkGMn4jYVNa/8ARNt7M
SAm5x8K6Dhn6va0DeP3JOz8XxPjl2qG0YV176LYr3no2mOHrwuuNFQcugmZ7
eV/1A0ZPXKWOvhHnIUWvJk7pIQtTQ1tL+XNsQaCs0So2lIXmden37kzbgAu0
sfjDWMiXVRXncuQscN52t7uGsxCXWTV9zTwDKpuHojoiWP/v/z/+/+v/Afsj
Mqg=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.7898766440452307, 10.304471043655328`}, {
    0, 1.3521307288738627`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6958484226915503`*^9, 3.695848447138205*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"{", 
   RowBox[{
   "euclideanFAsSubj00140", ",", "euclideanFBsSubj00140", ",", 
    "euclideanRCsSubj00140"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{3.695848453690481*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.644], Thickness[Small]}], {{}, 
     {RGBColor[0.97858, 0.678934, 0.157834], Opacity[0.5], EdgeForm[{Opacity[
      0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {2., 198}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.254403522818254`, 
           80.95776621297037}, {-103.28139986029628`, 91.93456273819315}}],
         StatusArea[#, 198]& ,
         TagBoxNote->"198"],
        StyleBox["198", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[198, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.5], EdgeForm[{Opacity[
      0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {2., 89}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{26.254403522818254`, 80.95776621297037}, {
           3.9107209641246783`, 91.93456273819315}}],
         StatusArea[#, 89]& ,
         TagBoxNote->"89"],
        StyleBox["89", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[89, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0.}, {4., 54}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{80.45776621297037, 135.1611289031225}, {
           38.33020930224149, 91.93456273819315}}],
         StatusArea[#, 54]& ,
         TagBoxNote->"54"],
        StyleBox["54", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[54, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0.}, {6., 55}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{134.6611289031225, 189.3644915932746}, {
           37.34679534972387, 91.93456273819315}}],
         StatusArea[#, 55]& ,
         TagBoxNote->"55"],
        StyleBox["55", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[55, {}], "Tooltip"]& ]}, {}, {}}, {{}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.5], EdgeForm[{Opacity[
      0.644], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8., 0.}, {10., 196}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{243.06785428342673`, 
           297.7712169735789}, {-101.31457195526103`, 91.93456273819315}}],
         StatusArea[#, 196]& ,
         TagBoxNote->"196"],
        StyleBox["196", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[196, {}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0.}, {12., 2}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{297.2712169735789, 351.974579663731}, {
           89.4677348331579, 91.93456273819315}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], 
        "Tooltip"]& ]}, {}, {}}}, {{{}, {}}, {{{}, {}, {}}, {}}, {{{}, {}}, \
{}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.24, 0.},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 12.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.69584845421555*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hammingFAsSubj00140", ",", "hammingFBsSubj00140", ",", 
     "hammingRCsSubj00140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "0.000001"}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0.1", ",", "0.6", ",", "0.05"}], "}"}]}], "]"}]}],
      "]"}], "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Fa\>\"", ",", "\"\<Fb\>\"", ",", "\"\<Rc\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694974884688332*^9, 3.694974921674264*^9}, {
   3.694974952130705*^9, 3.694974970961934*^9}, {3.694975087391197*^9, 
   3.694975171624845*^9}, {3.6949752109639673`*^9, 3.6949752977086573`*^9}, {
   3.6949754069458923`*^9, 3.69497541697652*^9}, {3.695848482651417*^9, 
   3.695848489314332*^9}, 3.69584922883504*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.602]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.1, 0.}, {1.*^-6, 194}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 194]& , TagBoxNote -> "194"], 
              StyleBox["194", {}, StripOnInput -> False]], Annotation[#, 
              Style[194, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.1, 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{-0.1, 0.}, {1.*^-6, 68}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 68]& , TagBoxNote -> "68"], 
              StyleBox["68", {}, StripOnInput -> False]], Annotation[#, 
              Style[68, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.*^-6, 0.}, {0.1, 95}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 95]& , TagBoxNote -> "95"], 
              StyleBox["95", {}, StripOnInput -> False]], Annotation[#, 
              Style[95, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.15000000000000002`, 33}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 33]& , TagBoxNote -> 
               "33"], 
              StyleBox["33", {}, StripOnInput -> False]], Annotation[#, 
              Style[33, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 2}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 2]& , TagBoxNote -> 
               "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35, 0.}, {0.4, 30}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 30]& , TagBoxNote -> "30"], 
              StyleBox["30", {}, StripOnInput -> False]], Annotation[#, 
              Style[30, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45000000000000007`, 111}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 111]& , 
               TagBoxNote -> "111"], 
              StyleBox["111", {}, StripOnInput -> False]], Annotation[#, 
              Style[111, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45000000000000007`, 0.}, {0.5, 53}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 53]& , TagBoxNote -> 
               "53"], 
              StyleBox["53", {}, StripOnInput -> False]], Annotation[#, 
              Style[53, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}}, {}}}, {{{{}, {}, {}, \
{}}, {}}}, {{{{}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.114, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-0.1, 0.6}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Fa\"", "\"Fb\"", "\"Rc\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694975161449724*^9, 3.694975172540216*^9}, 
   3.694975212420746*^9, {3.694975247113003*^9, 3.694975298387375*^9}, {
   3.694975409743294*^9, 3.694975417393693*^9}, 3.695848489845635*^9, 
   3.695849234862288*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hammingFAsSubj00140", ",", "hammingFBsSubj00140", ",", 
     "hammingRCsSubj00140"}], "}"}], ",", 
   RowBox[{"{", "0.05", "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Fa\>\"", ",", "\"\<Fb\>\"", ",", "\"\<Rc\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694974884688332*^9, 3.694974921674264*^9}, {
  3.694974952130705*^9, 3.694974970961934*^9}, {3.694975087391197*^9, 
  3.694975171624845*^9}, {3.6949752109639673`*^9, 3.6949752977086573`*^9}, {
  3.6949754069458923`*^9, 3.69497541697652*^9}, {3.694975455235153*^9, 
  3.6949754610336933`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.609]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.609]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0., 0.}, {0.05, 396}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 396]& , TagBoxNote -> "396"], 
              StyleBox["396", {}, StripOnInput -> False]], Annotation[#, 
              Style[396, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.609]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0., 0.}, {0.05, 211}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 211]& , TagBoxNote -> "211"], 
              StyleBox["211", {}, StripOnInput -> False]], Annotation[#, 
              Style[211, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.10000000000000002`, 123}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 123]& , 
               TagBoxNote -> "123"], 
              StyleBox["123", {}, StripOnInput -> False]], Annotation[#, 
              Style[123, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.10000000000000002`, 0.}, {
                   0.15000000000000002`, 60}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 60]& , TagBoxNote -> "60"], 
              StyleBox["60", {}, StripOnInput -> False]], Annotation[#, 
              Style[60, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 2}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 2]& , TagBoxNote -> 
               "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.609]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0., 0.}, {0.05, 97}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 97]& , TagBoxNote -> "97"], 
              StyleBox["97", {}, StripOnInput -> False]], Annotation[#, 
              Style[97, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.05, 0.}, {0.10000000000000002`, 31}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 31]& , TagBoxNote -> 
               "31"], 
              StyleBox["31", {}, StripOnInput -> False]], Annotation[#, 
              Style[31, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 1}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1]& , TagBoxNote -> 
               "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.25000000000000006`, 2}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 2]& , TagBoxNote -> 
               "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.25000000000000006`, 0.}, {
                   0.30000000000000004`, 21}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 21]& , TagBoxNote -> "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.30000000000000004`, 0.}, {
                   0.35000000000000003`, 9}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35000000000000003`, 0.}, {0.4, 51}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 51]& , TagBoxNote -> 
               "51"], 
              StyleBox["51", {}, StripOnInput -> False]], Annotation[#, 
              Style[51, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45, 126}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 126]& , TagBoxNote -> "126"], 
              StyleBox["126", {}, StripOnInput -> False]], Annotation[#, 
              Style[126, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45, 0.}, {0.5, 54}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 54]& , TagBoxNote -> "54"], 
              StyleBox["54", {}, StripOnInput -> False]], Annotation[#, 
              Style[54, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}}, {}}}, {{{{}, {}, {}, \
{}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.011000000000000001`, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0., 0.55}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Fa\"", "\"Fb\"", "\"Rc\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.609]]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.609`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694975161449724*^9, 3.694975172540216*^9}, 
   3.694975212420746*^9, {3.694975247113003*^9, 3.694975298387375*^9}, {
   3.694975409743294*^9, 3.694975417393693*^9}, 3.6949754616431293`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "hammingFAsSubj00140", ",", "hammingFBsSubj00140", ",", 
     "hammingRCsSubj00140"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0.1", ",", "0.6", ",", "0.05"}], "}"}]}], "]"}], 
    "}"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Fa\>\"", ",", "\"\<Fb\>\"", ",", "\"\<Rc\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694974884688332*^9, 3.694974921674264*^9}, {
  3.694974952130705*^9, 3.694974970961934*^9}, {3.694975087391197*^9, 
  3.694975171624845*^9}, {3.6949752109639673`*^9, 3.6949752977086573`*^9}, {
  3.694975331003655*^9, 3.694975343710039*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.616]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.616]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.1, 0.}, {0.15000000000000002`, 60}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 60]& , TagBoxNote -> 
               "60"], 
              StyleBox["60", {}, StripOnInput -> False]], Annotation[#, 
              Style[60, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 2}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 2]& , TagBoxNote -> 
               "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.616]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.560181, 0.691569, 0.194885]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.15000000000000002`, 0.}, {0.2, 1}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 1]& , TagBoxNote -> 
               "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.25, 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.25, 0.}, {0.30000000000000004`, 21}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 21]& , TagBoxNote -> 
               "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.30000000000000004`, 0.}, {0.35, 9}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 9]& , TagBoxNote -> 
               "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.35, 0.}, {0.4, 51}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 51]& , TagBoxNote -> "51"], 
              StyleBox["51", {}, StripOnInput -> False]], Annotation[#, 
              Style[51, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.45000000000000007`, 126}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 126]& , 
               TagBoxNote -> "126"], 
              StyleBox["126", {}, StripOnInput -> False]], Annotation[#, 
              Style[126, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.45000000000000007`, 0.}, {0.5, 54}, 
                   "RoundingRadius" -> 0]}]}, StatusArea[#, 54]& , TagBoxNote -> 
               "54"], 
              StyleBox["54", {}, StripOnInput -> False]], Annotation[#, 
              Style[54, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.55, 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}}}, {}, {}}}}}, {{{
       Null, {}}}, {{{{}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.09000000000000001, 0}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0.1, 0.6}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Fa\"", "\"Fb\"", "\"Rc\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.694975344365459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/data_howfar_meb_subject_00070.csv\>\"", ",", 
     RowBox[{"HeaderLines", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFAs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFBs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanRCs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFAs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFBs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingRCs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{"{", 
   RowBox[{"euclideanFAs", ",", "euclideanFBs", ",", "euclideanRCs"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6949747116350193`*^9, 3.6949747134415627`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
0hQSZH9kpc9SwLCz7R15U7Ao/5d8aoKCcvWyYIOWKWy2914f10tBZoAhz+Tk
FMZJl/r3NlPwtWHtkwXzNCqNE2++raAgbGe40CrXNAYyzbWXcinwVBf/5io8
jWNleXUP0imwDagT3So3jZXw2JDaRAoeNZj9CdaeRnDIY/NznyjQ2ckmzftk
Gi+2nN4VHkyBsnpMQbzLNM55nDi5/JaC8wHSl0+HTiNPRUpPy5mCYw1t1X+S
p7HFRuR8ihUF3DstNWQYPnyFHyrMZhRsUt/WXtY2jd3GCgdV71Ow5J94V21m
Gv8SBMTfa1IwXq841L5+BiPdVOb2Kwz9O/ofGXDPIKT4MhOnDEO/mgNp4tQM
fLNU4y6JM/T777GyUJiBscy4kcVxhv76tOUVnRns2vM7LYSPoX+HirOr+QwY
nc76VE4KPNTGWba6zYDUTqvMZ/idjb+rV3D4DHINW9zK1sgwqefbwftjBoMB
Zt+KaGRo7/gXEl88A1YT7dz0MTIuqWntP905A/JClVxENxkS/pToP+QZbEjn
zrNsIGPXmGJg1DqG73fvL5EtJWPLm10thltJMN2WNM6cRcb6o/17j+4lQWSm
u/jXDzJWSlPuTB0k4dyw6qpOHBk0E4ePP06S8PKigjgljIxJtiv9lpIk0P/8
47PzIWMwYc/h8/IkaPJYP591IaPz0rAx/ToJqWt9I/dsyGgcTfuaf4sEKZtZ
uSwzMio9nKfcDEloPbamsuk+GYVHVE5feUpC5Ys7HUo3yfhXyvOCw5aE9fcO
/bVk8MVPk/FfDa9JiFbMLwu4SEYS25+FEB8S4vuchz+JkBGb4Cp1J4yEPY3s
sx8PkxFxSd2R7zMJc6F9nd57yQgc5csbTGFw0USKhyk7GV4e0+u+ZJLAHZ89
JMFExusj/xQfF5Eg9EByYJZGgn3pmzcitSQkdNo9ix4lwcJEq3K2nYQcsfkw
6U4SzNgOc2QOkTDd8uF4eQ0JBgmUG44kEm5fLdypUMAYL+UGyi6T8PGe3ZWU
dBLUR71bWFjIsJ1OyWL7SsIVj9vcFdvIaApsunEjkgS5I0d1ffaRwX1834SH
L6NOpXMf1RmcVTzx0TjFhYQzJoX9XAydTf6JHwutSDjO5n+4U4oM/YRxw9KH
JBxMuGsSpUjGNY2Pdpl3SNh3STjR8AaDswItQsJUSNg5ujR15A4Z5K7cWBNZ
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
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
BQ==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
GSwflA/hMOpnuZ1pbiz89LS/VRnKYYTiatsb/2IgPjd9lXc4ybNiR/1ArRgw
Gf5ZvSGSQ3mvvjJd/2gQU1V3HLhP+nNpq1coLwpeWjjOi4/m8OEJ9WarNVFg
G56VbRpL+uOqVL2C0n2gqn6bzozjUCuwY+qf3giomLZ+7G08hw2BDjkKz8PB
Q8sl4kIiyeMrjWp7boaBunPuRtUksr5q5LOjp0Oh9+l4K/8RydtfbPoM0xAI
+wJuwckcrs6kM+UM7sF2xo3ZlsKhovKZq3u33YWJfW/eTqRyqP5En3LfFQxp
gUKWGU+JX2Z/7z125A4cLdEWsc7gMJq+e++j422QmuSVIJfJYZxL/06Xu7eg
SKNoa8VzDv0HK59seBUEF+1Ev3hlk3odyLap6g8ElUTd6+tzOJw/Y8By9sJA
aG71XfLjJYdOEsly+RYBEDD3w8cHeRxKhtlsNTD2h007xE/ve034iO3fwH6/
AT+9DCRmvOGwZwO6Rgf7QXyef9qbtxx2qR/UNN12HUxGyg0dC8j5Hs7x6Zju
C2JLZ/9UKeLwotBvyb4Gb3hpaXSHV8zhLlcfkanProFtxG31O6Uczorcp1IV
6gVUdXWt7gcOf+uxl4aue0LF9LkXxz9yaJ6+NHa2twd4aJvIpn8i+Vs8eL7k
pjuou4TkHPvMoZzDIe2S+1ehJ73hwIJKDpU0dJJzXrhB6Nf54+VVHAr5WizS
aXUFffbgfc8akrdL6lfOFneFcdNIXFfH4cnb357HX7sMqUGt/P56DqfLvDV2
FrkE5qWUe2wjhy4357qM3XEGKUFzzqSZ9GPmNsmg1U5QtDa2YHormQ9XrfMS
Oi7AxTMdVvk8DvmrZcsfxziCykNF0fNtHE4K1DOUPH0emnlWD5U7OPzp4/dv
t64D+M9L1GvtJOt/37K6d9k50NzZ+/VWN/GbwdtJOxTPwtA15Rtbezlct0Z5
quhCe4h7ZbP03xcOJYYuXQtZcQb2jj7+lPaNw8sHYzf76dnBVLV+O6t+sp7w
LIX6Blt4aaU2e/4PDh9d/mF4e/UpsI20S/80wOEJnpGP3QMboGrSdnsMkXl6
OuKGy8ITUCE+NKwxTPK+fn28Qs5x8Ni86m7fCIfJj5p7rpsdA/VLDhoxvzhU
mTSr/+c8K+jJyKzf84f4T6K4MZpnAaHfRp2mjXH/9+8F/l/9fwB6ZIaz
      
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.492275088085353`}, {0, 1.2747573581476088`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.694974714209086*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/data_howfar_meb_subject_00468.csv\>\"", ",", 
     RowBox[{"HeaderLines", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFAs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFBs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanRCs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFAs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFBs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingRCs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{"{", 
   RowBox[{"euclideanFAs", ",", "euclideanFBs", ",", "euclideanRCs"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6949747116350193`*^9, 3.694974727282135*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
Q4ptAQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.005555555555555556], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
N/O/O5ExlLuY83N7Pvge0mGKcCXj1Yzh7POsecDpFu1I9CCj1a+TzAcccyA7
Y+BV3Q0yRjlJ/Oj6mAXq/RK7DP3IePLk8bT75zPhPYNT6HwgGYM//F6d2nwC
F9UrZv1DyDgR0hwoVJgOv102dfgjtvvH/o5XYiQVotN0sopjtuuxKStQDUkG
yd5oGt37ZEyI4Rnbc/oR1NIO2owmknE2VWt/inYSHFMhPPdI3tZz9+FdSiYJ
MOnkRGR5QsbTVNq9saEP4HpyRWBGNhn9jlbImA3EAcv7zXG1AjLejTh+UEH7
HqTt0IWeEjJSKz+o8ku8C/v3x6Q6VpIx4p0vq/FYFLy2H/zzr5aMxydtPXVN
IsD6IcEqsYmMzQ/YWZq27sDqW6cm+VYyPuDpFCP1hEDY3wqR9pdkpHUKfU3V
HQxiils+Vm/IWPXQ1Xpy7RaU2+oO/+ja5stmKH9eOxD0EmLUovrIWCwLko72
N2GkYzCJNETGFoYxFkqYD7htEtYbRsmo9ngHcWL+BtDJXzIzmtzur55M7/Fb
1+DR+cqahVkyhrc5TvkbeoDC/S2+W4tkjJYysMk+dRXaXupeE1wm44rrGPkY
9RU4sx7zoXSVjG+kbbxpa53h6+4hpcPrZDS7/2jH+wZHCLIi3v+0RcZI8XeG
JQz2IBB76fu1HVJYmTlamZdoC0XPK0+x0UvhVf72gst2F0Dz51ZZFrMUNnwP
Pig9aA39u/Q4NTikkEr6cFCsgQVcOnv3Sh+PFCYkyUmLi56Bf1FDXZcEpVCF
tuNAvLYJPGghylOLSeG3gj5m3nojkPl+KfohUQrjso7afPc0hKfkqi97d0oh
zVWubP/JY3Da7M/Rjt1S2FqxOe96TB/mw/UKzylIoS/XXtMmCT3wa7rL/EtJ
Cg3sbRPEDbWBa3nIKUZVCombop4rHxByiJKvpQ5JoX2K7aUT+ofgoLGzdLOm
FF70FOwPvqIG3aFVd4z1pP73f87/H/8f/cDw4w==
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9503418156353691, 
   10.637363663470211`}, {-5.717288033614721*^-17, 1.0522265238853818`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.694974714209086*^9, 3.694974728044886*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/data_howfar_meb_subject_00682.csv\>\"", ",", 
     RowBox[{"HeaderLines", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFAs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanFBs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"euclideanRCs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFAs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingFBs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hammingRCs", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{"{", 
   RowBox[{"euclideanFAs", ",", "euclideanFBs", ",", "euclideanRCs"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6949747116350193`*^9, 3.694974727282135*^9}, {
  3.694974773157167*^9, 3.694974776347844*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
2IiUBg==
      "]], LineBox[CompressedData["
1:eJw9Vnk0FU7YvhdJUpE22hAlUkkoS8+1ZAlR2SJJsiQhiSLZypbCTyqk7Pu1
RrKUUMq+70Jc+75d2+XznfOdb/6YOe955533eZ6ZeWe4b1tfNaEjEAgXNrr/
HcVZTCdjsvrwnxvsOzyGYLciFfjycx/WpTUcldyH8I3ak06u6MPYhDbfd70h
MM09r6351weflmf8e84O4eoU/9T0Uh+mEmZOq2wfwoexyh272PpR8+jZst7w
IAaGbE6J8ffDPLTcXubnIE5Tdqnroh8J6udDliMH8bg318pRux/VMdti3FwG
Udx14/WH+/2494vBrM5gECzthNRvz/uRpx8u1y81CO3mmKqesH44acXs/3xg
EBH1SuN0Wf0wLXuvI0EbwEj1GAtfeT/OfjNrtf47gLMVAScUe/vR1sdyS61o
AM/KzqreXezHZHGRdEXUAH6XtN57uYOC2Q+f7vS+GMDOoqcvyUcp8OPqMvS6
O4AbBVzJNdIUZAxXtn9WG0Bcbmn5tCYFArt3Ld06M4CJz+Yj7JYUZHNUOrvv
HcC5DBZmMQ8K+Ft4olhpFLiT04/rhlIQ8H2Nla6PgspETWXHDAoOKScaqf2h
YE/covmH3xT8vs9tOpxGwa2oD97fuinYeiIrrvItBUkfSQk9CxSEP2YtHnem
YC60v4xu+wDYuQZD5UwouPDOe5CXbwDXehSnSlUp8A46sVlRagAGEtb3zc9S
UO9fe/TutQHk5xnz8h2ggNPPTuGlxQBem0gkztBTcMd7nynZbQBLrofwe7Qf
qc8LXtS8H4Bx7nR3eEM/Fl1vxU6nDYB6VFvpXn4/ZJ0ZfrKXDaCfdmT38eh+
+D1J6Bfd0NlR3PJ9jW8/mh+pMujOD+BT1zWKjm0/uGynjjiyDOJWr7Fh/vV+
WFi9kftwZBBi9xaY50j9+GxxzvibxCDUWC27Vo71Y820073nyiAIt74+qdre
DyVj1yi6u4PwPbyd4c58HwIMeYt5XQehcpl3Iq+jD+36v3sV3g1ivsJPtPpH
H3h1LYl3UwcxuERwDI3vg5UmK/fLjXPH5cnjc+BVH3I1PpPInYPIn/X9esW2
D3RqurdqZgfxZI7SK67TB1XlVZdp5iFUXPLzrJLsw9uLEZ/YeTbuRZu3NRtX
H3pk5L+Lnh9CY6DiaXqGPghcGPqrozEE9xN8wVGD/2An4bf2xGwIspk9nybL
/+Gb2OlDH54NQc9MyWiU/A+MIo3S34KHMHg5iO5dwD9onHps0JMyhLyA4YFZ
238IFTzgTFc6hCK3or0MWv/Qf6zoA2/HEIZtbSXLxf7hJO+dAoWZIfB1veNR
3vcPj7mYOs23DMOod5risdSL4gMpK75cwzDY9W/zs/ZesHBo7CeLD8Pc/dM9
yfxeaO+ek6i5PAwX5i7dorBeRLC915s2GYbjTfddbE97MbJNypHdeRjb3/w6
d+ZGL84w94SIvhnGl7X7o/xSvXjK+PyrTvIwZhqOSS7v78UvOv62J8XDiBS1
eJC80gPW9YrFsLZhJF3QPCTb0QO9Fet936aGYfNr9G9JXg9iqOznejaPoPEC
k7pYaA8mZr/o0B0eAWNJn/ynJz04N6XvwCs2gnsXEj8zXO+B+9j6WwW1EYRd
3vnB8lwPKoeic8zvjKBf/0t5594e7KEoNvs6jeDd9SnFnInujXM2Op/y3wjG
trIKdJC7kdDlv7smcQSpjHKJIve7MdMmIjpdNIL119xaFSe6IdXcosneOgL9
CaMa8thfeNY72YlObuSTFxcbSPmL2urDb3QYR6HbHMnhcv8vOCtKsp4cHAWD
teIWj5N/cafMrCHs7CjG30ZzrU52IbVk62yhyihOWE2yzWV0YfF72s6e26Ng
SfwdbGfXBdmCa2foHEfBZ2cy6yneBb9c6hXewFEcyXumI7LSiebPYQ8UEkZh
2L+02f17Jw5lIND8+yjaJ35HOD7vhDm5L923eRRJSYqneC91IjPRqzZlfBQz
PKHHXrB2YjVWcKqaYQwChbulYlo6oBBVs2N6/xiiT/MseH7qQMDHh6fYRcYg
nzTz9Ix5B9pD96qLXhpDiZnqvmThDvC+y7fSMRrDKzkv8/mVdlgFGb5+8ngM
l3I+Tewqa0euP31qmP8YWgrPlrIEtYPOL76qMG4MlnxDE38N23HJW2W8u3AM
heb6Dq+F2vHm+SQLXdMYnD1Hrx1YbcNf16ATvGNj4DZ7VeVT0QZ+Z3FVBfpx
DKjq1baEtcH2Scc9c85xKO2vOsp4vw0Fj1xe+gqPQ/v5dtXdaAOj7ZHkFKVx
9J8Y1WLY2QYNq7LyasNxaIgKaNVTWhFqcW9kyn4cFAkDmnNeK/pNdzCzvx6H
nd27yk0BrThpnHVcNHYc8hYP6s1MW/HYUEdZp2AcV16Nf4+UbkWR/or5k4Zx
WN7qL0vf3Qpm3U/eYSPjED8R0fXfRAs0NeUSCokT2Oc9+03+dws+agyWde+b
QCRv9tmSqBYMqb4cJJ6ewKO7Wr3Mz1pwRvnUZl7FCYh/HuLYp9eCpxcbjirc
nIAsq3XcoFgLfsk4KJg/moBAbvfPR7tawHphv6mv3wSkbc6Gf5tphp7E9xcp
0RP4/kt4qbCuGTFixrHVeRMoJTEctsloxtiZzT+n6iZwWT19qDawGWKnkvt3
Dk+g3ckzqtO2Ga6C6gyihEnwHMiT9ddsRvmx2SM6eycRk3nCr1+sGbt438k9
OTmJ82sfK1o5mnGTS9I47OIkfgmOZJrRmpBwoNu98MYkPIYoHa96mzCzzyOq
++Ek4ttGbBV/NUFq97Fi4stJJAZfzApIboInW0XvkahJLB76XmAS2ITabdZE
ha+TaH1lyl7i0AROZnZu89pJDJz/rRV7swm3Gb+QfAcnUb7zRweTQhNS6PRv
paxNQjuCajIi1AQnl3UMMk+B+75Hh8KeJkQ416k/3jOFao+Fes71Rvx0ijbc
wjMFefc3d4yHGjHy5JF1qNAU6hT81w/WN2LHY0UXwfNTiB3Y4qVY0Iiz9hz+
BfJTuHnGt6YzrhHX7UY/qmlM4XpblE5HYCOe2Ram/tWfQr+TpQzJuRHRNv7f
rM2moODdqrjlbiN+WxlVEx5OIXF3aq+IViPGLEX+Bj6bgmPAM8VCmUaw3ds0
weM7hbd/Dl2KPtkIsbsttKzgKUh7Rav37W+EvlnitouRU6AL/cDhtKURriZO
B5tTpoDCvZFm1AbEGqsJmeVuxKfq7IinNKDc6LD0YskGPj3xQ+KNDZg0nFb1
qdnAww3S7pIG7LpZcoOzYwpnXVxaLmQ24PyNYMvkgSncqdnrmBHZgJt6Zk+l
Zqag+u7rP4vABrjrnverok3hjCCLjLlbA+K1t364uWUaU29NdsQ/aEClZlfy
5K5pXPq1w433dgOmr6blu3JNY7r+dUbX1QbsueJWwXZiGp5TpO4auQZIql/r
iBKfxhlhZZ3Fsw24pcY3KiI3DVcZ+q5rRxvwQoW6XHp5GhFdR8S69zYgSfkP
s7beNI7t5BB8t6UBNYphnIMm0xAVl0p+vFKPuYv3BR4/mEbVh/ZBl/F6cMhD
YovzNBK1O0ITu+shLct2KdR7Gqkf5LfP1NXjNqnvuuCbaZD3hEKrtB5eF7Lv
FnyaxpHgreo1OfVIkfJ6opY8ja07OE7eSKxHncR1n78504i8Tk2lhtVj4Zxg
iHXxNJ77i1mEv67HfnFaAqF6Gm/IvlzKbvUgidbkBrZNo13xp/zCw3qYiET+
5qFMg6Wuak+EaT18hR+2Zk1N42byTLXM9Xqknbo4JL86jT0ef0KbVerRKLR3
sWnzDNqzAlOuX6jHouDwZjP2GQQKi9T9PF2PgwL5excPzcA5u6xh95F6yPK/
OuYjMIOdtfW28rvrYXbUUJxTbAYZvAbqqpvr4ccrrJgsMwOrHZLb+JfqkMFD
ryOlNgPOF7I59SN1aOZqMq3S3Zh/quiNQmcdVg7F29+8MwP22n/bnlXVgevg
E89J6xnIkCUrH36rw8X9Km9dnWawRj9xkSetDhYcB+PYvGZQEuuT5vGpDq/3
TmZH/TcDCt/Xl//51yFr94+fIh9nUN5Wzq/sUodW9qCm0sQZWISKtUZZ1YHG
ZkLRyp7BnQHe+hCDOvCwis8PFM2glW/5Jb9qHRS3b9n0uHIGX4syNC5J1MGS
pWPXltYNfNsPpi8dq0MgM5k3tG8GK6cCI4R31yGHyeWs4OQMiov+uI0T69DB
eEW+YHkGmsXHtPknakHYdERTjXEWrC56LV1tteCjnzf+yzaL939Vcrf8rIUy
seyh9cFZLJ6y9I1Pq4XV+nsPwvFZmDPGeGaF1CKIZhEUeHYWRCdeQQGPWuSu
SEXzkGZB7jrNyGRZi66l7VlZKrOo87IjK2vWgm6xp1heZxa/PAP2jknW4thC
Zn3T7VkInNulMM5TC9W55/9MrWZxeFii6tKWWjyY0Z6hPpmFaTJNftPfGryd
4qfzeTGLpuDfrXwJNcifWGbjDJxF8GB48rxNDbrHKrmTP8zCWMmj3fZcDRhG
PwpLJcwiumer4Ie1ahwftpGpyppFVO2r7Q9KqnF5UPbKze+zsDnT6TvjWY2H
lF1Gk+WzYPcfe8GtXI33fQM2rs2zEHYw/kxgrkZhb64r279ZxPntSvjvTxX+
dfsGRI3P4oK4FmeHVxU2/70RIbI0Cz7V4dW/8lU40XkyvZRhDkpttVejCVW4
0k4o0mKdgw4n+9OT+ZWwb62vGdg/h9jBzDtedpUIbY7pdjg2B7Yonl85Jyrx
vdF+kklkDhNipr2lfRXor1daD7kwhy382Uz5IRXYUse5Q/DSHH7R66pHX67A
yZqxQwVac3Csq9jmQ1eBa1XfTqoZzaGYLyzCIbscjysCLvy1nIPxVY0QJ7Ny
hP+5fdn68Ry6enQ/R+0rR3HZ2ZuE53Po6Dxyffn3Hwz+ZLQK9J/DwwOx1QGP
/4CltNWZJ2wOmVTZBrtjfyBcnPQqK24OUu6+VdlNv6FV9DRcPnMOztr7nIw9
fsPx22VyU+EcXl34/OX16d/4VMBVaPpnQw9J6z7FrjKU5s1UUhvnoBylwhPh
U4bh3NJO7545uNokBSWIlmH7l7djHGNzqJ3Ie/+w9xdEss1Xk6hzSHnwY+/O
V7+gmyXBIkU/jwVhNqe3537BOYPlQNX2eUw9c5Zm7/+JqLS/gjc555Gjp745
1P8nysjpkpN88+AvCe+WkvyJ0WR3FVfhecyt0wdvGywFa5KmPpv0PFbodyoc
CiqFaMLRe1FK8xhxb2ZyQyn04hYdRTQ34uty4hTGSuASU+5bajiPBBdJDreQ
EsREfQjVujcPbZftN0mKJfgTYZU0YD+P7JUjpcHzxZj4SMpzcJ+HYuBST0BM
MdjDd5YzvZ6HIJ3agIxmMc6F9beFhMwDI+crvzAUwyAkZ1ggdh7mK8/PEHN+
wP2d91J++jzeV109e8L8B+KC9baoFcyjpMZdU2H/D1QEneD4WzYPDs8j9jdq
ijAVuMZv3TCPKGpUk+PzIuwOqD1H6J5HwNciOrJEESReRykFjmys/zc3bKXv
Owz97HR5FuZhbF/3cELzO577KphnEReQynbr5cXf35Dove+x/LYFcMaMZu+8
8A3VniNeTfsW8OKX4VHTnELMPi94Z8q7gPS8ZPrLwoXY5/E6nnpqAQ8O3G9r
Ti2AtNutL96SCzDblLOJ5VQBjFzOlHEoLsB3b7opNSMfns4MLUlXF+Aku2YQ
KZ6PZKfmAcmbC/jXciCOtSgPtU8SFirvLmBTNnPaJZU8zDs4Mt58tIDw6rLz
mm1fwWmvumfSdQHmyxqzJy2+AnaHjrr6beTvy1/ppOXiju2UKNv7Bdz7Zjtt
8CYXPjbFF6OiFwCv1bMZQrlItXqjJZK2AAqj49eGP1/QYGlqUpq3gEX2sT0/
zL+AanHukdavBSjUPOKwZ/6CA3eZXwzULSD78OmEsdQcyJh1vnHoWgCd6/KL
Q9o5MDVJjWEaXkCAvoM5PSEHL41dP4fMLWDdrpDzv5RspBtdLRUgULEqd+du
sX42mgx5G/O3UtFZ++ql77ZsLBss9KnupSIgVlix+8dnHL7xe7aLh4qnrwT0
sx9/hrxeKL31SSoGCW00wpnPuKtryU6QoCLS/NN49ngWXmtfOBJ4kQol96Nu
ZclZyNRkFeG5QgX9dd0v/JZZaLn6TzbrBhXxGkTFypNZWNX4fFXenIri9s2p
MbOZ4Fb3vN30kArH0CmOmLxMKKjp2pq6UKFT/ya8wCMT91QE3Km+VCxlumf0
XM5EgPJqoPdbKrqZP7YQD2QiW7E6kiOKimBRg0O7RjPQfjEiI4lMhQqDz0mm
ggysy9n+kPxKxY+F61p1rzPAKytfV1lKRQq566GRcQaUSXt6DWqpiKk/1ZZ8
PgP3LwxNTXRQsVPptl40Wwb+k8ojuA5SIfDtn5PkaDq+SPixss1ScfC2bpTZ
r3R0nrvJFbVGheBiwK/90ekgip8+LcK8iANB1cyqbuk4KkpHKt29iBffTOPG
bqVDRaRRXYt7EXyW3KlzMumwEY4zHDixuPGPpcrr8qYj+NRja4dzi/DxpnJv
Y0pHntAlFyb5RWw1aQpmb09Dt+AB/xD1RUR2Za/5xKWBXmDio4D+IlxSxlvv
PUoDP39Rar7pItgentNLUEiD2tH/vqnaLqLk5f0HpzjTYMt7p7rLeRE53x+c
nZ5MxTsesb9WPot4OjV6t7csFQVcTBPrbxZRUXouZCoyFb2H2mkBEYtQ6DC4
yv4sFYwHU7bxpCxi/RJt64UbqRDc/+xg1pdFbGYsLrgjlQoNDg0h+ZJFVLq5
MzgfSsWjvTzSTdUb+SyfNj+lS0Xo7jlV0/ZFaOb7v7oxRMY39l83qJRFGLw9
9mJnLRl9bO8tvacX8VJGP/ztVzKYWC2ectAWsVP6k2ZvDBlC26X8kpiWsOTx
6ONoIBlXWbZ/kNy1BIZQxZZUVzIcmHuSKw8vobTcIfXIAzI+MGXmGwguoXGa
IKJgTMYPxucVE2JLeP9AmrJDh4wBBu0OF9kl7P11cIeTKhlb6flHWS8v4cWr
UD13OTJOE5eXI68vISip3I9Ligyt9QpmEZMleBJ4JDTEyHhCC+cstVlC4pvI
oq1nyPi4Yi2g9XQJR0NzvqifIqNkSUZiwGsJer2iKbtPkjFEZb/kELQEKwI1
WGfD3rZAuc70aQn5jBU6rKfJEJ77cjckaQlk8SBvCREydGZ8ngjkLCHJOUGp
UpwMpyl9n/wfS/ic67BaKk1G5IRQiGrVEnIXBnDgIhk/x9YTulqX8PvJlzt/
1MgYHanLtepfwvGYzKjSDb47hqN/r09u8JE9nLlpQw/RwUetAStLOLivvdjD
mozrFMUh7s3L2EHLGj/rTIZLH8di5s5lRMdOxOzwIyO6d3Sz/KFlpDBynmX+
QMaf7sK9TceX4f64//U+MhnjXf7HTEWX8dBBZlToOxlsnUbiVNIy5C/ulkQ9
GeLtIoreqsvQi38WfmGADP3WTTocusu4W7N0++AKGW7NLaZJxssI4nyjXM2a
itjGRHtJ62W02IjvJB1LRUW9k2el4zK4KuLj71xIxWSt2lsDz2XYxNoOHddO
xe6aw3ETgRv48kxSna1Scb5qOtslfBly99n2XfZKhWFFyU/WxGX4kXrXvCNS
4fEnuCny8zKMjJgGOPJSEV9mRjlTtAzbymzz0YZUVP08P19SsYx7Up6xI+Op
mC7ZukmrZRnvzdtEiExp2FvctWvg3zJGG8dK9/GkQbIojddhYhlxB3U/cUql
weib21mm5WUMh8V9ndBKw4uCa/Ihm1bQGONf4WKdhuQ8Pk0BthUUGx4JyPJO
Q00u1Tj/wAquqMdJ2kWmYT7nz0NV/hWMSjfMx39NA0d2mEeXyAo2CfmxiNWl
QTrrfpAVVvBy18ukTUNp2Chp0euXVkDYPzBEo6XBK40tK0B7BTlB8VPuW9JB
JvcVc99ewbhOn7A7ezrqkrPrM++vQOH5yLWpA+mgJnr9k3uyAjEzX9kffOnY
n3B9pvH5ChisuJ4OC6VDJk6QzjRgBR/2v3e6IZoOkxgaGzVsBcPDhqQdUul4
GVXD7R2/gh41jaX5jfqWFhEpzJG1gldtdJ82Kaaj6eNDmaRvK3DcFO0popKO
pQ8Xr0iWr2DNc27S7nI6DobtNapsWsHFmQczRRrpkAsZtjHoXUHLH7nxbVfT
YfYu33VibAU6wXpvr27Yr4JfBbgsruDZ5+Z4zyvpyAgyjGBlWIWVeYpjtHo6
WgKF0yN3rEKXJvQ6UjUdK/70RWf2r6J56b2Wo1I6uF831ZQcXcW+lwnH+OXS
cdEvvlvzzCp+hB2uiN3gc8/3ySRFehUtzP/pTp5Nh7+3yrq98ioKre9cJp5I
R5bnwR1MWqvQn3pQ1sqdjrbnk4dCbq0iNaO8wm5POmjuP04KWK4i09SBrnFD
/yNuQRfyHVbBWN4dNUpNg6KLyWVVj1Usfzl8JLctDfedxW92vd6w998Y3L6x
34FOW6ysQlcht3wwYS44DV+edDivx64ieIdHm7VNGjocyK8CMlbRdqUpxFsp
DUR7l3Duwg2/8PNkpUNp4LO7Qs78vYrOOa77+dOpULY9UijXuApRSaOa8eJU
WNvMVzZ2r+Jzq5DyRGAqgqzKOk1GV8HxtOxP5c1UfLUMGVtYWAW1YFti6PFU
dFncW/Wio2HebDHYYoYM+rvSLBzbaRhY1fLQ2KjXx8x2HEjioEHIgvKf0TMy
1Ex6BSX5aJAn9K9lyZDxwDhLsvI0DU5OgnSG9GS8M3qhYiBFQ6vvQrZjSQry
DXX0JxRpcDU4NXbIPQW9BsfvuVyjwU/3w08zpGDTjRVHVkMaTtXocVitJOO4
XpVvpAUNW8J036rmJENd91PoGXsaCm73Xzxkk4yH2g+SStxo6FV9c3+NPxkh
mnJ5mq9oeCU/asPUm4TCq7vLKe9peLp5OFPnfRL6NAbb7GNoGMrNcNisnoTN
6l+HN6fTUNz25NeZTUkQUnu59D6fhoe6fSpzeYm4omKwRaCMhjtLVClTm0Q4
KJ/iyK+n4YvPmEQUXyLCFInHVf/SUHWqRfxHewK+X2w41zVMw98/bjc6/BNA
kYtVspqnQTmPTWXzxQRskXXQXSesQe4LN+eN5XicIimbB7CsoaSRznsyLR7X
Lux/zL1vDcbVqnRNJvF4IjXulXlkDQXb9S0PH4hHuMT3d3Kn1vCy78btnvo4
lJwLjG+UWMM/5hwBft84DIoZfzFRWMOXGKvETbJx2CYqWrZwZQ0WR0u0PJdj
ISyyucXLYA1Cmr3COVmx0BJuG9h3dw1cXh2ln+7HwulU8kKi3RrKSlr2qPLH
4pOQM6Ok6xq+6T5NK+6LwU9B9T2VLzfiD6S5MkXEYPg491GDd2vQ+lgoy2sQ
gx38s6ITURt4Q7N27dsfA5GjPy+6pK7BcYLNhtIWjeu877RY89ZAbFnz9wuJ
hjPPXZPIn2sQnha4xqIXjWguyUdn6tYwfYeidHt/NMoObXtR0rkG9zTqd9+u
KIwf6H6jObSBp1awxTUiCmz7M2Ios2t4o78tVvpOFEQ5PD7br6/B/GVtaT5/
FPT3apVu3rqOPJ539TPjkXDZfazx/Z51IFD2TVtWJGLZl/qO86wjtFz8tqlj
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
/9pYr4iG3Mnj/2//D4qu3a4=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.006944444444444445], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/wckrY+c
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.9184513146084877, 12.590357309659304`}, {
    0, 0.766095858529342}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.694974714209086*^9, 3.694974728044886*^9}, 
   3.6949747791898613`*^9}]
}, Open  ]]
},
WindowSize->{1325, 1003},
WindowMargins->{{Automatic, 1784}, {-21, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 93, 1, 30, "Text"],
Cell[654, 23, 1839, 50, 180, "Input"],
Cell[CellGroupData[{
Cell[2518, 77, 194, 5, 32, "Input"],
Cell[2715, 84, 51724, 862, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54476, 951, 230, 6, 32, "Input"],
Cell[54709, 959, 5021, 142, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59767, 1106, 1016, 26, 54, "Input"],
Cell[60786, 1134, 47210, 950, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108033, 2089, 693, 16, 32, "Input"],
Cell[108729, 2107, 50818, 1043, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159584, 3155, 785, 20, 32, "Input"],
Cell[160372, 3177, 42315, 864, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202724, 4046, 1520, 49, 180, "Input"],
Cell[204247, 4097, 51348, 856, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255632, 4958, 1518, 49, 180, "Input"],
Cell[257153, 5009, 53262, 888, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310452, 5902, 1567, 50, 180, "Input"],
Cell[312022, 5954, 49603, 829, 249, "Output"]
}, Open  ]]
}
]
*)

