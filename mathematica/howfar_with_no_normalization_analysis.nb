(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    407746,       8367]
NotebookOptionsPosition[    404902,       8294]
NotebookOutlinePosition[    405256,       8310]
CellTagsIndexPosition[    405213,       8307]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Data Import", "Text",
 CellChangeTimes->{{3.694950184821402*^9, 3.694950200977116*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/howfar_data_with_no_normalization.csv\>\"", ",", 
     RowBox[{"HeaderLines", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subjectID", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fbGenuine", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcGenuine", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imposterID", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fbImposter", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcImposter", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694949662855568*^9, 3.694949706528145*^9}, {
  3.694949862904303*^9, 3.694949874248372*^9}, {3.6949499207710133`*^9, 
  3.6949500053398933`*^9}, {3.697631376184207*^9, 3.6976313776699142`*^9}, {
  3.697632473240041*^9, 
  3.697632475981661*^9}},ExpressionUUID->"4fe66057-fb47-4eef-beaf-\
93a5ec595a08"],

Cell[TextData[{
 "Histogram of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fbGenuine", ",", "fbImposter"}], "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Genuine\>\"", ",", " ", "\"\<Imposter\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 
  3.6949501265134706`*^9}},ExpressionUUID->"81ba8f13-908c-41ab-b4b1-\
87ca28d1b156"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.616]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.616]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0., 0.}, {20., 1}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{20., 0.}, {40., 121}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 121]& , TagBoxNote -> "121"], 
              StyleBox["121", {}, StripOnInput -> False]], Annotation[#, 
              Style[121, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{40., 0.}, {60., 177}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 177]& , TagBoxNote -> "177"], 
              StyleBox["177", {}, StripOnInput -> False]], Annotation[#, 
              Style[177, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{60., 0.}, {80., 90}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 90]& , TagBoxNote -> "90"], 
              StyleBox["90", {}, StripOnInput -> False]], Annotation[#, 
              Style[90, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{80., 0.}, {100., 22}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 22]& , TagBoxNote -> "22"], 
              StyleBox["22", {}, StripOnInput -> False]], Annotation[#, 
              Style[22, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {120., 5}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 5]& , TagBoxNote -> "5"], 
              StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
              Style[5, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {140., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.616]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{80., 0.}, {100., 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {120., 85}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 85]& , TagBoxNote -> "85"], 
              StyleBox["85", {}, StripOnInput -> False]], Annotation[#, 
              Style[85, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {140., 198}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 198]& , TagBoxNote -> "198"], 
              StyleBox["198", {}, StripOnInput -> False]], Annotation[#, 
              Style[198, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {160., 111}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 111]& , TagBoxNote -> "111"], 
              StyleBox["111", {}, StripOnInput -> False]], Annotation[#, 
              Style[111, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{160., 0.}, {180., 16}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 16]& , TagBoxNote -> "16"], 
              StyleBox["16", {}, StripOnInput -> False]], Annotation[#, 
              Style[16, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{180., 0.}, {200., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}}, \
{}}}, {{{{}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {-4., 0.},
      FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0., 200.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Genuine\"", "\"Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.7023936988892117`*^9},ExpressionUUID->"0d4398db-7a9e-4281-b2d1-\
8af485ebe89e"]
}, Open  ]],

Cell[TextData[{
 "Histogram of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rcGenuine", ",", "rcImposter"}], "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Genuine\>\"", ",", " ", "\"\<Imposter\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 
  3.6949502440435*^9}},ExpressionUUID->"c1f382ed-7c9f-4367-b392-ea229186163c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.574]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.574]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{30., 0.}, {40., 8}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 8]& , TagBoxNote -> "8"], 
              StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
              Style[8, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{40., 0.}, {50., 51}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 51]& , TagBoxNote -> "51"], 
              StyleBox["51", {}, StripOnInput -> False]], Annotation[#, 
              Style[51, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{50., 0.}, {60., 89}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 89]& , TagBoxNote -> "89"], 
              StyleBox["89", {}, StripOnInput -> False]], Annotation[#, 
              Style[89, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{60., 0.}, {70., 92}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 92]& , TagBoxNote -> "92"], 
              StyleBox["92", {}, StripOnInput -> False]], Annotation[#, 
              Style[92, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{70., 0.}, {80., 87}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 87]& , TagBoxNote -> "87"], 
              StyleBox["87", {}, StripOnInput -> False]], Annotation[#, 
              Style[87, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{80., 0.}, {90., 46}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 46]& , TagBoxNote -> "46"], 
              StyleBox["46", {}, StripOnInput -> False]], Annotation[#, 
              Style[46, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 23}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 23]& , TagBoxNote -> "23"], 
              StyleBox["23", {}, StripOnInput -> False]], Annotation[#, 
              Style[23, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 9}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 10}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10]& , TagBoxNote -> "10"], 
              StyleBox["10", {}, StripOnInput -> False]], Annotation[#, 
              Style[10, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.574]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{80., 0.}, {90., 1}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 70}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 70]& , TagBoxNote -> "70"], 
              StyleBox["70", {}, StripOnInput -> False]], Annotation[#, 
              Style[70, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 102}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 102]& , TagBoxNote -> "102"], 
              StyleBox["102", {}, StripOnInput -> False]], Annotation[#, 
              Style[102, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 97}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 97]& , TagBoxNote -> "97"], 
              StyleBox["97", {}, StripOnInput -> False]], Annotation[#, 
              Style[97, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 73}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 73]& , TagBoxNote -> "73"], 
              StyleBox["73", {}, StripOnInput -> False]], Annotation[#, 
              Style[73, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{150., 0.}, {160., 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{160., 0.}, {170., 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{170., 0.}, {180., 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{180., 0.}, {190., 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {26.8, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{30., 190.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Genuine\"", "\"Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.574]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.574]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 
   3.702393699074299*^9},ExpressionUUID->"baaf5f65-2654-4f4f-ac0c-\
06804d12d977"]
}, Open  ]],

Cell[TextData[{
 "Histogram of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950421456979*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"LightBlue", ",", "Blue", ",", "LightRed", ",", "Red"}], "}"}]}],
    ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\"", ",", 
      "\"\<FB Imposter\>\"", " ", ",", "\"\<RC Imposter\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Euclidean distance from the VGG output for the fa image\>\"", ",", 
      " ", "\"\<Number of subjects\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.70239369139087*^9, 3.702393707423689*^9}, {
  3.702393757865261*^9, 3.7023938174974613`*^9}, {3.702393871035574*^9, 
  3.702393892994755*^9}},ExpressionUUID->"680cff4f-58c4-4cdd-8451-\
23985c2a7860"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5599999999999999]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10., 0.}, {20., 1}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{20., 0.}, {30., 37}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 37]& , TagBoxNote -> "37"], 
              StyleBox["37", {}, StripOnInput -> False]], Annotation[#, 
              Style[37, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{30., 0.}, {40., 84}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 84]& , TagBoxNote -> "84"], 
              StyleBox["84", {}, StripOnInput -> False]], Annotation[#, 
              Style[84, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{40., 0.}, {50., 104}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 104]& , TagBoxNote -> "104"], 
              StyleBox["104", {}, StripOnInput -> False]], Annotation[#, 
              Style[104, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{50., 0.}, {60., 73}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 73]& , TagBoxNote -> "73"], 
              StyleBox["73", {}, StripOnInput -> False]], Annotation[#, 
              Style[73, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{60., 0.}, {70., 55}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 55]& , TagBoxNote -> "55"], 
              StyleBox["55", {}, StripOnInput -> False]], Annotation[#, 
              Style[55, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{70., 0.}, {80., 35}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 35]& , TagBoxNote -> "35"], 
              StyleBox["35", {}, StripOnInput -> False]], Annotation[#, 
              Style[35, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{80., 0.}, {90., 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 9}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{30., 0.}, {40., 8}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 8]& , TagBoxNote -> "8"], 
              StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
              Style[8, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{40., 0.}, {50., 51}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 51]& , TagBoxNote -> "51"], 
              StyleBox["51", {}, StripOnInput -> False]], Annotation[#, 
              Style[51, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{50., 0.}, {60., 89}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 89]& , TagBoxNote -> "89"], 
              StyleBox["89", {}, StripOnInput -> False]], Annotation[#, 
              Style[89, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{60., 0.}, {70., 92}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 92]& , TagBoxNote -> "92"], 
              StyleBox["92", {}, StripOnInput -> False]], Annotation[#, 
              Style[92, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{70., 0.}, {80., 87}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 87]& , TagBoxNote -> "87"], 
              StyleBox["87", {}, StripOnInput -> False]], Annotation[#, 
              Style[87, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{80., 0.}, {90., 46}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 46]& , TagBoxNote -> "46"], 
              StyleBox["46", {}, StripOnInput -> False]], Annotation[#, 
              Style[46, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 23}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 23]& , TagBoxNote -> "23"], 
              StyleBox["23", {}, StripOnInput -> False]], Annotation[#, 
              Style[23, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 9}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 10}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10]& , TagBoxNote -> "10"], 
              StyleBox["10", {}, StripOnInput -> False]], Annotation[#, 
              Style[10, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 27}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 27]& , TagBoxNote -> "27"], 
              StyleBox["27", {}, StripOnInput -> False]], Annotation[#, 
              Style[27, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 58}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 58]& , TagBoxNote -> "58"], 
              StyleBox["58", {}, StripOnInput -> False]], Annotation[#, 
              Style[58, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 93}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 93]& , TagBoxNote -> "93"], 
              StyleBox["93", {}, StripOnInput -> False]], Annotation[#, 
              Style[93, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 105}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 105]& , TagBoxNote -> "105"], 
              StyleBox["105", {}, StripOnInput -> False]], Annotation[#, 
              Style[105, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 79}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 79]& , TagBoxNote -> "79"], 
              StyleBox["79", {}, StripOnInput -> False]], Annotation[#, 
              Style[79, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{150., 0.}, {160., 32}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 32]& , TagBoxNote -> "32"], 
              StyleBox["32", {}, StripOnInput -> False]], Annotation[#, 
              Style[32, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{160., 0.}, {170., 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{170., 0.}, {180., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{180., 0.}, {190., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{80., 0.}, {90., 1}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 70}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 70]& , TagBoxNote -> "70"], 
              StyleBox["70", {}, StripOnInput -> False]], Annotation[#, 
              Style[70, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 102}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 102]& , TagBoxNote -> "102"], 
              StyleBox["102", {}, StripOnInput -> False]], Annotation[#, 
              Style[102, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 97}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 97]& , TagBoxNote -> "97"], 
              StyleBox["97", {}, StripOnInput -> False]], Annotation[#, 
              Style[97, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 73}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 73]& , TagBoxNote -> "73"], 
              StyleBox["73", {}, StripOnInput -> False]], Annotation[#, 
              Style[73, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{150., 0.}, {160., 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{160., 0.}, {170., 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{170., 0.}, {180., 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{180., 0.}, {190., 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"Euclidean distance from the VGG output for the fa image\"", 
        TraditionalForm], 
       FormBox["\"Number of subjects\"", TraditionalForm]}, 
     AxesOrigin -> {6.4, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{10., 190.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FB Genuine\"", "\"RC Genuine\"", "\"FB Imposter\"", 
       "\"RC Imposter\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, 3.7023936995755033`*^9, 
   3.7023937742886467`*^9, 3.702393822203018*^9, 
   3.7023938962903843`*^9},ExpressionUUID->"4ce30a61-2ab3-4d10-99c8-\
4e03371c401c"]
}, Open  ]],

Cell[TextData[{
 "Histogram of the genuine distributions when measuring the distance between \
the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950440441794*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"7ccaa4e0-ae50-4040-9f98-25b2d232165a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Magenta"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950461485366*^9, 
  3.694950513740334*^9}},ExpressionUUID->"bc281718-2af3-4206-a751-\
8314708fd125"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5599999999999999]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 1, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{10., 0.}, {20., 1}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{20., 0.}, {30., 37}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 37]& , TagBoxNote -> "37"], 
              StyleBox["37", {}, StripOnInput -> False]], Annotation[#, 
              Style[37, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{30., 0.}, {40., 84}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 84]& , TagBoxNote -> "84"], 
              StyleBox["84", {}, StripOnInput -> False]], Annotation[#, 
              Style[84, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{40., 0.}, {50., 104}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 104]& , TagBoxNote -> "104"], 
              StyleBox["104", {}, StripOnInput -> False]], Annotation[#, 
              Style[104, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{50., 0.}, {60., 73}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 73]& , TagBoxNote -> "73"], 
              StyleBox["73", {}, StripOnInput -> False]], Annotation[#, 
              Style[73, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{60., 0.}, {70., 55}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 55]& , TagBoxNote -> "55"], 
              StyleBox["55", {}, StripOnInput -> False]], Annotation[#, 
              Style[55, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{70., 0.}, {80., 35}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 35]& , TagBoxNote -> "35"], 
              StyleBox["35", {}, StripOnInput -> False]], Annotation[#, 
              Style[35, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{80., 0.}, {90., 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 9}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{30., 0.}, {40., 8}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 8]& , TagBoxNote -> "8"], 
              StyleBox["8", {}, StripOnInput -> False]], Annotation[#, 
              Style[8, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{40., 0.}, {50., 51}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 51]& , TagBoxNote -> "51"], 
              StyleBox["51", {}, StripOnInput -> False]], Annotation[#, 
              Style[51, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{50., 0.}, {60., 89}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 89]& , TagBoxNote -> "89"], 
              StyleBox["89", {}, StripOnInput -> False]], Annotation[#, 
              Style[89, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{60., 0.}, {70., 92}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 92]& , TagBoxNote -> "92"], 
              StyleBox["92", {}, StripOnInput -> False]], Annotation[#, 
              Style[92, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{70., 0.}, {80., 87}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 87]& , TagBoxNote -> "87"], 
              StyleBox["87", {}, StripOnInput -> False]], Annotation[#, 
              Style[87, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{80., 0.}, {90., 46}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 46]& , TagBoxNote -> "46"], 
              StyleBox["46", {}, StripOnInput -> False]], Annotation[#, 
              Style[46, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 23}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 23]& , TagBoxNote -> "23"], 
              StyleBox["23", {}, StripOnInput -> False]], Annotation[#, 
              Style[23, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 9}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 10}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 10]& , TagBoxNote -> "10"], 
              StyleBox["10", {}, StripOnInput -> False]], Annotation[#, 
              Style[10, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 1}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 1, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 4}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 27}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 27]& , TagBoxNote -> "27"], 
              StyleBox["27", {}, StripOnInput -> False]], Annotation[#, 
              Style[27, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 58}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 58]& , TagBoxNote -> "58"], 
              StyleBox["58", {}, StripOnInput -> False]], Annotation[#, 
              Style[58, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 93}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 93]& , TagBoxNote -> "93"], 
              StyleBox["93", {}, StripOnInput -> False]], Annotation[#, 
              Style[93, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 105}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 105]& , TagBoxNote -> "105"], 
              StyleBox["105", {}, StripOnInput -> False]], Annotation[#, 
              Style[105, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 79}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 79]& , TagBoxNote -> "79"], 
              StyleBox["79", {}, StripOnInput -> False]], Annotation[#, 
              Style[79, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{150., 0.}, {160., 32}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 32]& , TagBoxNote -> "32"], 
              StyleBox["32", {}, StripOnInput -> False]], Annotation[#, 
              Style[32, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{160., 0.}, {170., 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{170., 0.}, {180., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{180., 0.}, {190., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5599999999999999]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{80., 0.}, {90., 1}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
              StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
              Style[1, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{90., 0.}, {100., 3}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{100., 0.}, {110., 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{110., 0.}, {120., 70}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 70]& , TagBoxNote -> "70"], 
              StyleBox["70", {}, StripOnInput -> False]], Annotation[#, 
              Style[70, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{120., 0.}, {130., 102}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 102]& , TagBoxNote -> "102"], 
              StyleBox["102", {}, StripOnInput -> False]], Annotation[#, 
              Style[102, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{130., 0.}, {140., 97}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 97]& , TagBoxNote -> "97"], 
              StyleBox["97", {}, StripOnInput -> False]], Annotation[#, 
              Style[97, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{140., 0.}, {150., 73}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 73]& , TagBoxNote -> "73"], 
              StyleBox["73", {}, StripOnInput -> False]], Annotation[#, 
              Style[73, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{150., 0.}, {160., 28}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 28]& , TagBoxNote -> "28"], 
              StyleBox["28", {}, StripOnInput -> False]], Annotation[#, 
              Style[28, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{160., 0.}, {170., 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{170., 0.}, {180., 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{180., 0.}, {190., 2}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
              StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
              Style[2, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {6.4, 0.},
      FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{10., 190.}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FB Genuine\"", "\"RC Genuine\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5599999999999999]]], 
                    RGBColor[1, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5599999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950509855113*^9, 
   3.694950514467827*^9}, 
   3.70239369986038*^9},ExpressionUUID->"e1f35ed2-594c-42f9-a6e4-\
f07f315309fe"]
}, Open  ]],

Cell[TextData[{
 "List plot of the genuine distributions when measuring the distance between \
the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950440441794*^9}, {3.6949505581190042`*^9, 3.694950559117403*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Magenta"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950461485366*^9, 3.694950513740334*^9}, {
  3.694950560886322*^9, 
  3.694950572006558*^9}},ExpressionUUID->"ed54ee26-aec6-4000-a13a-\
87aa192254af"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1: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
7C/LF9D3umrEr9g/z4X/AXT4fJw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1: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
4ZtQ4T6tZ/8fn+8olHEH6bvOjPvTu7OZL5rh4CNZlz6K4m8wB/bJcO5fMzx5
SbqilpH91Waobye0nU9S/6pm9L93FZ33BPSP7kT6fWYIOi/rNN9lk/8B/WOT
Ge/NOG//c4zmbb0Z+ZxxOOO/BeN1fSfXvwXfA7Z2Zz5mQX7140cUn2gLWDsJ
35EM3ncD8s2jlG+dJcB3tvO8sMCBJlkTNoVkgwXrKz6I+IHbAlnBwr9qBfVD
tQU23ZKuk/OYz1mQb7zQQvo8FuT78YwHPgv6X5lD9V5rwX3vhIv73xLIv5Ps
q7fgfqgfzv1vRf47rIz0R1hxX1rRlueBFTZclzHbtxK+Rltxf3W8T/gJVujS
W8C+s5Q/nRX3BbhAsmLF+JYdYvyzQlgXAf0PUP+5rXD0snQ1NU0g/61of+Q3
dF61Iv5cjCZ7PVZ8TzmURPb4rDivPXcY/6z4ntF/AeXLb8X5eqKF+9+K+1FB
X54/Nsz3miDufxvk3ZQxPwXxPmjD82uGcv3bcJ8amEbvTWCDRVelqzqY7tPZ
cN4Vzuf82/D9KutLut9gw/m+5m3ej23Ivw9+TvVZbcP5W6WleKk2eP+crMl2
kT6PDfs31sT82gbHOgtlfQPVS60N9/X36plv2hD/l5+i+qkP+DcknvdPO8At
6Q1lPhxhx36L05I9Wjvy5yO1lO9oO86bdX05/3bsp8Rd1G86O+y5KvWDipgv
2uGzh1Iz6T3Gfzu+z8IU5m92iGwjlH0vkVxtR34U+ib9XrUjnxn7LuXTY4el
TdK7+UX23471F8XvT7V25MdLwmj++O34PrtsFcW/3h6YLyZ+f3Tgfn+gG+Ur
woH8cNpu7n8HzsPUZJ7/Djw/aRjFDxzYP8f4vVvngD0dhG9tCO8LDvj4sqxZ
IMg+gwPn743dzJ8duN89OMbzz4H2btnK+6QDBhUJZUc+9bfHgfPnygr6/wCf
IzDPDpH+Wgf2+/dRlB+/I9AfT3L9O3CfKtjO+68T56s3ln4f4cT8N3el/tQ6
MT/LmkiOdiJef7aX+akT7Y06QvfrnLgvdjxP9ao44fhNKZ17KH8GJ/Iz1yJ+
X3IiX3gxgfHfiXzM7WU+6cR5sCmD8d+J76ue6fy+4cR6mO/i/nfCJ52Fe7mG
910n9sMmrqd6J/ZXhw95/lWh/UmF5E9EFc6z165Ph/8BEwmIOA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1:eJw9WHl4jFcXv00raKlYWlSZoSW1VVTsdA4hxBKTSCRkmTf7nsxMZlVkqrWU
qmjlwdOQof08xNJQutCasbRCWw3tZ2nKvGiopaRVamvu5zvvOfLPPCf3vfds
v/M7597u6SWxWUFCiPVPCPH/X+2v0fBhjPCsrEkC+gesDRdK+LQ0klvAz8dl
YPPwVJJDoONhqbvQRiG5A0xeJKDvChPJncA+TfjbDODzXoQXl8nAiiiW9XC3
UfqenZJOcg/4SBH+3f2TSX4Z9tfJsoT+vN4LBp2SvgU9+fxXoOlFoQ8L5vU+
uG5/k+3tB9t/lLr/BKWQ/CqMaSeUXA+vh0FUd+Ednp9B8kAoLRRq4C7b9xq0
/q+U5hT+fhCcHCo8D7ZlkRwOz44U3vePZJM8GBZelWV1c/j7IeB8TXhLFrA8
FAIHpTx6nO0dBn80yaq50bw+HOa/LPxiN8dzBAxbKNS7b80ieSQ885fUtf2I
vx8FF1sJz9a8TJJHw83zsqx/MK+/Dt+NF8rVPN5vgPfHChgUyucD7AkVak49
5dMDMOF14XervH8M5nd+H5I9Y2DOXWnSJXN+xmJ8Qm7SeZ6x4BkjVGUgxzsC
bvV5pNVD+fJE4K83nvWPg6SvpGmPg+z3jIOut2RZRCdeHw9tuwnPhbW8fzzM
fk54DBfZvki4MkyoRZnknycSJu6VMrQLx3cC4iu1Bds/AT7wybIYI9s/EXZ2
Et5vF7P9EyG1mVAnOzmeUfDxWSlfasn7o6BFGwHn57F/k+BmpgA5mPVPwnyM
+obPnwy3Wwv1WBXZ45mM+leM5HxMgc/PSdPGVax/CtQMFv7gaez/VGj/hFA2
LCF8eqZC4hlZ1mcc+xcNP7wiYE8a2xeN+WrH/ohp0HBTmt69yuvTIN4tlMoK
rh8j1D0j9JOukT1ghHd+kCb9MbLfY4SqjgI6FNB5fiN8uV8agk18fgwsrZGG
xs1ULxCD+GhjZH0x8Nxv0jC/N+HLHwO9goTf1sD5i4X1c4W64Azvj4Xw0UJZ
NZH3x8L1N4XyYyTZ54+FZR9IHcxj/pkOl+KF2JdIMkzX6v1fjud0rO93jtF5
/ulYb1Nn8/44ja8mk78QBxv9MjAogvXHwRfjhDjdivfH4XlrjvD+eEipkoYl
XQkPEI/nF+3h/fFYX5czKH/+eFi9QBra7uf9M5AvjDPoe5gBIzzSVJHB8Z8B
kael7u5Aypd/BtaXGsv4TIDFRqEfO5j9T4DLJ6QhOZn9T0B+9DP/+BNg9BEZ
eD6K9SfCyEtS3mlKp/2JiO8/c9j+RNwv1tO6PxHi2gt/dRnJYiac2iV99/qx
/zPBdkXq5u3iep2J+LFVU379M+HwQxn4fRvnfxZsuC91mXFkL8yCoIsyoGtN
53tmgWGA8Jyex/bPgsyBAvoncP0lIR+0CSN9kAR/HZKms/XsfxLkzhb+9/7h
+CWh/k7nGL/J8EqDrApfzfFPRvw1r2b/k9F/uM76k7X4LeP4pcC6HbLqQjnj
JwW8K2XZztPkrycF+bhoOMcvBfmhcjv3m1Tkn+dDWX8q7Ngp5a4eHL9U5KMu
maw/FcYul1Uz3KzfBFOeEp57kbzfhPYaHzCfm5APc37i+JuwfjfO4vgrsGSQ
EBuGkX16BX6KE95razieCvYvXQPFW1EQbxuusH2Kpi+RZK+C+SnqyvYqyN8n
KkhWFdDNFPr4kWx/GjxtF+pfzWm/Pg1aJQr/hTcYz2nYr9rXkX1KGvb38Y/x
nQZvNxde/ZP0vTcNhq6VZc26cb7TED/D2tL+R30t4ztZda0ZySIdSl4SynuX
2f90yPtHyndb5JD+dKg8Jn0Xwsl+JR1GTRHeYTr2Px3r5c1nyB5vOqxqIcRL
k9j/dOz3I3LZf219eibjLwMODhH6I90JD/oMOHFDyijmV8iANddkwBrP/mfA
vkVSVkxjfGVo81ko8YE3A9TewvvVNebrDFjxq6wac4HwqWZg/zm+l/Vnoj0H
O7D/magvKI3jn6n1u0PsfyYsvyd9ljGsPxPnM+dYst+bCQW/yMDDTwkv/kw4
v1EGrtopXqp23o5Cxl8WbOolPM22k6zPgvFJQu3sZT7J0uozmfVnYX8cspL5
MQsefibLzu0he7xZ6N+OreSPPwuSezyq8iryV82CIXoBQ6t5fstGfvq4ktb1
2dDsW+nznWT92Ro+glh/NtZLbDKd78lG/OufZ/+zwfqWLCtsmkn6s+FoQPru
bqL8qNmIv5E/sv85EF8u5WKF8Z8DOR2E/t9aruccxGO/fmSfkgNn7ktZ3SeR
9OdAjy+l4eD7XH850Lm/8H9qZ/9zcP5o6k32qTmw9bo0POfj/OdiPA7X0Pf6
XNRXeJrsh1yt/x2idSUX+bbkdfY/F+evbdspXt5crLdannf8uSDXSNOxtYQn
NRfjkRvM+vOwv33Ri+OfBwOcwvv5TMZfHtZ/xgayX8lD/jp5h+s/D15tK8Ql
5jNvHtp/fRDXfx76XxxK9ql5UN1SKBWP5998tOf3Law/H06/IJSCaq6/fOjq
ENDwK/NfvsZ/PP958jU8MF9688GzT+pM67j+88H1iQycDWb9+VivK12c/wKc
H3ULyV99AfavbVy/UIDxbZ1C60oB9KmVZW8fp/x4CsB4VBrcPA96CxCv+97h
+BdgfX/go/lJLYCwv2UgPpPnv0LY7ZI+Wwat6wux/+X8y/grxP6VUkvfK4V4
P9i8n/tjIdbv4HDWX4jzztBNzD+FWF/hfF9QC5Gftnbg+bgI+1tSKOO/COeX
r85z/ynC+SRyKse/CIL7PeoCfVl/EdxZInXLrjL/F+G8vHMdz1tFUD9blp05
wfEv0vj5T85/Mc5T5l/Ifn0x6lvIfAfF8PXTwr8oh9aVYoi+LE2dD7D+Yrxf
RNcy/xfjb9iX7H8x3tcGWpj/iqHd20L/92Ke/0tgn1koUQ72v0Sbh26z/hKN
L2I4/iWI354Gxn8J5mftu6y/BPN36g3WXwLfH5BVtcyvagm0/VD6lEjCjzDj
fXZLAq2HmJG/Kw9TvPRmrHdfX4pnmBkswQJuDGR+MCPeff1ov9Gs3cevMF+a
tX5ST/abzdiP9rfm+JmxfuZfJHvLzTgPLZxK+PCacX5p3ob4vcaMeNrFePCb
ka919bReZ4a036XvO57/Ve389FSSG82PEPVoqkrg/Ftg+JNCf6on4SfEgv1p
/3nmA4t2n5xD54dZEN+LFIoHWLAe1vA8YrRo/D+F69UC93+SVU27yV+zBbbH
CvVSI88PFsRb9gvsvwX0J6Upomc6+W/Bem6KJn01FvD9IauaR3F+NftXldB5
dRbsd5WMf9WC+HlQSP2n0QJnVan7kPEirHB9tZT1FYTHECu+f5T9zHi0In/e
WEX7w6x4v1v+HuPTivXgXkH+GrX9hi2MVyvyaws/6TNb8b6j78n4teI8PmwT
nVduxflwcCz3Eyvy+cNupL/GCp+lCX3tNs6/FR4MFxDC/bfOivx2ewvFT7Xi
fOhfTPlrtCKfpnRm/0vx/puvIzlEk5dM5HmsFL7pLMSV9WRfWCnO/5+d5ftq
Kb5/eFeTPmMp4iv6F85/KeJnwg32vxT93ZTG/pdiPXXLpf3lpRr/NZLsLUW+
3zWK5JpSnA/v9eP7dClU9BT69utova4U7x9WxpdaCt+WCe/RBVRPjaX4XjBr
N9+fbPg+d/NVxr8N+WfcXPpeb4O5qUIcP0f1HmbDefb+Ne7PNpzv0/m9ymjD
95JbfL9TbFh/B+aw/za8X0cofD+xIR92WE72ltu0+TSU/bchPveeJ3trbHCt
i/B3/Z7W/TZ8f0vfRO9vdTaMV9wkrn8bzgfBYWRPow26jxKiIYXzb0c+zQrQ
+SF2xPuzL9D5ejvGuzPjI8yO+Brch/uTHYq/lr5ft7H/dvz1mBn/dg3vuwhP
Zrv2PrCZ82/H+5XPwvVvx3n35xKeJ+2I19E3uP7t+P7am+dzv127/7ai/XV2
7T21kOxX7dr94mn23471uPrx/cMBoWVSXrhD+Q5xIP5HrGX+cyAfTWf7whz4
2zie69+BfOA7xP47kO/HZvO86sD+KuzsvwPtlRvZfwfOi18sJXvLtfMMMdzP
HBifqqU0r9c4kG+jjvJ85cD3s0jOT50D+aIymv13QPd7UkYcTiD/HRifY3w/
EE7sjy34PhfiRPsvtOL6d2rzN78PhTkhPVooc6cx/p2I/6Cp7L8T5tVLw/JG
9t+J96PPL9L3Zie+h37SwO+dTszH4qOkr9wJK4OEZ2cTzfdeJ/L5nA10Xo0T
+cx8mfnfCf23SNPKLnR+nRP5aUhL4ifVifNk16Gcf/KvJeffhfONU+X8u6BL
iPAeDPB9zIV8u+kjik+YS+v//J4CLuy3fRdR/RhdOH9ZO/K87qL8cf93Ybw2
PH5PdWnz4wGyt9yF/ap+H+ffBU0Ppc/UQPGocWF/MU3g90CXxq/tyP46F9Zb
zUnKr+rCeehwBcmNLpwfnmrH72dumLROBjo+yf3Pje8pa24x/t04j2xkvg9z
Y79dpNB+cON77B5+7zS68f3jj7mkT3GDab7U3ed5z+zW/OX+5HFDxG1pqN1L
crkb378GJJHsdSPfra0k/2rc+F5+dQSt+90Yr6V8P65z43vmlhC+b7nxvvFb
Mvd/N/J39ce0X8zG9+IeD7n/zcb+lPhAgf8BdDSMmw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1: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
uMWg/wMg9WPS
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 417.}, {0, 184.267211914}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 417.}, {0, 184.267211914}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FB Genuine\"", "\"RC Genuine\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950509855113*^9, 
   3.694950514467827*^9}, 3.694950573660739*^9, 
   3.702393700043235*^9},ExpressionUUID->"437c21ec-b834-4d81-8f55-\
a72b1290f421"]
}, Open  ]],

Cell[TextData[{
 "List Plot of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950421456979*^9}, {3.694950646002103*^9, 3.6949506483204803`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", "Blue", ",", "Magenta", ",", "Red"}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\"", ",", 
      "\"\<FB Imposter\>\"", " ", ",", "\"\<RC Imposter\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950650410201*^9, 3.6949507120590973`*^9}, {
  3.694951153748155*^9, 
  3.694951173842523*^9}},ExpressionUUID->"c863b3b4-7679-4491-8e58-\
4c2fb359d49f"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        PointBox[CompressedData["
1:eJw9WXl8U1UWvi1baQHDVraBBgZRBKFCCy5ATmvZypautEXI6073LE3S1ME8
ZkAURSoIgvOzCTKyiVLcBSVP0XEDbRGVmUESB2UrlNKWrS3cqSfnDP/wu9y8
e/bvfOcwOqciOT9UCLEjRIg//g7+aTY0nZGGTw48AvQP8P5d6Rt32UjnMKge
LNSrD02lsw5az0t5Z3Y8nQfBM1ekT3doHp2Hwj0jBMRPmkHnP4H9sjQdyV5A
Zz0c+k36C0byeQw09BNK8U3+fiyUgVDfaltG53Gwp6fQz85OpPP9UHpHukc+
n0TnByCylwhMaeD7iaDpBGzLYP0mQWOHNC06NpfO0fDcQOFdHcHnh2DJJekZ
9sJsOk+BG1eku/afj9N5KqwaIURd1iI6x8C4UKHlbWV9Y+FwL6HuXsv+mgZj
pXTH7GL9psOO4UJNvc7yHoZ+t6TH8iG//wja88uHyXR+FF4OE2LnWH7vMbD3
EdqRTn5vBqzrK/S/Ni2m80x49Zo0HR00h86z0P+fGR+jswHlHZycTmeAwjbp
W/gr6aMCfNos/btnsf1xwfPAOLqPg50jhZb6fizdx0Ntm/QcPUD6qfGwJFyI
b3awPo/DC8OEPrQ5ge4fB/0woQx6kf2VAD2/ljLqP6SfmoD2ffdGCt3PhoOD
hbLrOtD9bLhzW7pNr7D/5sCzOqFkPzCd7ufg+20jH6b7udBxQxo8Mykf1Lnw
803pa6+Np/t50BYuvN+9xvbPgy+GCTHsTbZ/PgzvK5SBDspPdT68LoQ3wc3x
T4RyIbTjw/j7RLCek/5XT/D3C2B8mIDBH7B/FuB7Nt18ul8Ipt+le8HL5C91
IYzplIa8yZwPizA+p8/y94vgel8RaOpF/hSLg/lnI3nqYuh1WXrqppO/xBI4
2SD98zup/tQlkH5DeqqfpngKI+RECOU02wtGMHcT4oUQio9qhLoW6XvvIYqH
ZoTd3UQg72nOzyTwDBHw7i2SB0mYv2VzCD/UJNh/WRrS9i+h75NghE54pxq4
PpOh/10ZtWkDyw+ec0ayvcngvCo9T7WSf7VkONEk5Ud7+fsUmHlRGr6cwPJT
IG6AULadJ3lqChTdlPI0UL1oKRjvxX/h/EuFH9ukO2s6y0+F/16U/jcc5H81
FdbXS4+2xUDfp0J8i5T3/cLxTYMHLkj/oON0D2mw8bb0vTiZ5afBwetSpv2J
/ZcGx3+XhmGf0O9FOuzvI7w9+pF+kA5Dw4V+cwrXSzr8q13K4bvJ31o64u2q
LVxfSyG6TfpjS+j3sBTrpaCM82kpPDREqOOeJDzQlsJnrTLq/nsZHzIQX84+
Su9DBubr2oWkj5qB+m7/lN7XMiAxRMDFds6/TLhyV3pmTiH7IBOuhojAokR6
T83Eerr9eTx9nwkfnJGmXWbGoyzES+dhjl8WuO9Kv8nI8rPQ/nYHxVvLQny3
NrD/l0HsHemZFkb1CMuC9TOD8E1dhvh0dhf9XluG8Xqpgf33BLzbId3TNlK8
4Amo6ZTy08lkj/oE5kuTJ42+fwIuDhXqqo1kj1iO8sa+Q/kEy2HqcKHt2kz6
qMuhc5gIfH+a9V8OH3UX4Axl/FgBtt5CLV9C+Q0rYO856YuJZLxaAXvGCfW9
2Cz6fgXix+YE1t+E8td8wfljQnkHIlm+CebdlTJsNuGNZgJXi/TXZnP+K8H+
eIriqVdgeajwLtvF/lAw3uP/QfmiKJhfT69lvFNgTS/h1b9G/vAq8Fq7jHqp
getNgZPXpKH6LdInoMC2C9Lz3zOMT9kYn9aB5F99NszoLbw/P0v4BNmQ0yjl
txMIf5VsONZDeHu3sn3Z8HS4CHgNZI83GyZECPX1mEdJfjaEHZMGJXUmyc+G
ka3SPfBfS0l+DizqJbS9WxeS/BzY3ij9Jz5QSH4O4uvn+yiflRwInJOeN75h
fMiBM92EdngUnb054O/ZlVUR9J6WA457hJg8kfQP5GC+D/kb97dcyLgt/a8c
p/f1uch/EmPI35AL3XoKteY/pK+Si3h2+WHG+1zsP69eo3z35kJMe1d9paWS
/FzkO2XrKF6BXOzP6y9RfEUeyj/0Bemvz8N+Ojqd9IU85EMuD/lXyUP9P6iO
J/l5wXqNm0Xy85AvRm7lesuDzE4Zdbg/xTOQh/puaOf8z4fwAUINeYPk6fPx
98vWcT3lw+DuwtsymvJJyYcVPUTgsI7xMR/51MmLFF9vPvQZLLS4F8geLR9a
egll0ttUL4F8eOeWNMw5z/4vQHmNdjrrCxDPrmTR91CA9dB4i/qRUgC6Dunv
fz/jQwFs6SG0KVtJP28Bxi+8g+zRCtC+HXqyJ1CA9XfkAPlPFGL+dFzLIPmF
sLC7UMc76B4K0d9L36WzUgi/X5Wm/XFsfyF0GycC9Vepv3sL4di9XazxK87/
QlgmpemxKZRfgULoP0qon8WTv8TKoH+bKF/0K6HnRWkyT6T8hZVwrkV69j9P
+ild5wFCrDrLfGgl5k9WBunjXQnD90mZ3ZpJ8lciPm/l/h0geZeZ/xTB6a5X
Dr/I+FOEfChiN/fjIni0p1BePk76KUWQdVr6isOmkfyiID87Rr/3FoFjslDc
H5E/tOB961GSFyiCu53SF/U2859i+IN+Zpq5/ooh7Qcpx8eSf6AY1k8VomU8
yVOK8XvTN9xfiyHihPQpF2JIfjF4b0p/7gGu/2LU3zmO678Y8ab3ScbfEuQL
Bxu5/krgSN+uqcDJ/bAEEoaKQMYG8o9Sgv36He73aglEtMioa0ns/xKYclNG
RR6n+tJKEO/+XE79JFACqQOFFv4A949SxP9TM8g/+lLkbxt+Y/+XBvlMX8IX
pRRG35YyZTXzs1L4slP6Hw4l/3lLEf/X9GT8L4WXQoV6Ii2e5JfC5GvSc30W
z3tl0HZJGo6c4Povg8qJQu/OYj5Vhvzv7k6yRynDfvLvBsbfMsi+IH2Np8nf
3jL4NlQoe6uY75QF+d4AyodAGeKpeI/5VznyOxhE8dWXI772MXD/KYfq6zLK
kEz+Ucrh1PCuKGRy/MuRD677ivtPOaxaIYSlG+d/OfKVTc9SfALlMCpS6GPM
zO8rYOcdaereg/TTV8B9PbpY5QDu5xWw2S/9cfGUX0oF+jP5//ywAvE8/CzZ
661AfpdxD/PFCqzf57PpPlCB/XV6HvdfMzzXKg0Nv5L/dWb4ob/w7jvJ8TCj
P0qT6ftoczDf/IyPZpwP74sl/Y1m5JsFHewvM9qzZTTli9mM8V6xmOc5MzzS
TehvbiV/15jhaKTQToXFkz1mWB0i9N6/0/d1ZsTLEfcwvpphyHnpfm0+4Uu9
GeeB3ZmUvwEz/DRE6BtDKF7NZuRDe6J4frBgPX7N9aSz4LzoX0/26i3or8I5
JD/agvV56iWqB7DAqzFCGfsYzTtGC4wcKAK28eQfxYJ8sIDjY7ZgPr41iO23
4PweF03yayyw9rw06PzkP68F+2n6JLbfgvNX22KuLwvms3kHxbveAtsjBEwd
Sf4LWLDfpW+k+mi2oD+e68X82Rrcl9SSvjorzj8TtlM+663Y/zO3kX+jrTBn
hNC77mV8smL9h0XQe0YrynPsp/pSrDiPGveTfWYrZE8Q2vPv8bxvRTz6Jpf0
q7Fiv7gRQu97rWDsK6D9F7bfinwzsIH5tBXzQ8/5Vm+Ft65K95bejLdW7Ocb
Gim/mq1wq1n6nlrK/MOG+fDMHsoPnQ3n31of9wMblLRLw4Pfkn3RNuzncYkk
D2zBfddX5D+jDfctY26QvxQb1tOlYtLXbIMevYXmncX81QafhHdNZRM5/23Q
57o0JU0lfbw2WDlEKDPnkT11tiAfmEv+0Wy4j9t4gfxbb0N+MaqV/B+wYb8y
fE32NNvAd0V6vtzL+FsJn9+QprARlE+6SuSLV2YyH6iED0OE+HkUyYuuDOLH
ao5/JXQ/J6PMtbRvMVbCpVsy6vgY7teVOL9l5ZA95krcJ9g/4fyvDPLfBNKv
phKeHCq0qy3MpysRHyvvI75VVwkTGmVU7CZ6T6vE+TetgfO/EvKapKHPx8z3
gvo7D1O8miuhubvQT+J5RtiR3yfEUnx1dtT30DaKl94Of+0ulMCD8WS/HTbc
kO6kJ3les8Mr/YSawvVmtGP+/Tif+5Ud87eY689sh9pBQgx6n/dpdtyH3s0l
+TV2+OmkjEr8ifm0HfMncQq9X2fHflNYyvVvR/656WfiZ/V2eKpDepZcoftA
8P7tLIp3sx39mVfM+O/AeB+fR3xR54AHm6QprS/po3dA76vSX7OP698RxGuN
5jVwwL/vSMOTg+ne6AjuG3IY/xwwt0P6nnmX+oPZgfWRc5L8rzpw/9TJ+5ga
B+JRchHnvwOibkjfzlrC2zoH4uWOabwPcqC98hDZU+/AeXpSJPkr4IC3f5Se
1/cR3jQ7cL6L532RcOJ8GSEpHjpnEO9O0fd6Z3C/yvNMtBMsPQUsHkV4BE7c
F1y7Sf41OnEecmfzvOjEfWvSHbLP7MR5JWYz928n7oe7LyJ/1jiD89Vq6ide
J87LoadIvzon4ntKHOe/E/nwpcPEV+udkNtPeD/O4/7nhMD4Lla2nuqz2Ynz
1503SZ6own3PFylkj64K91FrN1H+6auwX5+pJv2jq3AffuQ73jdV4T7WvY7i
aazCfjo+lvlqFeJN4fc0b5qr4G+/Sfn9Gra/CufpiGrKj5oqqI8Q+n0LqX68
VcjvnltM79dVYT0qkyg+WhUk64Qa7iP/1Fchn/+olvO/CvFtz3Kyr7kK+ezq
aVQvwoX5MOZj7v8urI/POwg/9S7c965xM/65UJ8IL/kfXLiP3B5J+xmjC1Jb
pam9N9e/C2Z+Lf3vu2hfbnYh/7Uf5fp3Id4dALKnxgVDL0nfX/czn3Xhvmjp
QcZ/F/bLRP7/D82F+ZO3jn5f78J90G8J9F7ABX9vklHdMsl/za7gfiif5/9q
7C/LF9D3umrEr9g/z4X/AXT4fJw=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
4ZtQ4T6tZ/8fn+8olHEH6bvOjPvTu7OZL5rh4CNZlz6K4m8wB/bJcO5fMzx5
SbqilpH91Waobye0nU9S/6pm9L93FZ33BPSP7kT6fWYIOi/rNN9lk/8B/WOT
Ge/NOG//c4zmbb0Z+ZxxOOO/BeN1fSfXvwXfA7Z2Zz5mQX7140cUn2gLWDsJ
35EM3ncD8s2jlG+dJcB3tvO8sMCBJlkTNoVkgwXrKz6I+IHbAlnBwr9qBfVD
tQU23ZKuk/OYz1mQb7zQQvo8FuT78YwHPgv6X5lD9V5rwX3vhIv73xLIv5Ps
q7fgfqgfzv1vRf47rIz0R1hxX1rRlueBFTZclzHbtxK+Rltxf3W8T/gJVujS
W8C+s5Q/nRX3BbhAsmLF+JYdYvyzQlgXAf0PUP+5rXD0snQ1NU0g/61of+Q3
dF61Iv5cjCZ7PVZ8TzmURPb4rDivPXcY/6z4ntF/AeXLb8X5eqKF+9+K+1FB
X54/Nsz3miDufxvk3ZQxPwXxPmjD82uGcv3bcJ8amEbvTWCDRVelqzqY7tPZ
cN4Vzuf82/D9KutLut9gw/m+5m3ej23Ivw9+TvVZbcP5W6WleKk2eP+crMl2
kT6PDfs31sT82gbHOgtlfQPVS60N9/X36plv2hD/l5+i+qkP+DcknvdPO8At
6Q1lPhxhx36L05I9Wjvy5yO1lO9oO86bdX05/3bsp8Rd1G86O+y5KvWDipgv
2uGzh1Iz6T3Gfzu+z8IU5m92iGwjlH0vkVxtR34U+ib9XrUjnxn7LuXTY4el
TdK7+UX23471F8XvT7V25MdLwmj++O34PrtsFcW/3h6YLyZ+f3Tgfn+gG+Ur
woH8cNpu7n8HzsPUZJ7/Djw/aRjFDxzYP8f4vVvngD0dhG9tCO8LDvj4sqxZ
IMg+gwPn743dzJ8duN89OMbzz4H2btnK+6QDBhUJZUc+9bfHgfPnygr6/wCf
IzDPDpH+Wgf2+/dRlB+/I9AfT3L9O3CfKtjO+68T56s3ln4f4cT8N3el/tQ6
MT/LmkiOdiJef7aX+akT7Y06QvfrnLgvdjxP9ao44fhNKZ17KH8GJ/Iz1yJ+
X3IiX3gxgfHfiXzM7WU+6cR5sCmD8d+J76ue6fy+4cR6mO/i/nfCJ52Fe7mG
910n9sMmrqd6J/ZXhw95/lWh/UmF5E9EFc6z165Ph/8BEwmIOA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1:eJw9WHl4jFcXv00raKlYWlSZoSW1VVTsdA4hxBKTSCRkmTf7nsxMZlVkqrWU
qmjlwdOQof08xNJQutCasbRCWw3tZ2nKvGiopaRVamvu5zvvOfLPPCf3vfds
v/M7597u6SWxWUFCiPVPCPH/X+2v0fBhjPCsrEkC+gesDRdK+LQ0klvAz8dl
YPPwVJJDoONhqbvQRiG5A0xeJKDvChPJncA+TfjbDODzXoQXl8nAiiiW9XC3
UfqenZJOcg/4SBH+3f2TSX4Z9tfJsoT+vN4LBp2SvgU9+fxXoOlFoQ8L5vU+
uG5/k+3tB9t/lLr/BKWQ/CqMaSeUXA+vh0FUd+Ednp9B8kAoLRRq4C7b9xq0
/q+U5hT+fhCcHCo8D7ZlkRwOz44U3vePZJM8GBZelWV1c/j7IeB8TXhLFrA8
FAIHpTx6nO0dBn80yaq50bw+HOa/LPxiN8dzBAxbKNS7b80ieSQ885fUtf2I
vx8FF1sJz9a8TJJHw83zsqx/MK+/Dt+NF8rVPN5vgPfHChgUyucD7AkVak49
5dMDMOF14XervH8M5nd+H5I9Y2DOXWnSJXN+xmJ8Qm7SeZ6x4BkjVGUgxzsC
bvV5pNVD+fJE4K83nvWPg6SvpGmPg+z3jIOut2RZRCdeHw9tuwnPhbW8fzzM
fk54DBfZvki4MkyoRZnknycSJu6VMrQLx3cC4iu1Bds/AT7wybIYI9s/EXZ2
Et5vF7P9EyG1mVAnOzmeUfDxWSlfasn7o6BFGwHn57F/k+BmpgA5mPVPwnyM
+obPnwy3Wwv1WBXZ45mM+leM5HxMgc/PSdPGVax/CtQMFv7gaez/VGj/hFA2
LCF8eqZC4hlZ1mcc+xcNP7wiYE8a2xeN+WrH/ohp0HBTmt69yuvTIN4tlMoK
rh8j1D0j9JOukT1ghHd+kCb9MbLfY4SqjgI6FNB5fiN8uV8agk18fgwsrZGG
xs1ULxCD+GhjZH0x8Nxv0jC/N+HLHwO9goTf1sD5i4X1c4W64Azvj4Xw0UJZ
NZH3x8L1N4XyYyTZ54+FZR9IHcxj/pkOl+KF2JdIMkzX6v1fjud0rO93jtF5
/ulYb1Nn8/44ja8mk78QBxv9MjAogvXHwRfjhDjdivfH4XlrjvD+eEipkoYl
XQkPEI/nF+3h/fFYX5czKH/+eFi9QBra7uf9M5AvjDPoe5gBIzzSVJHB8Z8B
kael7u5Aypd/BtaXGsv4TIDFRqEfO5j9T4DLJ6QhOZn9T0B+9DP/+BNg9BEZ
eD6K9SfCyEtS3mlKp/2JiO8/c9j+RNwv1tO6PxHi2gt/dRnJYiac2iV99/qx
/zPBdkXq5u3iep2J+LFVU379M+HwQxn4fRvnfxZsuC91mXFkL8yCoIsyoGtN
53tmgWGA8Jyex/bPgsyBAvoncP0lIR+0CSN9kAR/HZKms/XsfxLkzhb+9/7h
+CWh/k7nGL/J8EqDrApfzfFPRvw1r2b/k9F/uM76k7X4LeP4pcC6HbLqQjnj
JwW8K2XZztPkrycF+bhoOMcvBfmhcjv3m1Tkn+dDWX8q7Ngp5a4eHL9U5KMu
maw/FcYul1Uz3KzfBFOeEp57kbzfhPYaHzCfm5APc37i+JuwfjfO4vgrsGSQ
EBuGkX16BX6KE95razieCvYvXQPFW1EQbxuusH2Kpi+RZK+C+SnqyvYqyN8n
KkhWFdDNFPr4kWx/GjxtF+pfzWm/Pg1aJQr/hTcYz2nYr9rXkX1KGvb38Y/x
nQZvNxde/ZP0vTcNhq6VZc26cb7TED/D2tL+R30t4ztZda0ZySIdSl4SynuX
2f90yPtHyndb5JD+dKg8Jn0Xwsl+JR1GTRHeYTr2Px3r5c1nyB5vOqxqIcRL
k9j/dOz3I3LZf219eibjLwMODhH6I90JD/oMOHFDyijmV8iANddkwBrP/mfA
vkVSVkxjfGVo81ko8YE3A9TewvvVNebrDFjxq6wac4HwqWZg/zm+l/Vnoj0H
O7D/magvKI3jn6n1u0PsfyYsvyd9ljGsPxPnM+dYst+bCQW/yMDDTwkv/kw4
v1EGrtopXqp23o5Cxl8WbOolPM22k6zPgvFJQu3sZT7J0uozmfVnYX8cspL5
MQsefibLzu0he7xZ6N+OreSPPwuSezyq8iryV82CIXoBQ6t5fstGfvq4ktb1
2dDsW+nznWT92Ro+glh/NtZLbDKd78lG/OufZ/+zwfqWLCtsmkn6s+FoQPru
bqL8qNmIv5E/sv85EF8u5WKF8Z8DOR2E/t9aruccxGO/fmSfkgNn7ktZ3SeR
9OdAjy+l4eD7XH850Lm/8H9qZ/9zcP5o6k32qTmw9bo0POfj/OdiPA7X0Pf6
XNRXeJrsh1yt/x2idSUX+bbkdfY/F+evbdspXt5crLdannf8uSDXSNOxtYQn
NRfjkRvM+vOwv33Ri+OfBwOcwvv5TMZfHtZ/xgayX8lD/jp5h+s/D15tK8Ql
5jNvHtp/fRDXfx76XxxK9ql5UN1SKBWP5998tOf3Law/H06/IJSCaq6/fOjq
ENDwK/NfvsZ/PP958jU8MF9688GzT+pM67j+88H1iQycDWb9+VivK12c/wKc
H3ULyV99AfavbVy/UIDxbZ1C60oB9KmVZW8fp/x4CsB4VBrcPA96CxCv+97h
+BdgfX/go/lJLYCwv2UgPpPnv0LY7ZI+Wwat6wux/+X8y/grxP6VUkvfK4V4
P9i8n/tjIdbv4HDWX4jzztBNzD+FWF/hfF9QC5Gftnbg+bgI+1tSKOO/COeX
r85z/ynC+SRyKse/CIL7PeoCfVl/EdxZInXLrjL/F+G8vHMdz1tFUD9blp05
wfEv0vj5T85/Mc5T5l/Ifn0x6lvIfAfF8PXTwr8oh9aVYoi+LE2dD7D+Yrxf
RNcy/xfjb9iX7H8x3tcGWpj/iqHd20L/92Ke/0tgn1koUQ72v0Sbh26z/hKN
L2I4/iWI354Gxn8J5mftu6y/BPN36g3WXwLfH5BVtcyvagm0/VD6lEjCjzDj
fXZLAq2HmJG/Kw9TvPRmrHdfX4pnmBkswQJuDGR+MCPeff1ov9Gs3cevMF+a
tX5ST/abzdiP9rfm+JmxfuZfJHvLzTgPLZxK+PCacX5p3ob4vcaMeNrFePCb
ka919bReZ4a036XvO57/Ve389FSSG82PEPVoqkrg/Ftg+JNCf6on4SfEgv1p
/3nmA4t2n5xD54dZEN+LFIoHWLAe1vA8YrRo/D+F69UC93+SVU27yV+zBbbH
CvVSI88PFsRb9gvsvwX0J6Upomc6+W/Bem6KJn01FvD9IauaR3F+NftXldB5
dRbsd5WMf9WC+HlQSP2n0QJnVan7kPEirHB9tZT1FYTHECu+f5T9zHi0In/e
WEX7w6x4v1v+HuPTivXgXkH+GrX9hi2MVyvyaws/6TNb8b6j78n4teI8PmwT
nVduxflwcCz3Eyvy+cNupL/GCp+lCX3tNs6/FR4MFxDC/bfOivx2ewvFT7Xi
fOhfTPlrtCKfpnRm/0vx/puvIzlEk5dM5HmsFL7pLMSV9WRfWCnO/5+d5ftq
Kb5/eFeTPmMp4iv6F85/KeJnwg32vxT93ZTG/pdiPXXLpf3lpRr/NZLsLUW+
3zWK5JpSnA/v9eP7dClU9BT69utova4U7x9WxpdaCt+WCe/RBVRPjaX4XjBr
N9+fbPg+d/NVxr8N+WfcXPpeb4O5qUIcP0f1HmbDefb+Ne7PNpzv0/m9ymjD
95JbfL9TbFh/B+aw/za8X0cofD+xIR92WE72ltu0+TSU/bchPveeJ3trbHCt
i/B3/Z7W/TZ8f0vfRO9vdTaMV9wkrn8bzgfBYWRPow26jxKiIYXzb0c+zQrQ
+SF2xPuzL9D5ejvGuzPjI8yO+Brch/uTHYq/lr5ft7H/dvz1mBn/dg3vuwhP
Zrv2PrCZ82/H+5XPwvVvx3n35xKeJ+2I19E3uP7t+P7am+dzv127/7ai/XV2
7T21kOxX7dr94mn23471uPrx/cMBoWVSXrhD+Q5xIP5HrGX+cyAfTWf7whz4
2zie69+BfOA7xP47kO/HZvO86sD+KuzsvwPtlRvZfwfOi18sJXvLtfMMMdzP
HBifqqU0r9c4kG+jjvJ85cD3s0jOT50D+aIymv13QPd7UkYcTiD/HRifY3w/
EE7sjy34PhfiRPsvtOL6d2rzN78PhTkhPVooc6cx/p2I/6Cp7L8T5tVLw/JG
9t+J96PPL9L3Zie+h37SwO+dTszH4qOkr9wJK4OEZ2cTzfdeJ/L5nA10Xo0T
+cx8mfnfCf23SNPKLnR+nRP5aUhL4ifVifNk16Gcf/KvJeffhfONU+X8u6BL
iPAeDPB9zIV8u+kjik+YS+v//J4CLuy3fRdR/RhdOH9ZO/K87qL8cf93Ybw2
PH5PdWnz4wGyt9yF/ap+H+ffBU0Ppc/UQPGocWF/MU3g90CXxq/tyP46F9Zb
zUnKr+rCeehwBcmNLpwfnmrH72dumLROBjo+yf3Pje8pa24x/t04j2xkvg9z
Y79dpNB+cON77B5+7zS68f3jj7mkT3GDab7U3ed5z+zW/OX+5HFDxG1pqN1L
crkb378GJJHsdSPfra0k/2rc+F5+dQSt+90Yr6V8P65z43vmlhC+b7nxvvFb
Mvd/N/J39ce0X8zG9+IeD7n/zcb+lPhAgf8BdDSMmw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
uMWg/wMg9WPS
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 417.}, {0, 184.267211914}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 417.}, {0, 184.267211914}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FB Genuine\"", "\"RC Genuine\"", "\"FB Imposter\"", 
       "\"RC Imposter\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950674870565*^9, 
   3.694950681389696*^9}, 3.694950712814801*^9, 
   3.7023937001741753`*^9},ExpressionUUID->"15f95e06-a232-4fe7-873b-\
30cc355e5a3c"]
}, Open  ]],

Cell[TextData[{
 "List Plot of the distances between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images for genuines and for imposters. The x axis represents the Euclidean \
distance between the fa image and the specified other type of image. The y \
axis is the index of the distance in the input array and does not impact the \
distributions (essentially, this is a \[OpenCurlyDoubleQuote]histogram of \
dots\[CloseCurlyDoubleQuote]).\nAnother way to say this is  that if you look \
at a particular y value and draw a horizontal line, the Euclidean distance \
between that subject\[CloseCurlyQuote]s fa and all its other images will lie \
on that horizontal line, with their x coordinates determined by the value of \
that distance."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950421456979*^9}, {3.694950646002103*^9, 3.6949506483204803`*^9}, {
  3.694951398073063*^9, 3.694951398865193*^9}, {3.6949514755483*^9, 
  3.694951526117365*^9}, {3.694951640418604*^9, 3.6949517147321253`*^9}, {
  3.69495181446554*^9, 3.694951819615766*^9}, {3.694952010951602*^9, 
  3.694952065216228*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rotateData", "[", "d_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"rotateData", "/@", 
    RowBox[{"{", 
     RowBox[{
     "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", "Blue", ",", "Magenta", ",", "Red"}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\"", ",", 
      "\"\<FB Imposter\>\"", " ", ",", "\"\<RC Imposter\>\""}], "}"}]}], ",", 
   
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950650410201*^9, 3.6949507120590973`*^9}, {
  3.694951153748155*^9, 3.6949512949821978`*^9}, {3.69495132621673*^9, 
  3.6949513397118187`*^9}, {3.694951407315377*^9, 3.69495146325213*^9}, {
  3.69495152856632*^9, 3.694951625137594*^9}, {3.6949517402159*^9, 
  3.694951803184064*^9}},ExpressionUUID->"276a7f18-bad7-4120-aa51-\
e5f301d0325b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        PointBox[CompressedData["
1:eJw9WXd4VFUWvwktJIBDC20hA4soghAhAQswJzG00NJJgjAvnfQpmRYX57EL
oigSQRDcz8wgK02UYBeUeYquDTRBVHYXmXFRWiCEJLQkcDeeOWf5h+9+d+47
7Xd+p2R0bmVKQagQYkeIEH/833RGGj458AgI/NdseP+u9I27nERnAdWDhXr1
oal0DoPW81LemR1PZx08c0X6dIfm0XkQ3DNCQPykGXQeCrbL0ngkZwGd/wSH
fpP+wpF81kNDP6GU3OT3Y6AchPpW2zI6j4U9PYV+dk4incdB2R3pHvl8Mp3v
h8heIjClge8fAE0nYFsm6zcRGjukcdGxuXSeBM8NFN7VEXyOhiWXpGfYC7Pp
/BDcuCLdtf98nM5TYNUIIeqyF9F5KowLFVr+VtY3Bg73EuruteyvWBgrpTtm
F+s3DXYMF2radZY3Hfrdkh7zh/z9h9GeXz5MofMj8HKYEDvH8vceBVsfoR3p
5O89Buv6Cv2vTYvpPANevSaNRwfNofNM9P9nSY/ReRbKOzg5g84GKGqTvoW/
sj4AnzZL/+5ZZL9K54FxdB8HO0cKLe39WLqPg9o26Tl6gPWLhyXhQnyzg/RR
4+GFYUIf2pxA94+DfphQBr1I/lIfh55fSxn1H9YvAe377o1Uuk+Ag4OFsus6
0P1suHNbuo2vkL7qbHhWJ5ScB6bT/Rz8ftvIh+l+DnTckAbPTMbDXPj5pvS1
18bT/VxoCxfe715j++fBF8OEGPYm2z8PhvcVykA743M+vC6EN8FN8VfnQ4UQ
2vFh/D4RLOek/9UT/D4RxocJGPwB+2cBfs+qm0/3C8D4u3QveJnjtxDGdEpD
/mTCg7oQ43P6LL9fBNf7ikBTL/KnuiiIPyvjdTH0uiw9ddPJX+piONkg/fM7
Of+WQMYN6al+muKpLoHcCKGcZntFEpi6CfFCCMUHkqCuRfree4jjkQS7u4lA
/tOETy0JPEMEvHuL45OM+C2fQ/wBybD/sjSk719C75NhhE54pxooHloy9L8r
ozZtYPkpeM4dSfZCCjiuSs9TrRzvFDjRJOVHe/l9Csy8KA1fTmD5qRA3QCjb
zpM8SIXim1KeBsoXNRXjvfgvZJ+WCj+2SXf2dJafBv+9KP1v2Mn/kAbr66VH
22Kg92kQ3yLlfb/Q77U0eOCC9A86TvciHTbelr4XJ7P8dDh4Xcr0P7H/0uH4
79Iw7BP6vZYO+/sIb49+nM8ZMDRc6DenUnwhA/7VLuXw3eRvNQP5dtUWwouW
AdFt0h9byvm1FPOlsJzuYSk8NESo454kPlCXwmetMur+e+msLUV+Ofso800m
4nXtQtIHMlHf7Z8y3jIhMUTAxXY6a5lw5a70zJxC9oksuBoiAosS6XuQhfl0
+/N4ep8FH5yRxl0mynctC/nScZjjlw3uu9JvTGL52Wh/u53irWYjv1sa2P/Z
EHtHeqaFMR8vC+bPDOI3WIb8dHYX5+MyjNdLDey/ZfBuh3RP20jxEk9ATaeU
n04me+AJxEuTJ53ePwEXhwp11UayR3sC5Y19h/l/OUwdLrRdm0kfWA6dw0Tg
+9Os/3L4qLsARyjda8vB2luoFUuYP1bA3nPSFxNJv4cVsGecUN+Lzab3K5A/
Niew/itQ/povGD9GlHcgkuUbYd5dKcNmM98YwdUi/bU5jH9jsD6eYvwosDxU
eJftIn/oFYz3+H8QXkBBfD29lvRVFFjTS3j1r5E/VAVea5dRLzWQPl4FTl6T
huq32F4Ftl2Qnv+eoXgHFIxP60Dyr8iBGb2F9+dniZ/0OZDbKOW3E4h/IQeO
9RDe3q30PSUHng4XAa+B60kOTIgQ6usxj5L8HAg7Jg1K2kySnwMjW6V74L+W
kvwcWNRLaHu3LiT5ubC9UfpPfKCQ/Fzk18/3MZ5zIXBOet74hvhByYUz3YR2
eBTzdS74e3ahKIK+580F+z1CTJ5I+mu5iPchfyN8BXIh87b0v3Kc8y8P+5/E
GPK3Pg+69RRqzX9IX8hDPrv8MOFZycP68+o1wruaBzHtXfmVnkby87DfKV9H
8dLysD6vv0TxDeSh/ENfcP+Rj/V0dAbpq8/Hfsjl4XqQj/p/UB1P8vOD+Ro3
i+Tnwx/9YuRW0s+bD1mdMupwf4qnlo/6bmin+AXyIXyAUEPe4PpagL9fto7k
6QtgcHfhbRnNfFAAK3qIwGEd4VUpwH7q5EWKr1oAfQYLLe4FssdbAC29hDLp
bc6XAnjnljTMOc/+D8prtDF/FSKfXcmm9/pCzIfGW1yPCkHXIf3976ffK4Ww
pYfQpmzl+lKI8QvvIHu8hWjfDj3nWyHm35ED5L9AIeKn41omyS+Chd2FOt5O
9/oi9PfSd+kMRfD7VWncH8f2F0G3cSJQf5Xqu1oEx+7t6hK/YvwXwTIpjY9N
4XpdBP1HCfWzePJXoCjo3ybCi1gJPS9Ko2ki4Ve/Es61SM/+50k/6DoPEGLV
WbJPWYn4yc7k+rAShu+TMqc1i+SvRH7eyvVbWxmUd5n4KLASTne9Ovwi808x
9kMRuwk/+mJ4tKdQXj5O+kExZJ+WvpKwaSS/ONifHWN+Lwb7ZKG4PyJ/eIP3
rUdJnlYMdzulL+ptwmOgGP5oP7NMnH8lkP6DlONjyT/6Elg/VYiW8SQPSvC9
8RvCk1ICESekT7kQQ/JLwHtT+vMOcP6XoP6OcZz/Jcg3vU8SHgIl2C8cbOT8
K4UjfbumAAfxo74UEoaKQOYG7gdKsV6/w/VeKYWIFhl1LZn9XwpTbsqoyOOU
X95S5Ls/V3C/VAppA4UW/gDpHyhF/j81g/wjyrB/2/Ab+78s2M/05XpaBqNv
S5m6mvJBKYMvO6X/4VDuT8qQ/9f0ZP4vg5dChXoiPZ7kl8Hka9JzfRb5I1AG
bZek4cgJzv9yqJoo9O5s6o/05dj/3d3J9awc68m/G5h/yyHngvQ1niZ/q+Xw
bahQ9jqJP73lwX5vAOFBK0c+Fe/R9wPl2N/BIIqvqEB+7WPg+lMB1ddllCGF
/AMVcGp4l9ezOP4V2A+u+4rrTwWsWiGEuRvjvwL7lU3Pcr9UAaMihT7GRPoH
KmDnHWns3oP780q4r0dXFzmA/KevhM1+6Y+LJ3xBJfozhftDpRL5PPws93eV
2N9l3kPx8FZi/j6fw/1eJdbX6flcfyvhuVZpaPiV/W+CH/oL776TdNaZ0B9l
KVyPTEG8+Un/aBPOh/fFkv5gwn6zsIP8lWRCe7aMZryYMN4rFpN8kwke6Sb0
N7fyPGKCo5FCOxUWHzzXmGB1iNB7/07vvSbkyxH3kH51JhhyXrpfm8/8YsJ5
YHcW4bfeBD8NEfrGEMa7CfuhPVGUD80mzMev/98/m3Fe9K8ne3Vm9FfRHJKv
N2N+nnqJ8iHaDK/GCGXsYzzvmGHkQBGwjif/JJmxHyzk+ChmxONbg9h+M87v
cdGcv2ZYe14adH7yX40Z62nGJLbfjPNX22LCR50Z8Wzawfxuhu0RAqaOJP/V
m7HeZWyk/AiY0R/P9SL/NJuD+5Ja5h8Lzj8TthOedRas/1nbyL96C8wZIfSu
e0n/aAvmf1gEfQ8sKM++n/IryYLzaNJ+xqsFciYI7fn3qP83WZCPvsnj/LVg
vbgRQt+vsUBSXwHtv7D9Fuw3AxsofnUWxIee8aZZ4K2r0r2lN+Gj3oL1fEMj
870FbjVL31NLiU+aLYiHZ/bw/G3F+bfWR/7UWaG0XRoe/Jb50Ir1PC6R5EVb
g/uur3hetOK+ZcwN8leSFfPpUgnpq1ihR2+heWeRfJMVPgnvmsImMv6t0Oe6
NCZPJX1qrLByiFBmzuN+whrsB+aSf+qsuI/beIH5xYr9xahW8n+9FeuV4Wuy
J2AF3xXp+XIvfa/ZCp/fkMawETw/VGG/eGUm1VtdFXwYIsTPo7geVQX5YzXH
vwq6n5NRplrat0AVXLolo46PofdJVTi/ZecyX1bhPsH2CeO/Ktj/JnD9qIIn
hwrtagv5s6YK+bHqPuq3vFUwoVFGxW6i79VV4fyb3sD4r4L8Jmno8zHd1wf1
dxzmfqMKmrsL/SSeZ5qrsL9PiOX534b6HtpG8dLZ4K/dhRJ4MJ7st8GGG9Kd
/CTFN9oGr/QTairnG9gQfz/Op/gm2RC/JZx/ig1qBwkx6H2Kt8mG+9C7edy/
2OCnkzIq8Sfqp2tsiJ/EKfR9rw3rTVEZ578N+89NP1N/ptngqQ7pWXKF7uuD
929nc721oT/zS8j/zTaM9/F51C8KOzzYJI3pfUkfnR16X5X+mn2c//YgX2s0
r0Xb4d93pOHJwXQP9uC+IZf5zw5zO6TvmXepPih2zI/ck+R/kx33T528j1Ht
yEcpxYx/O0TdkL6dtcS3Xjvy5Y5pJK/OjvbKQ2SPZsd5elIk+aveDm//KD2v
7yO+CdhxvovnfVGzHefLCMn7TUeQ707Re50juF/leUbvAHNPAYtHER9FO3Bf
cO0mz6cOnIfcOYTHJAfuW5PvkH2KA+eVmM2UryYH7oe7L+L9giM4X62melLj
wHk59BTp53Ugv6fGMf4d2A9fOszzrQPy+gnvx/lc/xwQGN/Vha2n/Aw4cP66
8ybJa3bgvueLVN4vOnEftXYT4U/nxHp9pprnMSfuw498R/pHO3Ef617H+wEn
1tPxsXSf5ES+Kfqe5k3FCX/7Tcrv17D9TpynI6p5fnFCfYTQ71tI+VPjxP7u
ucXczzkxH5VJFJ86J6TohBru4/nSif38R7WMfyfy257lZF/Aif3s6mmUL81O
xMOYj7n+uzA/Pu8g/tS5cN+7xs3850J9Irzk/2gX7iO3R9J+BlyQ1iqN7b05
/10w82vpf99F+3LFhf2v7Sjnvwv57gCQPaoLhl6Svr/uJ76oceG+aOlB5n8X
1stE/vtHnQvxk7+Ofq+5cB/0WwJ9r94Ff2+SUd2yyH8BV3A/VEDxaHZhfVm+
gPcf1chfsX+m/NJVw/8Aa898nA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1: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
Kud4lCdBfzn3t3ceRPwr6LGAirw9G/ir4Pov2ij2UwXz15FfUP8V9Ghnpb4D
n4Ur2P4LA1D/Fex/bQr6RQVtuUUZqzD/xivYnu+3Qn8lHb1XGVVbUH+V1MOv
6PQ34L/KBP9h/jMqE3gAX4YrKbxHWxwbUP+VFHxDx44nQX8l1+vKIPJfyfOj
ZTH6dxX3r22oX2sVx7djHvi8ivoc0PVPHZb8GFVkP6htod/mwSrG656nEf8q
ru8XozI/mVWU+h8dyywWe+NVtCuoo94izH/V3P/KfgX+qrl/5R1AP6rm+8Fr
e2XdqOb6HTQQ+qt53hmyGfxTzfU1EPcFs5r56fWuIserub/lpAD/NTy/vH8C
/aeG55PxUxH/Gkrqe4P1H4H+GvplmbY8dw78X8Pz8o4NgpdIDR2bq+u/+gzx
r0nw87+R/xqep5xfi/2qlvUtBt9Za+mvtypzSZmsUy2ln9GObh9Afy3fL9IP
gP9r+T/1Xfhfy/e1/i7wXy11eUpZ/7NU4h2vpT1OZaT54X9dYh76GfrrEnwx
HfGvY/z2tgH/dZyf9c9Cfx3n78s/Qn8d/f0D3XgA/GrWUeeXdNQYL/iJ1/F9
dmsW+NfJ/L1uv8Qr2cn1Hn1E4ml1kitJ0cX+sj/VyXiP9gU/OhP38bMi252J
fnIM/dLJ/WhvR1l3Orl+Fp6C/U6ehxZPFXw0OHl+addJ+D3iZDztBB6anMzX
lmOybjqp4Hsd/QTzf3Pi/MJ85Nt5A0E3pqgskVucNOwmZf2yN+rPxf1p7wlZ
T3Yl7pPz5Hyri/G9xJB4pLq4Htb+Nm+7Evw/Rc6zu+jq57qxdRfw4qLtGSr+
XYvEw+livJXeC/9dZD2iHWN6F4r/Lq7n1nTg2UXRH3RjuzT5vsnF9q+uA75c
3O/WAf/NLsbPtWrpP3EXHY9ry0vAS4uLLqzR+tgq1L+b3z/qv5Dzkt3MnxdX
y36rm+93y58Xf1LdXA+hFeCnxH7bVtlvdzO/tjeBVzffd6y9RXa6eR4fuhn8
7eb5cFCG5LfBzXx+/X7RH3HTWwXKemAb8u+ma8MUJaP/mm7mt5+3Svya3Twf
mkslf3E382leN/jv5vtvpQX872F52UQ5L9lDf+um1NmXUY8env/fOi7npXr4
/SOyRvSRh/GV/jXy72H8TLgI/z3s7+YC+O/herq/XPaHPQn+axG5wcN8v3Ok
yBEPz4dX+sr5TR5a1VtZ79gg66aH7x9u4KvZQx/Vq8jBReBbD78XzNkl8Wvx
8PvcpUeBfy/zz9j58n2yl+bnK3X4W8wDXp5nr56X71O9PN8X4r2KvPxe8hPu
d3Yv198H8+C/l+/XYwzZ7/QyH3Zdjv7pTcynKfDfy/h87wTmSS+d767MHn+X
9SYvv78Vbpb3N9PL8Zo5CfXv5fkgKRX91ks9Ryp1Og/59zKflsRwf/Ux3m+/
V85P9nG8uwEfVh/ja1AfsTfVR7V/1dFvtsF/H/+HncC/L4H3nYInw5d4H3gN
+ffx/SrqQv37eN79ok6+b/AxXh+/iPr38fvrw5jPm3yJ+28HzLe+xHtqtdjf
7EvcL26F/z6uxzW4f7T4KKVe65O/4P7qZ/wPXw/+8zMfzYB9Vj//t4xD/fuZ
D6Ifwn8/8/3oUpHtfu6vygf//Wyv3gT//TwvvvOM2BtOnGebLusNfo5P4zMy
r0f8zLdpB0V/k5/fz8YjP6af+WJdOvz3U88rWo/ZnyX++zk+h3A/aPFzf2yP
+5wKsP0nO6D+A4n5G+9D1gAVpitj/jTgP8D4bzMV/gdowTFtW94C/wN8P3r7
lHxvBPg99I3TwmfOAOdj6UHcHwK0so0K72iV+b4hwHw+byP6eYD5zHkG/B+g
flu1Y2V3zNcB5qfBtwg/NQd4nuwxBPkX/25B/gM83wTiyH+QuieryL6YfJ8c
ZL7d/ArmsWCi/+M9JTXI/faRJZjPgjx/ue8Wf+xByR/6f5DjtRHvqc5gYn78
APe3IPerY3uQ/yC1XtdRx2mJRyTI/cUxQfpVUzDBr10wXwa53pqOSH6bgzwP
7V8lcjzI88PNXST+LUGatEHH7r4J/S/E7ylrfwL+QzyPbALfW0Pcb5cYsj81
xO+xu3977wzx+8cP80WfPUSOhdpyFfOeEUr4i/7kDNGYn7XtwHsih0P8/vVY
jsgNIea79evEv0iI38vPDZf1phDH6xncj80Qv2duTRY8NIf4vvGvXPT/EPP3
lldlf0uI34t7XUf/m8v9Kfsa/J9L/wPrA4yb
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
QPwVx+z3FPxfzPX0DeSzKiGzTAUr3Ij/Eubzz/ci/kqoR4IK7cmS+80Srmdl
6OeDJdw/9e0L/CWUNlAFX5gm90VK6MNLWrcbBvkl1O0vKtI7DvJLWf/OyWIf
o5TzoTEZfFpKY1fqumGDZG2Wsn+eNlGfS5k/djyB/Cvl/qH7CcR/KdfbJemw
fyn9tFwn7mwL/5dxv1C5WfxplDH/jv8G8svorZtV5OeHJL7MMr6vV3vEXxkt
vUmFEgbA/mX0fEQ3HgxAfhnzad5U4C9j/tpzGPNBOfd3xr+Av5z5tNEh+Kic
drRTZtYjiP9yquva0iU1w/7l9MR72mp2Bf5yjv+rb6BeldOpdbpu+4uCJ1rO
/nz0IOxfwfm0vQ3iv4Je8+vwq4NRTysYX9NPkF/B80qH05Bfwf3/1y9KvoUq
mO/tUyC/ggb8W1e/sx/2r6CcXkrtPw/+qeT+YPpjwF/J/fVU9B9Uyf2BrTXk
V8bqM+pXsJL56sbvEX+VPJ9cXCP+ilTSyVd1ODAa9a+S+bTTNtTvKuarpOOQ
X0WtClUo1Qf/V9Eru7W+7aR8b1Zx/o/sifyvYv5YHkL9reL86rcd+V9FNV6t
p3cRf0eruP4MQX4rO89fyaXi7wQ71Q9VkTajBL9hp0HzW1gG8Zdi5/kptAn8
EPv+p3jR12Ln/ufI6+BrO431K/XdvaKf3c7+t7WW+4N29n/AJvrV2Kl4kYrc
sl7Oh+y0b6tOPFcr9qu3x+aJOPjXTtvGqdCEM6JPg51uK1Jqq0X2o3aakK2i
p3IEX5Od58kDg2B/B/dfyXvkfIKD63Hxr4LXcHB9771D+CjFwfy6bRz6AwfX
d4dT7rc4qOeTunGVF/5ycH6EUB/tDp4H15WBPxy09wttHfawyK9x8Lxf/IzY
J+RgPiv+SvDUO2hqqTL25SK/HVz/RiBeGxxszw1Fkg9RB+dPFPHR5OD5o/9S
zK9O1s8+EPid3E9sGi14DSfrd26Z7Kc4+Zd2inxysr/Pd5V9i5P5+fO+yBcn
z68jtwO/k/nnuTTwl5Naf6UbV94q+zVOrk8PbRH5ISfb+xDea+qdPD+vPYn6
4mQ+6rMe+J1kXaITux+C/51cz8/fKPo1OZkPfhwm3ysX94P/PCTrBBfftxV8
Ybjo4iPKHJgt96W4YvW9DPXJReHvdd2yJcDv4veyC6g3pov7V20HfhfX4+TT
wO/i/D16QOTXuJiPLr8g65CL59WnUY/qXfw+MXmq7Edc1H9yS5dyp9inwRV7
r/gE+EX/LfC/i/kmHfOsctPAp3Ta2f3IfzfpJSry5VD0A+6Y/+rgfzfXyz1v
Iv/dbM+lt8r9Fje/ryUtQL/s5ve+nRnyvd1NfVuryFn060E3eaarSMdm+N9N
Cx5XobdKwGduattR0Ss9xF71bp43V++V97iI3LcL+N08bzguot65Y++RmG+a
3MwPZz/E+5GHVnRR0R8wjyd4uN9/FXxueOhOr6K7x4h+KR6eD85NAX4P19dm
vI9aPLH59nnxjxlbX0P9tXvo2cUquq0Z/ZOH3wN/Xy7xVOPh/mTPUTkf8nB+
TXod8e/hfmBdd8wXHs5f9bPo3+Chs05l3LIO/b6H3792ZwK/h+e5ldnIfy//
Bs8Av5c6fKy1cX0e9DK/v36f6JPi5fPVw4Hfy++Xo2fKvsXL+vbfDfzeGP8+
ivj3cn/1/nnMx7H7h60D/3k5vlzbxL8hL/Pb4xPgf28sv9A/RLxc/7cVyn0N
XvoiTkV6ZMwW/F6eP6pfEX2avHTpId144TD6Lx/3m39Hf5zgY37q/B3w+2K/
F8X+KT7mx+Od0J/7mF9O3SPnLT66L6itr5WB/31c73q/LPrZfdyfxV0Afh8d
m6DMAWtQ/3w8T2/GfSEfx8uEMfC/j+eNeNTTiI/t88ZliecGH/1vpKIGvB9E
ffxe9fYK1D8fv9eeuID3Lz/bp+pJ8L+f8+2RLpgH/TRktDLX/QP4/VS6QIW+
GA78fubDQ1+KfS1+fm//IAn85+ff4F1ib7s/Nh+2xfuEn55crRMNvH/W+Cn+
qramPi/vlSE/58+3ZyRe6/3cj8V1hv/93H8VZIj8Bj//v2BjnKyjfvINUiF9
ROzd5Gd+WFUM/IGWDlMFL40X/RIC3A/F3415MMD1r0u81NOUAPc/UbfcTwG2
V5Id/g8wX2643v8EYu8XW+R7e4Dff/ZjPgsG6M//vyyLk/trAswvbfwSD6EA
+zNhrZyvD3D92I/+PxJgfnt8GvwfYHt4jmPeDfD/BxaNlvubAlzfxndB/7uI
Xv2fru5yA/y/iP4PUW1j0g==
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0.}, 
     PlotRange -> {{0., 184.267211914}, {0., 417.}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 184.267211914}, {0., 417.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FB Genuine\"", "\"RC Genuine\"", "\"FB Imposter\"", 
       "\"RC Imposter\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950674870565*^9, 
   3.694950681389696*^9}, 3.694950712814801*^9, 3.694951245669045*^9, 
   3.694951300223398*^9, {3.69495133163838*^9, 3.694951340351562*^9}, {
   3.694951435796805*^9, 3.694951464169969*^9}, 3.694951577647393*^9, {
   3.694951615621798*^9, 3.694951625785763*^9}, {3.694951750212654*^9, 
   3.694951765418528*^9}, 3.6949518041712008`*^9, 
   3.702393700347411*^9},ExpressionUUID->"094c5262-d05f-4dd9-aa0e-\
dcb9a76cdef8"]
}, Open  ]]
},
WindowSize->{1118, 918},
WindowMargins->{{2, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 93, 1, 30, "Text", "ExpressionUUID" -> \
"5f00fccf-a2a0-449e-b728-c79aed497abb"],
Cell[654, 23, 1605, 49, 180, "Input", "ExpressionUUID" -> \
"4fe66057-fb47-4eef-beaf-93a5ec595a08"],
Cell[2262, 74, 334, 11, 46, "Text", "ExpressionUUID" -> \
"0266787f-861f-43ad-a8f4-7b3595f33ee2"],
Cell[CellGroupData[{
Cell[2621, 89, 513, 14, 32, "Input", "ExpressionUUID" -> \
"81ba8f13-908c-41ab-b4b1-87ca28d1b156"],
Cell[3137, 105, 42322, 864, 239, "Output", "ExpressionUUID" -> \
"0d4398db-7a9e-4281-b2d1-8af485ebe89e"]
}, Open  ]],
Cell[45474, 972, 383, 12, 46, "Text", "ExpressionUUID" -> \
"4fb881c2-b290-4519-8ee5-9c86d5c807ae"],
Cell[CellGroupData[{
Cell[45882, 988, 558, 14, 32, "Input", "ExpressionUUID" -> \
"c1f382ed-7c9f-4367-b392-ea229186163c"],
Cell[46443, 1004, 62007, 1262, 240, "Output", "ExpressionUUID" -> \
"baaf5f65-2654-4f4f-ac0c-06804d12d977"]
}, Open  ]],
Cell[108465, 2269, 530, 19, 46, "Text", "ExpressionUUID" -> \
"15870820-de7b-41b3-8c54-5ed022f77df8"],
Cell[CellGroupData[{
Cell[109020, 2292, 1119, 27, 75, "Input", "ExpressionUUID" -> \
"680cff4f-58c4-4cdd-8451-23985c2a7860"],
Cell[110142, 2321, 88285, 1835, 411, "Output", "ExpressionUUID" -> \
"4ce30a61-2ab3-4d10-99c8-4e03371c401c"]
}, Open  ]],
Cell[198442, 4159, 575, 20, 46, "Text", "ExpressionUUID" -> \
"7ccaa4e0-ae50-4040-9f98-25b2d232165a"],
Cell[CellGroupData[{
Cell[199042, 4183, 705, 18, 54, "Input", "ExpressionUUID" -> \
"bc281718-2af3-4206-a751-8314708fd125"],
Cell[199750, 4203, 86304, 1791, 240, "Output", "ExpressionUUID" -> \
"e1f35ed2-594c-42f9-a6e4-f07f315309fe"]
}, Open  ]],
Cell[286069, 5997, 565, 19, 46, "Text", "ExpressionUUID" -> \
"0f11811f-6f33-4856-b7fc-cb270cf120cf"],
Cell[CellGroupData[{
Cell[286659, 6020, 751, 19, 32, "Input", "ExpressionUUID" -> \
"ed54ee26-aec6-4000-a13a-87aa192254af"],
Cell[287413, 6041, 35934, 666, 244, "Output", "ExpressionUUID" -> \
"437c21ec-b834-4d81-8f55-a72b1290f421"]
}, Open  ]],
Cell[323362, 6710, 578, 19, 46, "Text", "ExpressionUUID" -> \
"de07352e-220b-4b55-9169-a25fc0855aef"],
Cell[CellGroupData[{
Cell[323965, 6733, 855, 22, 54, "Input", "ExpressionUUID" -> \
"c863b3b4-7679-4491-8e58-4c2fb359d49f"],
Cell[324823, 6757, 38348, 723, 244, "Output", "ExpressionUUID" -> \
"15f95e06-a232-4fe7-873b-30cc355e5a3c"]
}, Open  ]],
Cell[363186, 7483, 1447, 33, 122, "Text", "ExpressionUUID" -> \
"a0101474-c3eb-4682-ad7f-531cbe91bc8a"],
Cell[CellGroupData[{
Cell[364658, 7520, 1573, 41, 75, "Input", "ExpressionUUID" -> \
"276a7f18-bad7-4120-aa51-e5f301d0325b"],
Cell[366234, 7563, 38652, 728, 244, "Output", "ExpressionUUID" -> \
"094c5262-d05f-4dd9-aa0e-dcb9a76cdef8"]
}, Open  ]]
}
]
*)

