(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     63370,       1376]
NotebookOptionsPosition[     61075,       1299]
NotebookOutlinePosition[     61439,       1315]
CellTagsIndexPosition[     61396,       1312]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Legend for coloring", "Section"]], "Section",
 CellChangeTimes->{{3.695850564653019*^9, 3.695850575896942*^9}, {
  3.695850708085136*^9, 3.695850708893023*^9}}],

Cell["\<\
Flow of the discussion and labels for the action being performed.\
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["Technical comments (mostly on the Mathematica commands).", "Text",
 CellChangeTimes->{{3.695850626658449*^9, 3.69585063854694*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell["Comments and thoughts on what we are seeing.", "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Technical Setup", "Section",
 CellChangeTimes->{{3.695850690876594*^9, 3.695850693172535*^9}}],

Cell["\<\
Define some system-specific variables here - e.g. the base path for where the \
data files are stored. For some reason, Mathematica does not import the file \
successfully if it\[CloseCurlyQuote]s just located in the same folder and the \
path is omitted.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "pathBase", "=", 
   "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.695848948744624*^9, 3.695848975937291*^9}}],

Cell["\<\
Import the data. Caution! This takes a while as the file is ~300MB.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.696023580740559*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<allcodes_data.csv\>\"", ",", 
     RowBox[{"Path", "\[Rule]", "pathBase"}], ",", 
     RowBox[{"HeaderLines", "\[Rule]", "1"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696022181509746*^9, 3.6960221910331087`*^9}, {
  3.696022224183681*^9, 3.696022239842455*^9}, {3.6960222983803453`*^9, 
  3.696022299821989*^9}, {3.696023529909492*^9, 3.696023530827716*^9}}],

Cell["Define function functions for accessing the data.", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.696026644750987*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"meb", "[", "i_", "]"}], ":=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"i", ",", 
      RowBox[{"4", ";;", "259"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"subject", "[", "i_", "]"}], ":=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imgcode", "[", "i_", "]"}], ":=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isFA", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<fa\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isFB", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<fb\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isRC", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<rc\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isTrue", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "\"\<true\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.696023640625495*^9, 3.696023736057575*^9}, {
  3.696023909343163*^9, 3.6960239338620977`*^9}, {3.696024263008795*^9, 
  3.696024310663581*^9}}],

Cell["Generate the mean (average) of each neuron\[CloseCurlyQuote]s \
activation.", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.6960266755195513`*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanFAs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"data", ",", "isFA"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696024168401778*^9, 3.6960242040047398`*^9}, {
   3.696024330249833*^9, 3.696024383195018*^9}, 3.6960248931494837`*^9, {
   3.696024927736817*^9, 3.69602494550533*^9}, {3.696025047989562*^9, 
   3.696025071044609*^9}, {3.6960251517148647`*^9, 3.6960251537923098`*^9}, {
   3.696025216337042*^9, 3.6960252172314253`*^9}, 3.6960252703136806`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanFBs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"data", ",", "isFB"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696025224503577*^9, 3.6960252292717533`*^9}, 
   3.696025262627818*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanRCs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"data", ",", "isRC"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696025235272171*^9, 3.696025239888976*^9}, 
   3.6960252820110064`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"meanTrue", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"data", ",", "isTrue"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696025242022779*^9, 3.6960252829294024`*^9}}],

Cell["\<\
Function to create a list of (x,y) pairs where x is the index of the neuron \
and y is its activation value.\
\>", "Text",
 CellChangeTimes->{{3.695849021746048*^9, 3.695849036946546*^9}, {
  3.695850597291189*^9, 3.6958506035378027`*^9}, {3.695850769505541*^9, 
  3.6958507880387897`*^9}, {3.696023570255184*^9, 3.6960235981810303`*^9}, {
  3.696023635407834*^9, 3.696023661814063*^9}, {3.696026630952129*^9, 
  3.6960266755195513`*^9}, {3.696027122533452*^9, 3.696027142452455*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"indexate", "[", "l_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"l", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "[", "l", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696025416881585*^9, 3.696025440182787*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphs", "Section",
 CellChangeTimes->{{3.696027162438517*^9, 3.696027163260981*^9}}],

Cell[CellGroupData[{

Cell["Average over All the Subjects", "Subsection",
 CellChangeTimes->{{3.696028169713705*^9, 3.696028180912601*^9}}],

Cell[TextData[{
 "This graph shows the difference between the mean activations ",
 StyleBox["across all subjects",
  FontWeight->"Bold"],
 " and the mean of the ground truth (again, ",
 StyleBox["across all subjects",
  FontWeight->"Bold"],
 "). \n\nA better way to explain this is to imagine this process:\n1. For \
each given neuron: find the mean activation value across all subjects for a \
particular image type and for the ground truth.\n2. Find the difference \
between the mean value of the ground truth and the mean activation value (for \
the respective image type).\n3. For each neuron, graph a point indicating \
this difference."
}], "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}, {
  3.696027187831356*^9, 3.696027190365635*^9}, {3.696027255724792*^9, 
  3.696027292976328*^9}, {3.69602741606809*^9, 3.696027422492074*^9}, {
  3.696027459278305*^9, 3.696027488677918*^9}, {3.6960275296727*^9, 
  3.6960275407114773`*^9}, {3.6960275900108137`*^9, 3.6960276287535763`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"indexate", "/@", 
    RowBox[{"Abs", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"meanTrue", "-", "meanFAs"}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{"meanTrue", "-", "meanFBs"}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{"meanRCs", "-", "meanTrue"}], ")"}]}], "}"}]}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6960261951330976`*^9, 3.696026225996421*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Zf0Q3s+wj3fqnduzH/PDtrIPc9+hRSbWyy1l6Qz2Fw3uluae9SrPoxL27ZHq
UMl+a4Hz7plesaj+CDsfmKTXsh9Y4coJDw52Yn8zYGPBC3vOc31t8Mo1c3eJ
FOafh/XoUrEyjv1Rg61tN0ouqe85LANzpnuyHiyw6HaosAfPZzp8bvnWm4lz
mB/Wv3Rd9YYz89vHL3a448j+Z4O1DzamJaj1z8L1ew6F1Kv8sGge80PELzzP
wJ8V9m/sxvla7PFbgQdO8X46PHTRlOJBHG+FTTOL9Z+53w24csubq/y4H21w
0cO5666xH4r5uH6cS9D3/ZkfjthWnj2S70POt5+HdxmJvZgfjtm844wlivnh
gKRf7w1hPit8tLLTdyNYnwZsvDfd1KLeP7x984qjYVwvsUAK16u7Ri2bzPxw
9fumUjeeryRsK2w+H8v6tsCyuenjQWr94ZLjG/7yZL1YYVPOgz4V7AcGXPRi
8oye/H7YYOdPIxdMUvPPxn57O7PEmb8PNNh2TeQvfYr5YdPlHq+FsR9aYKeB
4X8UqfM27J0+LNCFvwessAgaFKld4v6DLQNdPl/LfmGDtSn7h5Wr/rsQ37PD
Q7dVsr9rsMeoeTUhPO9JWKRU+Yz/sv1+Fvh047KzXup8A9/yG9j5mwzmhy1T
L76b3oPzt9sv3lzK/WuDZdc1TS19mT8H9T7x5OYIvh8Nlp5+aQU8r0v4q6Ts
1rvcDxa4dal332D2Jx2+MvdmcG4S89vvF51f1cTzuQGLsyuX3b3H/gtXD7s7
O079PsmVwj3MWuo+M/h/x9PQug==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
0HpdAkD3KNvpXeL/v0Rgn74cMNw+wekf8mBmjA==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10VkohFEUB/CbppCyZ0sampB93/n+86I0KYSRSZZsGTUYO8MnD8hOYyfr
w5giD6Io3yAk8SKSF6WQB80LSpGRM6dOp989dW6d412iyiqzYIxJTPlX/8PI
FeklFxWY5OgBfHuuu+3lEtkK7ORuUvXTTLYHP8PLRkX1ZGewcrcni5tBshvY
Z4yHo1hB9kRNl3BYXL9AFoPXlxqewobIPoBD2d5RQg9ZAlYZ+f1Rmkn2BdPo
dtSWKrK/6f/ps9bsOnIAWLHrud9GCTkIgtyYXrjVTQ4B6xvR9WhmyGFg81cV
b+sN5HBk5FUVNj4vkiOQIeRberZNkSPxYjDI7ZyWyVGmecZgrxbzPqLB27i/
Dql7yTFg0Svnm6vV5Fjwu9vXcq15fhwQmHoaPjZLjgevfFQXaMz7T4AgUi7K
BhrJiWCKe13IQic5CQ/6ptil3nlyMphRUV5lLyOnmHyxVqvKIXNgLcrh0GPz
vQDhgOvUxfX9mwfE/d0TrWlz1JdiZG1d5HKrpb4ULKhD0FonceMD04kp71Ls
F/nlXH0tc7+0oJRG
      "]], 
     LineBox[{{36.151521185627274`, 0.03706977762675609}, {37., 
      0.01824428646348636}, {38., 0.025286232597676095`}, {39., 
      0.005411913693960324}, {40., 0.009195145297949736}, {41., 
      0.024990033019055724`}, {42., 0.015058878214248783`}, {43., 
      0.019049521511648293`}, {43.3354440094293, 0.03706977762675609}}], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQvYEh+OZPLzeHPQnqoed/LbJnAIEGNweG+kdpSmYd
ED6Du0OD2BYbf7tGqLy7w4LFm+837p0AlfdwOFD2etcZs06ovIcDA4/dqnX5
UVB5TweGu7OtcnZOgcp7OhzoejclvacaKu/lwMAy+cdH5maoPJB/b7LNXP9+
qLy3A0PnkhclV6ZB5b0dDqyt2ruyaRZU3schYabaN9EHM6HyPg4HdndOrno7
Gyrv6/DAaNuFVYVQ/zT4OiTs4pdQ+Ah1D4OfQ0Nbt5l/+SSovJ+DR7txdHTx
Qqi8v4PDe+l9lwSb7WWnzqsJLfWHhxcAqgtjTw==
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQrfIj7Ghuh7/DngT10PO/FtkzgEGAA8Ork1MP3A2B
8B0CHBz+/PQrjYLKNwDlD4e+nSOfCuEfCHB4oKXzfUlgJ1R/oMODnQ69G4un
QPUHOjAc33HSVwqqviHQQcBoa0yz40KofqD6+zv+vvo4C6o/yGGDu92mgDdQ
+xyCHBhutCc6dVdA9QP5lnx9lsoFUP1BDg4sDFIFOh1Q/cEOCRUCtl+PtkD1
Bzsc+MhXZOUMVd8Q7MCge2bfqvuNUP3BDg3ySVarduRC9Yc4JAi2H+KWmQDV
H+LAwPJp5/FfdVD9IQ4N7f+0E7KyoPqB8h/Y0x7/kIPqD3Vg0FCPfvfWF6o/
1EFh9cZtgRfmQfUD5eel/xdcmA7VD+SHJHz1PBoB1R/m0BDl4HOxtQ2qP8zh
wLynq9+aQMOnIcxBoV41e04y1H0HwhwY8qOkA7KToPrDHRzOPF5/qmABVD+Q
n/j47JHnDVD94Q4MM66xfHTtg+oH8v8aM2+6kmef3R00ie9nODw9AABpJKPj

      "]], 
     LineBox[{{96.21163680078699, 0.03706977762675609}, {97., 
      0.021972289829226388`}, {98., 0.014941958611730533`}, {99., 
      0.006333412684810025}, {100., 0.004008229708027833}, {101., 
      0.0106492970730373}, {102., 0.011701401376420006`}, {103., 
      0.024434190029152314`}, {104., 0.008065315442550458}, {105., 
      0.02102324095203073}, {106., 0.0237582365373587}, {107., 
      0.009009107746575207}, {108., 0.03352997884728115}, {109., 
      0.023233566073860845`}, {110., 0.006347346414528499}, {
      110.73451340800727`, 0.03706977762675609}}], LineBox[CompressedData["
1:eJw9k2tIU2EYx1+Sgr7kEKSlH1qIaeA+SLBiWHuy2KIVq10Kdn3POZuwRloq
GCHjLM3ul9lM1wVHZR/CtKEhltpW0AUKA/vQxcEcfRCx2uiDpmm9dZ7TgcPh
z/P8nt/D+3I28HVm3wpCiIa9f79PUoVT5g8OGKFltvGF2zry73ECVPhe7Pdf
lTI4gexyVJ2yO6Qssiwezi8drZZywgnig1BOW1CPvAvEDtPLIz01yLuADCrn
Z8hm5F2QLjIsaJoiyLP6+8X2pcBZ5N1AutSrP5llvxvEHQHDPuM55N2QLSxd
mynoRp71H1yXW170IO+BRPmEKqWIIu+B7MdKq9fSjrwH4Per0GzheeQ9QDqS
gSFbEHkKsCes1FguSFlFQXzTWj608jjOo5DQPp+NtLVImbL61tB3Y2MTzqdA
u+b2xjeFpByjkK40BDOR6+hj/RVlVd8ip6WcpkA+BwfPXDuKfg7AtmXE1HsM
/RyQpir/vUn5PFhevGnVj+K+lINYb/3bhkOX0M8BLTEs5WlkP6vbxx92huXz
5uDd9j6TPu8W+tm8PqXi6eVa9PMgho3qlLoV/TzEfGqFrrET/TwkWrQ7n9Xi
PpQHVfGaqR8mrIs8wN2As/+A7Gf9dV+0GSX2J1h9+OtMfAbraca35O6Lbtyf
CHClOUy61Xh/KgHE9oGfY9V4XyBA1io8dvnw/imrL6c0+hsx9AsQWxVviybD
6BeA7LY7p3tPoF8A1cWeMYtePn/GD6xP/so/iX4vkBKB6lJ+9HtBtE5OCFEO
/V5QvG7YNjeP8ynrv1O08VFNs644PTE9HPT+/5/+AMwiApI=
      "]], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQ7TtLRsCyMcVhT4J66Plfi+wZQGBBigPDqjRtS95y
CP8AkL/huF9VXxGE/yDFoaFWRKbzWTuEz5DqoFD0zcKMsQHCV0h1YHC5fmFi
bxiE75Dq0LDgl/Py/ioIPwHIZxXgXDVlOoTfkOrwQLj/RIvWFKj9QP3HJmUn
v/OC2p/qcEBo2pLZPJOg9gPl6xzv/2Jqhtqf5sBgv7o5+Gkx1P40h4buU0+c
wqDud0hzuFE19dDsHwug9gPVH+q9nHC6B2p/mkPCwR/bCjig5i8Ayh9rb1xh
HAG1P82h4NW37eFTp0LtT3Nw6FpRZ6RYCbU/3eHAlebmD9v7oPanOwgsmfel
t2Im1P50B4e+UwGSy/qh9qc7BGyL4AxYMtte6N+qd39r0uHhDwB7bH6b
      "]], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQzTTz4SqmxnSHPQnqoed/LbJnAIEF6Q4M5aIinxpL
IPwD6Q4OmooH0r83QvgP0h0Etgas2v1vLoTPkOHAcFh6DZMuVL0CkP/kjqzj
jzQI3yHD4YAuxx/O2w0QfkKGw4c5l3/axsyC8BuA6s9KVMher4XaD+SfYD31
dM10qP0ZDgrcX/tZfjZB7QfyF3Q+VrvbDbU/06Fh8bnmy3ZQ+xSAfE5zTpdJ
E6H2Zzok/Hxw/klqC9T+TAeBDPk4iUdTofYD1Z/ZvoGpqRRqP5BfvUv1nO58
qP2ZDgzTAoJM33bYayyNf33pViY8vADGkGbd
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/e8RM6vUh0yHPQnqoed/LbJnAIMshxVrz55h7l0A
4StkOXx4vHcyN8N8CN8hy4HhoeL7B9lTIPwEIL9CwP785QAIvyHL4cCFA6Gq
JyZB+AuA8jtXfZs0Ow/CPwDke37U51/SDeE/AKqX6HdebdkLtT/bgUFA5e2H
eqh5CkD+ZsZgY51iqP3ZDg3VU3eL2DVA7c92OHD9MJ99SxPU/mwHh0szDncH
T4Dan+0gYHNzr/A3qPsPAM2LVTPLXtUCtT/bQSH24ae972ZD7c9xaNi+8/qK
nC6o/TkODOeT2ixVo6H25zgsMJjfyZPVD7UfKL/2+WNtkTKo/UB52xaHtz0T
ofYD5a2/C/opQs07kOOQ0GwiIyg6C2o/0L6CM+UnnlVB7c91SFj/w2JxBDQ8
FHIdPnTtvnji/0yo/bkODVNn3fz+oBVqP1A+jelQcwTUvw25Dgvis2tnp0Hl
FwDV69x6/lGtFmp/rkOAEZ+S3qMJ9pGXJZ5Mv5ALj38AtIamVQ==
      "]], 
     LineBox[{{239.35731582328864`, 0.03706977762675609}, {240., 
      0.002697539358817558}, {241., 0.015903549772108616`}, {242., 
      0.026729114149006417`}, {243., 0.011783955477813968`}, {244., 
      0.018757359226564907`}, {245., 0.026186807326686268`}, {246., 
      0.007478561290824581}, {247., 0.028614973985357228`}, {248., 
      0.011390692664001667`}, {249., 0.016059274268036106`}, {
      249.92686622588823`, 0.03706977762675609}}], 
     LineBox[{{250.1215305029919, 0.03706977762675609}, {251., 
      0.025086412927384782`}, {252., 0.004605430588110471}, {253., 
      0.036637475444972756`}, {254., 0.018690492534038816`}, {255., 
      0.012502069663848647`}, {256., 
      0.02237321141220272}}]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{751.609375, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 256.}, {0., 0.03706977762675609}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69602619617315*^9, 3.6960262269206448`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Comment",
  FontWeight->"Bold"],
 ": Arguably, we are losing a lot of information by averaging out over all \
subjects. However, some things are clear already. \n1) The difference between \
the FA\[CloseCurlyQuote]s activations and the ground truth is mostly bounded \
to <0.001 and definitely by <0.005. So the network is learning the FA\
\[CloseCurlyQuote]s really well.\n2) The FB\[CloseCurlyQuote]s are mostly \
within 0.015 and some spike up to a difference of 0.030. Again, we are losing \
a lot of information by averaging out across all subjects. Yet it is clear \
that the FB\[CloseCurlyQuote]s are further away from the truth than the FA\
\[CloseCurlyQuote]s.\n3) The same can be said for the RC\[CloseCurlyQuote]s \
-- they are even farther away."
}], "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}, {
  3.6960274336292057`*^9, 3.696027449468587*^9}, {3.696027637673895*^9, 
  3.696027724067973*^9}, {3.696027758503187*^9, 3.696027818096076*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell["\<\
Let\[CloseCurlyQuote]s say we wanted to find out which neuron changes the \
most from between the RC and the FB activations. This graph could show us \
just that. 

It plots the difference between the mean FB activation value and the mean RC \
activation value when the mean is taken across all variations of all \
subjects. \
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}, {
  3.696027187831356*^9, 3.696027190365635*^9}, {3.696027255724792*^9, 
  3.696027292976328*^9}, {3.69602741606809*^9, 3.696027422492074*^9}, {
  3.696027459278305*^9, 3.696027488677918*^9}, {3.6960275296727*^9, 
  3.6960275407114773`*^9}, {3.6960275900108137`*^9, 3.6960276287535763`*^9}, {
  3.696027839721347*^9, 3.6960278472873783`*^9}, {3.6960278915297947`*^9, 
  3.696027963498603*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"indexate", "/@", 
      RowBox[{"Abs", "/@", 
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{"meanFBs", "-", "meanRCs"}], ")"}], "}"}]}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HoldForm", "[", "neuron", "]"}], ",", 
      RowBox[{"HoldForm", "[", 
       RowBox[{"difference", " ", "in", " ", "means"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"HoldForm", "[", 
     RowBox[{
     "Difference", " ", "between", " ", "the", " ", "mean", " ", "activation",
       " ", "value", " ", "of", " ", "each", " ", "neuron", " ", "between", 
      " ", "FB", " ", "and", " ", "RC", " ", "images"}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"GrayLevel", "[", "0", "]"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696026447404957*^9, 3.6960264486677723`*^9}},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10W1IU1Ecx/Gz6EEbyIiCkFF39kDJjLvSfKjr/XnnhYSilYLzlbsua6U0
I0patQ5KoTPWiMnSNRmxopJyDAvai5KZ9KYwiiIwMNIXSb5wWq9CrfB/DxwO
n/OF/4tzLE3e482rGGPWf/v/ubLmZO4+NXlSS8h0gWQqpuVmIuQccJS2GIdb
yCaIcq8n8ypE3ggW9090PVXImxE3On9uK7pJNoNd6Hod+XGbLICZox2CfIVc
AHb2lteyvpa8HUzwpf29EnknWCryRPl1hLwLMM/nZRM95EKw/latftBPtoK5
RueOurrJe/BtqNGNmhhZBC/oXmv9fY1sQ6jkwZSyfI+8FyP5QqJu5iJ5HxyX
Nki2z3fJxYBzRG4PdpBLwM7Pe2oGT5P3gw1nGy7X1pNL8dC1NO7ui5PLgNVL
+WOBAXI5cH/i+R+X/l4VQN7HHeFnnHwALK0uPrI7yAcRCrx5GRD1eRJ4+pjh
7e42ciX4wrQ1NKqRZfDGaUtupf5fQNui7Wpza3jFHBBnip3vZvV5VXjv6WtX
ofcqMO3w5NbwCeoKcjLGzgppiLoCsfyT6euCPt8Ox6Eb36MN9F7cDvY4OjDl
vE69GjzZ4/vwwke9GqblL6Z15/qpq2Bj9s5NwSbqKgSUbTFk78izqUQwNq6i
UDKs8Z5Jyn8BbNO2lA==
      "]], LineBox[CompressedData["
1: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
      
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["neuron", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      RowBox[{"difference", " ", "in", " ", "means"}], HoldForm], 
     TraditionalForm]},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{839.609375, Automatic},
  LabelStyle->{
    GrayLevel[0]},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    TagBox[
     RowBox[{
      "Difference", " ", "between", " ", "the", " ", "mean", " ", 
       "activation", " ", "value", " ", "of", " ", "each", " ", "neuron", " ",
        "between", " ", "FB", " ", "and", " ", "RC", " ", "images"}], 
     HoldForm], TraditionalForm],
  PlotRange->{{0., 256.}, {0., 0.06412404892147508}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.696026410079994*^9, {3.69602644916927*^9, 3.696026456452487*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Comment",
  FontWeight->"Bold"],
 ": We are definitely losing information by averaging out everything, yet \
judging by this graph, the distances do not seem significant.\nIt would be \
interesting to:\n1) divide by the standard deviation to standardize these \
differences (or another appropriate statistical technique) \n2) look at a \
similar plot for one subject only\nin order to gain more information"
}], "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}, {
  3.6960274336292057`*^9, 3.696027449468587*^9}, {3.696027637673895*^9, 
  3.696027724067973*^9}, {3.696027758503187*^9, 3.696027818096076*^9}, {
  3.696027974413227*^9, 3.696027985923208*^9}, {3.69602806975917*^9, 
  3.696028081317717*^9}, {3.696028112943562*^9, 3.69602815276799*^9}, {
  3.696028416897765*^9, 3.696028425479515*^9}, {3.69602855695785*^9, 
  3.6960285610270042`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Focus on Subject 00070", "Subsection",
 CellChangeTimes->{{3.696028169713705*^9, 3.696028180912601*^9}, {
  3.696028444665629*^9, 3.69602844903197*^9}}],

Cell["\<\
Subject 00070 is interesting because the evaluation achieved 0 matching \
scores both for the RC\[CloseCurlyQuote]s and for the FB\[CloseCurlyQuote]s. \
So what went wrong?\
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}, {
  3.696027187831356*^9, 3.696027190365635*^9}, {3.696027255724792*^9, 
  3.696027292976328*^9}, {3.69602741606809*^9, 3.696027422492074*^9}, {
  3.696027459278305*^9, 3.696027488677918*^9}, {3.6960275296727*^9, 
  3.6960275407114773`*^9}, {3.6960275900108137`*^9, 3.6960276287535763`*^9}, {
  3.6960284586822557`*^9, 3.6960284955045958`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell["First, a quick function that we will use in the selection.", "Text",
 CellChangeTimes->{{3.69602861298839*^9, 3.696028621220667*^9}},
 Background->RGBColor[0.9, 1, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"isSubj70", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "70"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696028605372025*^9, 3.6960286108288307`*^9}, {
  3.6960286424008293`*^9, 3.696028649703479*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataSubj70", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", " ", "isSubj70"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.696028657918571*^9, 3.6960287121209593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"subj70True", "=", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"dataSubj70", ",", "isTrue"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", 
      RowBox[{"4", ";;", "259"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanFA70", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"dataSubj70", ",", "isFA"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanFB70", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"dataSubj70", ",", "isFB"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanRC70", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"dataSubj70", ",", "isRC"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4", ",", "259"}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.696028713885799*^9, 3.696028836220825*^9}}],

Cell["\<\
Let us first plot the (absolute) difference between the real MEB code for \
subject 70 and the activation values for each neuron for FA, FB, and RC \
images, respectively.\
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}, {
  3.696027187831356*^9, 3.696027190365635*^9}, {3.696027255724792*^9, 
  3.696027292976328*^9}, {3.69602741606809*^9, 3.696027422492074*^9}, {
  3.696027459278305*^9, 3.696027488677918*^9}, {3.6960275296727*^9, 
  3.6960275407114773`*^9}, {3.6960275900108137`*^9, 3.6960276287535763`*^9}, {
  3.6960284586822557`*^9, 3.6960285511307087`*^9}, {3.6960290101376743`*^9, 
  3.696029045928533*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"indexate", "/@", 
    RowBox[{"Abs", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"subj70True", "-", "meanFA70"}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{"subj70True", "-", "meanFB70"}], ")"}], ",", 
       RowBox[{"(", 
        RowBox[{"subj70True", "-", "meanRC70"}], ")"}]}], "}"}]}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696028856740473*^9, 3.696028919173593*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
aSXpqU5/f8DPwxZYMP6nQREqbrC/tFv6P1sMvGg=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
FOSn6mioHuUe1UhWUfwY6PiHc/mOiQ7/A59F2ts=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.008333333333333333], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
r6KXRbpjqZ55b3yrvDEgX7OU+L2xas2HXmuHUr4pvBFx/k7K2R10vsobDa0O
hR11rH58kBx1aJPOEOIT+MD+ERfeakDzEj5Y9+FLbNwM4uN8AD3Z+H3FbL75
ICHySuTObPJPmg9uxIbquAhpH1P4oPLb6eOJJ2i+qHxgFB6+tKqQ7Ue+QPbS
kdeizxO/L67/lLh9RDP1L/hilva3ro+zzhK/Lz5rrGt+8iiL+L9/LzY0CBbS
fpfmC9tH/bKP1tM8UHyX66bqOOjR/FL5IlF/qXSrKdsX/ZAuXZVSnULxFviB
29CVb5R7iPj9sPeZ2NhhO9U354cNDed+OGnA9iU/qEw+biztZPb7wSDotP8L
nupV4Ye/149x38Mx+/2+L5yOrxQZrH/7w+5cn8RpK8m/An+EFZ/TEPWm/g9/
XLmx6GxXPN2P88e+5ixn0UBWf/5Qq+6sc+u9m/j90SepUyfW9Tbx+0NfOuVx
nvAg8fvD87fG7goP6hdqAYjqnOAfE0DvCUEA8j7KnAaV5hB/AOQThQOQTP2E
C0D5n9clAYfJv3wAJr8ouHTMkvI5LQAd25Y0D1PWEP93/frblyqzCKsCkDw7
xWZ8I9u/AlE3yu30cFeKhyAQuvm/6jafYvEPhJZdkrJ3OfmLC8Rth/MWhw+y
+g9E1YwFtxozyV9p378/c7FlWQ7tu4pAVOyJrvCfwPpPIHI2n/GMlLP3WBCG
3eylVVNF/VEQhNKmXR6aZ2n/RxBmzi/LPP6U9jUuCAmmtyoCYmhf4IMgf+a8
YLEW7Ydp33F8QN9Dx9i+F4Sw9IMD7n+kfVEVhAtbdNcm7mf5F4xxWzIz7x4h
ewTB2Jg14bjqK/VDBEMvL3e4xldWf8HofDG/uESL7OGDceNJn4c9JbRPpQVj
bsOkloImNm+D8Um69rhDFNW7Khh3jN8+7x3I3kMh2Bu719twMeW3IATj6ydd
WTiIzb8QtCpyfQ/3sPwLQZD/15FS1s/4EFR4xafaNJG9aSFYv/efrvW5bN8I
gWRapbmmPvGpQjBqkM1Od232fg2F/YRvRYkhtM8KQrHycmq/o54kRyjC5mju
e5jxO/GHIu6q2hb+XRnxh0K5JXn3mXJW/6HgB32ZnJpxgfhD8fyUmXy6nPyr
CsWwLufWRhv2PgjDu5gnBtssc5b8H+BSEf0=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{728.4609375, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 256.}, {0., 0.9898995758636364}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6960289103957357`*^9, 3.696028919801394*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Comment",
  FontWeight->"Bold"],
 ": Wow. The RC\[CloseCurlyQuote]s are very far off -- with wild variations. \
Whereas the FA\[CloseCurlyQuote]s are all in a band around 0.02 (we trained \
on them after all), the FB\[CloseCurlyQuote]s and the RC\[CloseCurlyQuote]s \
vary wildly. There are many neurons where the RC is not only not close but \
the exact opposite of what the real MEB is. "
}], "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}, {
  3.6960274336292057`*^9, 3.696027449468587*^9}, {3.696027637673895*^9, 
  3.696027724067973*^9}, {3.696027758503187*^9, 3.696027818096076*^9}, {
  3.696027974413227*^9, 3.696027985923208*^9}, {3.69602806975917*^9, 
  3.696028081317717*^9}, {3.696028112943562*^9, 3.69602815276799*^9}, {
  3.696028416897765*^9, 3.696028425479515*^9}, {3.69602855695785*^9, 
  3.6960285610270042`*^9}, {3.696028948295465*^9, 3.696029001791605*^9}, {
  3.696029052755224*^9, 3.69602911302645*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell["Let us now look at the difference between the FB and the RC.", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}, {
  3.696027187831356*^9, 3.696027190365635*^9}, {3.696027255724792*^9, 
  3.696027292976328*^9}, {3.69602741606809*^9, 3.696027422492074*^9}, {
  3.696027459278305*^9, 3.696027488677918*^9}, {3.6960275296727*^9, 
  3.6960275407114773`*^9}, {3.6960275900108137`*^9, 3.6960276287535763`*^9}, {
  3.6960284586822557`*^9, 3.6960285511307087`*^9}, {3.6960290101376743`*^9, 
  3.696029045928533*^9}, {3.6960291229647493`*^9, 3.696029132426881*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"indexate", "/@", 
    RowBox[{"Abs", "/@", 
     RowBox[{"{", 
      RowBox[{"(", 
       RowBox[{"meanFB70", "-", "meanRC70"}], ")"}], "}"}]}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696028856740473*^9, 3.696028919173593*^9}, {
  3.6960291405495768`*^9, 3.696029156131837*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{691.69140625, Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 256.}, {0., 0.975453880053391}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.696029157542021*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Comment",
  FontWeight->"Bold"],
 ": On first glance, it seems like we have a problem -- many neurons shift \
completely when moving from an RC to an FB. However, I would not jump to that \
conclusion yet as it seems like the RC is just random noise."
}], "Text",
 CellChangeTimes->{{3.695850110428219*^9, 3.695850121002524*^9}, {
  3.695850215775908*^9, 3.695850262928747*^9}, {3.695850301305097*^9, 
  3.6958505174638042`*^9}, {3.695850667590382*^9, 3.695850673316639*^9}, {
  3.6960274336292057`*^9, 3.696027449468587*^9}, {3.696027637673895*^9, 
  3.696027724067973*^9}, {3.696027758503187*^9, 3.696027818096076*^9}, {
  3.696027974413227*^9, 3.696027985923208*^9}, {3.69602806975917*^9, 
  3.696028081317717*^9}, {3.696028112943562*^9, 3.69602815276799*^9}, {
  3.696028416897765*^9, 3.696028425479515*^9}, {3.69602855695785*^9, 
  3.6960285610270042`*^9}, {3.696028948295465*^9, 3.696029001791605*^9}, {
  3.696029052755224*^9, 3.69602911302645*^9}, {3.6960291695234003`*^9, 
  3.696029204205916*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Focus on Subject ??????", "Subsection",
 CellChangeTimes->{{3.696028169713705*^9, 3.696028180912601*^9}, {
  3.696028444665629*^9, 3.69602844903197*^9}, {3.69602851725143*^9, 
  3.696028518777725*^9}}],

Cell["\<\
Subject ????? is interesting because the evaluation achieved a really good \
score on the FB\[CloseCurlyQuote]s but a very low score on the RC\
\[CloseCurlyQuote]s. So what went wrong when we moved from the FB\
\[CloseCurlyQuote]s to the RC\[CloseCurlyQuote]s?\
\>", "Text",
 CellChangeTimes->{{3.6958505778347178`*^9, 3.695850611475469*^9}, {
  3.696027187831356*^9, 3.696027190365635*^9}, {3.696027255724792*^9, 
  3.696027292976328*^9}, {3.69602741606809*^9, 3.696027422492074*^9}, {
  3.696027459278305*^9, 3.696027488677918*^9}, {3.6960275296727*^9, 
  3.6960275407114773`*^9}, {3.6960275900108137`*^9, 3.6960276287535763`*^9}, {
  3.6960284586822557`*^9, 3.6960285511307087`*^9}},
 Background->RGBColor[0.87, 0.94, 1]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1412, 1035},
WindowMargins->{{Automatic, 1691}, {-53, Automatic}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 184, 2, 64, "Section"],
Cell[767, 26, 195, 4, 46, "Text"],
Cell[965, 32, 171, 2, 46, "Text"],
Cell[1139, 36, 313, 4, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1489, 45, 100, 1, 64, "Section"],
Cell[1592, 48, 481, 9, 65, "Text"],
Cell[2076, 59, 220, 6, 32, "Input"],
Cell[2299, 67, 339, 6, 46, "Text"],
Cell[2641, 75, 461, 9, 32, "Input"],
Cell[3105, 86, 413, 6, 46, "Text"],
Cell[3521, 94, 1568, 51, 159, "Input"],
Cell[5092, 147, 441, 7, 46, "Text"],
Cell[5536, 156, 761, 17, 32, "Input"],
Cell[6300, 175, 488, 14, 32, "Input"],
Cell[6791, 191, 488, 14, 32, "Input"],
Cell[7282, 207, 465, 13, 32, "Input"],
Cell[7750, 222, 528, 9, 46, "Text"],
Cell[8281, 233, 417, 12, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8735, 250, 91, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[8851, 255, 117, 1, 44, "Subsection"],
Cell[8971, 258, 1051, 19, 141, "Text"],
Cell[CellGroupData[{
Cell[10047, 281, 579, 16, 32, "Input"],
Cell[10629, 299, 13953, 249, 479, "Output"]
}, Open  ]],
Cell[24597, 551, 1196, 19, 122, "Text"],
Cell[25796, 572, 848, 16, 84, "Text"],
Cell[CellGroupData[{
Cell[26669, 592, 1138, 29, 54, "Input"],
Cell[27810, 623, 5688, 114, 535, "Output"]
}, Open  ]],
Cell[33513, 740, 1086, 18, 122, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34636, 763, 158, 2, 44, "Subsection"],
Cell[34797, 767, 646, 11, 46, "Text"],
Cell[35446, 780, 173, 2, 46, "Text"],
Cell[35622, 784, 312, 8, 32, "Input"],
Cell[35937, 794, 218, 5, 32, "Input"],
Cell[36158, 801, 1546, 49, 96, "Input"],
Cell[37707, 852, 696, 12, 46, "Text"],
Cell[CellGroupData[{
Cell[38428, 868, 586, 16, 32, "Input"],
Cell[39017, 886, 12598, 220, 471, "Output"]
}, Open  ]],
Cell[51630, 1109, 1163, 19, 65, "Text"],
Cell[52796, 1130, 625, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[53446, 1142, 450, 12, 32, "Input"],
Cell[53899, 1156, 5077, 96, 449, "Output"]
}, Open  ]],
Cell[58991, 1255, 1075, 18, 65, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60103, 1278, 207, 3, 44, "Subsection"],
Cell[60313, 1283, 734, 12, 65, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

