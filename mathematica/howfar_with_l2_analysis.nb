(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    353658,       7221]
NotebookOptionsPosition[    350819,       7148]
NotebookOutlinePosition[    351173,       7164]
CellTagsIndexPosition[    351130,       7161]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Data Import", "Text",
 CellChangeTimes->{{3.694950184821402*^9, 3.694950200977116*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/ivanevtimov/GDrive-Laf/THESIS/Results with more \
subjects/howfar_data_with_l2.csv\>\"", ",", 
     RowBox[{"HeaderLines", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subjectID", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fbGenuine", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcGenuine", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imposterID", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fbImposter", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rcImposter", "=", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "6"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.694949662855568*^9, 3.694949706528145*^9}, {
  3.694949862904303*^9, 3.694949874248372*^9}, {3.6949499207710133`*^9, 
  3.6949500053398933`*^9}, {3.697631376184207*^9, 
  3.6976313776699142`*^9}},ExpressionUUID->"86de4abd-1850-49b6-a92f-\
6914ff9c855b"],

Cell[TextData[{
 "Histogram of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fbGenuine", ",", "fbImposter"}], "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Genuine\>\"", ",", " ", "\"\<Imposter\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 
  3.6949501265134706`*^9}},ExpressionUUID->"8eb787ef-5f3b-4274-b7fd-\
d60826e7b00c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.63]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.63]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0., 0.}, {0.2, 3}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.4, 103}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 103]& , TagBoxNote -> "103"], 
              StyleBox["103", {}, StripOnInput -> False]], Annotation[#, 
              Style[103, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.6, 203}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 203]& , TagBoxNote -> "203"], 
              StyleBox["203", {}, StripOnInput -> False]], Annotation[#, 
              Style[203, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6, 0.}, {0.8, 86}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 86]& , TagBoxNote -> "86"], 
              StyleBox["86", {}, StripOnInput -> False]], Annotation[#, 
              Style[86, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.8, 0.}, {1., 18}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 18]& , TagBoxNote -> "18"], 
              StyleBox["18", {}, StripOnInput -> False]], Annotation[#, 
              Style[18, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.2, 4}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.63]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.2, 18}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 18]& , TagBoxNote -> "18"], 
              StyleBox["18", {}, StripOnInput -> False]], Annotation[#, 
              Style[18, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.2, 0.}, {1.4, 388}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 388]& , TagBoxNote -> "388"], 
              StyleBox["388", {}, StripOnInput -> False]], Annotation[#, 
              Style[388, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.4, 0.}, {1.6, 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}}, \
{}}}, {{{{}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.032, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0., 1.6}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Genuine\"", "\"Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.702395960735577*^9},ExpressionUUID->"9dc1de5e-1a95-44ed-932e-\
ef65d0b055da"]
}, Open  ]],

Cell[TextData[{
 "Histogram of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rcGenuine", ",", "rcImposter"}], "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Genuine\>\"", ",", " ", "\"\<Imposter\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 
  3.6949502440435*^9}},ExpressionUUID->"9ad8ee94-d810-4f60-83a8-1cba3aa0f760"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.602]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.3, 0.}, {0.4, 4}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.5, 36}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 36]& , TagBoxNote -> "36"], 
              StyleBox["36", {}, StripOnInput -> False]], Annotation[#, 
              Style[36, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.6, 83}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 83]& , TagBoxNote -> "83"], 
              StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
              Style[83, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6, 0.}, {0.7, 104}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 104]& , TagBoxNote -> "104"], 
              StyleBox["104", {}, StripOnInput -> False]], Annotation[#, 
              Style[104, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7, 0.}, {0.8, 100}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 100]& , TagBoxNote -> "100"], 
              StyleBox["100", {}, StripOnInput -> False]], Annotation[#, 
              Style[100, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.8, 0.}, {0.9, 52}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 52]& , TagBoxNote -> "52"], 
              StyleBox["52", {}, StripOnInput -> False]], Annotation[#, 
              Style[52, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.9, 0.}, {1., 21}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 21]& , TagBoxNote -> "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 9}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.1, 0.}, {1.2, 5}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 5]& , TagBoxNote -> "5"], 
              StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
              Style[5, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.2, 0.}, {1.3, 3}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.602]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 6}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 6]& , TagBoxNote -> "6"], 
              StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
              Style[6, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.1, 0.}, {1.2, 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.2, 0.}, {1.3, 83}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 83]& , TagBoxNote -> "83"], 
              StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
              Style[83, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.3, 0.}, {1.4, 303}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 303]& , TagBoxNote -> "303"], 
              StyleBox["303", {}, StripOnInput -> False]], Annotation[#, 
              Style[303, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.4, 0.}, {1.5, 12}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
              StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
              Style[12, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.27599999999999997`, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0.3, 1.5}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Genuine\"", "\"Imposter\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.602]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.602`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 
   3.702395960885211*^9},ExpressionUUID->"86200f5d-5e22-4e2a-a02f-\
5461e2764656"]
}, Open  ]],

Cell[TextData[{
 "Histogram of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950421456979*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"LightBlue", ",", "Blue", ",", "LightRed", ",", "Red"}], "}"}]}],
    ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\"", ",", 
      "\"\<FB Imposter\>\"", " ", ",", "\"\<RC Imposter\>\""}], "}"}]}], ",", 
   
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Euclidean distance from the VGG output for the fa image\>\"", ",", 
      " ", "\"\<Number of subjects\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.702395992836402*^9, 
  3.7023959930829163`*^9}},ExpressionUUID->"c3475905-e17b-4b32-9545-\
2535252dd684"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.588]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.87, 0.94, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.1, 0.}, {0.2, 3}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.3, 21}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 21]& , TagBoxNote -> "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.3, 0.}, {0.4, 82}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 82]& , TagBoxNote -> "82"], 
              StyleBox["82", {}, StripOnInput -> False]], Annotation[#, 
              Style[82, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.5, 108}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 108]& , TagBoxNote -> "108"], 
              StyleBox["108", {}, StripOnInput -> False]], Annotation[#, 
              Style[108, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.6, 95}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 95]& , TagBoxNote -> "95"], 
              StyleBox["95", {}, StripOnInput -> False]], Annotation[#, 
              Style[95, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6, 0.}, {0.7, 60}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 60]& , TagBoxNote -> "60"], 
              StyleBox["60", {}, StripOnInput -> False]], Annotation[#, 
              Style[60, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7, 0.}, {0.8, 26}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 26]& , TagBoxNote -> "26"], 
              StyleBox["26", {}, StripOnInput -> False]], Annotation[#, 
              Style[26, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.8, 0.}, {0.9, 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.9, 0.}, {1., 7}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 7]& , TagBoxNote -> "7"], 
              StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
              Style[7, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 4}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.3, 0.}, {0.4, 4}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.5, 36}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 36]& , TagBoxNote -> "36"], 
              StyleBox["36", {}, StripOnInput -> False]], Annotation[#, 
              Style[36, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.6, 83}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 83]& , TagBoxNote -> "83"], 
              StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
              Style[83, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6, 0.}, {0.7, 104}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 104]& , TagBoxNote -> "104"], 
              StyleBox["104", {}, StripOnInput -> False]], Annotation[#, 
              Style[104, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7, 0.}, {0.8, 100}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 100]& , TagBoxNote -> "100"], 
              StyleBox["100", {}, StripOnInput -> False]], Annotation[#, 
              Style[100, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.8, 0.}, {0.9, 52}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 52]& , TagBoxNote -> "52"], 
              StyleBox["52", {}, StripOnInput -> False]], Annotation[#, 
              Style[52, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.9, 0.}, {1., 21}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 21]& , TagBoxNote -> "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 9}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.1, 0.}, {1.2, 5}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 5]& , TagBoxNote -> "5"], 
              StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
              Style[5, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.2, 0.}, {1.3, 3}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0.85, 0.85]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 4}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.1, 0.}, {1.2, 14}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 14]& , TagBoxNote -> "14"], 
              StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
              Style[14, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.2, 0.}, {1.3, 81}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 81]& , TagBoxNote -> "81"], 
              StyleBox["81", {}, StripOnInput -> False]], Annotation[#, 
              Style[81, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.3, 0.}, {1.4, 307}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 307]& , TagBoxNote -> "307"], 
              StyleBox["307", {}, StripOnInput -> False]], Annotation[#, 
              Style[307, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.4, 0.}, {1.5, 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 6}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 6]& , TagBoxNote -> "6"], 
              StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
              Style[6, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.1, 0.}, {1.2, 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.2, 0.}, {1.3, 83}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 83]& , TagBoxNote -> "83"], 
              StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
              Style[83, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.3, 0.}, {1.4, 303}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 303]& , TagBoxNote -> "303"], 
              StyleBox["303", {}, StripOnInput -> False]], Annotation[#, 
              Style[303, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.4, 0.}, {1.5, 12}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
              StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
              Style[12, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, \
{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox[
       "\"Euclidean distance from the VGG output for the fa image\"", 
        TraditionalForm], 
       FormBox["\"Number of subjects\"", TraditionalForm]}, 
     AxesOrigin -> {0.07200000000000001, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0.1, 1.5}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FB Genuine\"", "\"RC Genuine\"", "\"FB Imposter\"", 
       "\"RC Imposter\""}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0.87, 0.94, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[1, 0.85, 0.85]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.87, 0.94, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5800000000000001, 0.6266666666666667, 
                    0.6666666666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.87, 0.94, 1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.87, 0.94, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.87, 0.94, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, 3.702395961075212*^9, 
   3.702395996953704*^9},ExpressionUUID->"511cbb3c-211e-41b4-9e23-\
cba585c88e30"]
}, Open  ]],

Cell[TextData[{
 "Histogram of the genuine distributions when measuring the distance between \
the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950440441794*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Magenta"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950461485366*^9, 
  3.694950513740334*^9}},ExpressionUUID->"6846d520-5a68-497e-8ba0-\
6d0eef8ec0e4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.588]]], 
       RGBColor[
       0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 1, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.1, 0.}, {0.2, 3}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.2, 0.}, {0.3, 21}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 21]& , TagBoxNote -> "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.3, 0.}, {0.4, 82}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 82]& , TagBoxNote -> "82"], 
              StyleBox["82", {}, StripOnInput -> False]], Annotation[#, 
              Style[82, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.5, 108}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 108]& , TagBoxNote -> "108"], 
              StyleBox["108", {}, StripOnInput -> False]], Annotation[#, 
              Style[108, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.6, 95}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 95]& , TagBoxNote -> "95"], 
              StyleBox["95", {}, StripOnInput -> False]], Annotation[#, 
              Style[95, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6, 0.}, {0.7, 60}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 60]& , TagBoxNote -> "60"], 
              StyleBox["60", {}, StripOnInput -> False]], Annotation[#, 
              Style[60, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7, 0.}, {0.8, 26}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 26]& , TagBoxNote -> "26"], 
              StyleBox["26", {}, StripOnInput -> False]], Annotation[#, 
              Style[26, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.8, 0.}, {0.9, 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.9, 0.}, {1., 7}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 7]& , TagBoxNote -> "7"], 
              StyleBox["7", {}, StripOnInput -> False]], Annotation[#, 
              Style[7, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 4}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.3, 0.}, {0.4, 4}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.4, 0.}, {0.5, 36}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 36]& , TagBoxNote -> "36"], 
              StyleBox["36", {}, StripOnInput -> False]], Annotation[#, 
              Style[36, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.5, 0.}, {0.6, 83}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 83]& , TagBoxNote -> "83"], 
              StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
              Style[83, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.6, 0.}, {0.7, 104}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 104]& , TagBoxNote -> "104"], 
              StyleBox["104", {}, StripOnInput -> False]], Annotation[#, 
              Style[104, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.7, 0.}, {0.8, 100}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 100]& , TagBoxNote -> "100"], 
              StyleBox["100", {}, StripOnInput -> False]], Annotation[#, 
              Style[100, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{0.8, 0.}, {0.9, 52}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 52]& , TagBoxNote -> "52"], 
              StyleBox["52", {}, StripOnInput -> False]], Annotation[#, 
              Style[52, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{0.9, 0.}, {1., 21}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 21]& , TagBoxNote -> "21"], 
              StyleBox["21", {}, StripOnInput -> False]], Annotation[#, 
              Style[21, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 9}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 9]& , TagBoxNote -> "9"], 
              StyleBox["9", {}, StripOnInput -> False]], Annotation[#, 
              Style[9, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.1, 0.}, {1.2, 5}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 5]& , TagBoxNote -> "5"], 
              StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
              Style[5, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.2, 0.}, {1.3, 3}, "RoundingRadius" -> 0]}]},
                StatusArea[#, 3]& , TagBoxNote -> "3"], 
              StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
              Style[3, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0, 1, 0]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 4}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 4]& , TagBoxNote -> "4"], 
              StyleBox["4", {}, StripOnInput -> False]], Annotation[#, 
              Style[4, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.1, 0.}, {1.2, 14}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 14]& , TagBoxNote -> "14"], 
              StyleBox["14", {}, StripOnInput -> False]], Annotation[#, 
              Style[14, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.2, 0.}, {1.3, 81}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 81]& , TagBoxNote -> "81"], 
              StyleBox["81", {}, StripOnInput -> False]], Annotation[#, 
              Style[81, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.3, 0.}, {1.4, 307}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 307]& , TagBoxNote -> "307"], 
              StyleBox["307", {}, StripOnInput -> False]], Annotation[#, 
              Style[307, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.4, 0.}, {1.5, 11}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 11]& , TagBoxNote -> "11"], 
              StyleBox["11", {}, StripOnInput -> False]], Annotation[#, 
              Style[11, {}], "Tooltip"]& ]}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[1, 0, 1]]], {{
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1., 0.}, {1.1, 6}, "RoundingRadius" -> 0]}]}, 
               StatusArea[#, 6]& , TagBoxNote -> "6"], 
              StyleBox["6", {}, StripOnInput -> False]], Annotation[#, 
              Style[6, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  RectangleBox[{1.1, 0.}, {1.2, 13}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 13]& , TagBoxNote -> "13"], 
              StyleBox["13", {}, StripOnInput -> False]], Annotation[#, 
              Style[13, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.2, 0.}, {1.3, 83}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 83]& , TagBoxNote -> "83"], 
              StyleBox["83", {}, StripOnInput -> False]], Annotation[#, 
              Style[83, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.3, 0.}, {1.4, 303}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 303]& , TagBoxNote -> "303"], 
              StyleBox["303", {}, StripOnInput -> False]], Annotation[#, 
              Style[303, {}], "Tooltip"]& ]}, {
            TagBox[
             TooltipBox[
              TagBox[{
                DynamicBox[{
                  FEPrivate`If[
                   CurrentValue["MouseOver"], 
                   EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                  
                  RectangleBox[{1.4, 0.}, {1.5, 12}, "RoundingRadius" -> 
                   0]}]}, StatusArea[#, 12]& , TagBoxNote -> "12"], 
              StyleBox["12", {}, StripOnInput -> False]], Annotation[#, 
              Style[12, {}], 
              "Tooltip"]& ]}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, \
{}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.07200000000000001, 0.}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{0.1, 1.5}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FB Genuine\"", "\"RC Genuine\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[1, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950509855113*^9, 
   3.694950514467827*^9}, 
   3.70239596126752*^9},ExpressionUUID->"16233cbd-b956-43d2-8d1d-\
e581afc22c64"]
}, Open  ]],

Cell[TextData[{
 "List plot of the genuine distributions when measuring the distance between \
the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950440441794*^9}, {3.6949505581190042`*^9, 3.694950559117403*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Magenta"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950461485366*^9, 3.694950513740334*^9}, {
  3.694950560886322*^9, 
  3.694950572006558*^9}},ExpressionUUID->"f1d69974-06c7-4810-8bd6-\
88a9d8149459"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1: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
2zYPh9qQ9VFKhfN/mDoytQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1: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
ceoOCby5hfjTkfqtOlZ2I/50bNyiju5LiT8dMX3FP7w/8adj/1YNpj9D/ekY
/aNWr6E+ycCic+oJY3wZGfX58xHjPwOnJktoH+cZMwMvfqBaMZH+z8DzfQQb
k+3z/gwc7yly6w3qt/gPi9moO/Vn4Is/1ZfeiPgz8dE36rmnE/VnYmCVuj7+
nfoz8c+L6ujKemhmIr6b4Dz7kTcTVVa9vncY8Wei5zYNXvk77Z+JBXFidqE/
Q5l4qUZ9OEb8Wahqb3n9a+rPwntn1TWG+w6ysOYOCS18mvizkDNO/J0PMP+z
ENNZzBW1tj38Wdh9S4NrGZ+BLCzdpr4u9xC/xd+iwd1ljP/s+n7whC1vZEN2
qiNvOPVnY9O3Wj19OfFnY3k38R5kvfda9FbVqa8QfzY2jBZzkZf6s3HF2j9y
blN/NnBbdU1v4s9BvwniLyki/hwMtubXRf9D++dgwmkNDoui/hxE9bWi8gL1
5+BkuBgXWtn1xZ+DruESaNKQ/znY3lcCw9iPQzl49YA6NyYSfy4GRIoxtKH/
5eLV5iKXub8gF4/sVFdCD+rPRdhNDf7O+cGbi6+sftab+evPRZuP1LWE9gvk
1tuT+2AoF026imyvJv68+vrOfmbkobiXII/9EXkIDhL/PvYbMw8ZNerZx/ro
zcP9/SSwY4E9j/nzkLhOnX0a5oU8HLug1ZG7qD8PCWvVt6Uv8buRtk59N6ts
OsyNDr+oo4DzpuHGMzfV50i36Yfc9ft9HecVNz5pa02dyfZ7Yt3Iu6S+p++0
/WG68c4U8T//mX2/2w2jtRiH2jN/3YgfLv7jrG9L3PX7x3bGkxsXa1RXHrXp
SjfatxDv/97J/uJGlwiry/zbvq/GjUVO8a8az37vxgqIdNhq31/rRvEV9UTM
of3zMeZuCewZYNNh+Ri8QV3TGR9GPj5/RAI3Ajb9UD6W9BH/AtLIR/gdYm6e
Tfz5yP1Mqyel0l/52LtRHWsvE7+tL5f5m4/4AeL9B/27JB9hVj/5oTvreT4y
rPj9YKptz8p87H9QvJF9OY/mY3oLCay7at9XY+m/S+Qb7nuhfLy1UX3zthG/
df8kMQob+k8BSveo4xnW27ACLDmrvlVf0P8F9fk0xz7/UAHq/ib+V/9gfhbU
z8Pcz2ILkD1AEMH+YhYg84JqG4dNuwtQ+ZU6DzfswwU4cUCDmWOIvwDvWvv7
1SnEX4C4oVaV5DxWWYCyI+rqvI34C1DdQYwWTe3zNQXY/bD4fy1nvSnAk9PE
H1hpy9cWYNlp9VyOpf8L0dmK5yv77fwJK7QmPjFuh3MeK8TF7mJEDKH/CxEx
TaT5GcZ/IYZa9SIt2aZjC7Hask+Tm+zXhVj6pQa3z6H/C3H4Z3Vu9TL+C1HV
RczmtP+SQjQ+o8HfNjL+C+u/N3A+qizEjjp1Dmvob4U4+LG6XnyM+AtRc7+Y
L3EfDRXirFXvRr5K/IVY1laMM6eY/0X1+xvzK6wIrlPqepP5ZxSh1+fqGNSV
/i/C1fskFMF+hSLMmizmrRP0fxFmjxBMYn02i3Ap3tpSHqD/i9AvpI5rBxn/
RWi2WX3929r8JUXwDRV/twTiL8LbTawt/BP7fGURTlvz53Hul4EinDum1Z9W
Mf4tfktBx0vEX4Q9rcQYn2bfX1uE1GYSOvE1/V+M///zd5sfVly/H3P+NooR
HVDPuEusf8UY0FTM627iL8aRe8U4X0z8xVi7V52D5hJ/Mf6ZIP63+X3JXYzb
EYJAB9bvYowYL2YZ71tSjOXb1bF6BOO/GPcNk0A487uyGH9Msv7N9weKEdVU
Arsn0//F+Ndl1QNjWf+KUf2JBntwPq4tRk2FBluM4/5egkXDxDt1Nf1fgpfr
1NWF+4VRgiYb1fXbvfR/Cd44pMEu3CdQgp3DxWzZwT4fW4JlE62oCif+EkyM
E2+rhvwvwYrzGlzgYfyX4KM7BPFh9H8JehxSx1Xut/4S7J4qEsnvQ5UluHVe
ncEa4i/Bgk3qcHG+qSnBqPj/fLWj/0tws5uE+tey/lnyrcXfP47xX4ofd6kv
6wHiL0VMUzFWxDD+S/GutZ8fZnw8VIrwu8U/7Rjxl6LXKfUsjGL9L8Uoa94+
up/4S2GcVM+ZFNve7lKknFPXSvYjbymu7dXgRc6bS0px2Mr3Eb9xnrDu6yXm
jEjmfyl+Payep34m/lIk/qyObTvY/0qRc15dUUL/l6LteAkNYH2uLcXA0YIX
0oi/DEe/VMe6G6z/ZWh/UKuf5fcUowyV0SJ/1LL+leG1+8R74FniL0P/j7V6
DL+nxpYh/Jw6NrtY/8vqv9cn2ve7y+rzgee9ZQh1FW/HnYz/Mnz4m3oGb6L/
y3Cmi4QmfWbjqyzDlIfFe24U8Zfhl0ta/ZSb8V+GF/aqI8B6FipDI2s/aXvE
lq8tw199xKycy/5Xjth+4v/+ZeZ/OfK/VU/O3cRfjpkh9UWW0v/l9d/jXyT+
cqw5oa4f64i/HP3Wq2tzw75eXv89Yandv93lWDhSzKRPiL8cRxpLoK7Y5i8p
R9OvNdif87K/HK83E7PrGfq/HDOsebLuNeIvx4uNxRjNfaOmHKmDxPv1B8Rf
jikdxahjPtSWo9Vwka41tj55AmcjxNvpH4z/J/Btc8H31684/w9f7mDO
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 417.}, {0, 1.40938818455}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 417.}, {0, 1.40938818455}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FB Genuine\"", "\"RC Genuine\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950509855113*^9, 
   3.694950514467827*^9}, 3.694950573660739*^9, 
   3.70239596143791*^9},ExpressionUUID->"20443d34-84e0-4ea0-a1e5-\
99399b1b0923"]
}, Open  ]],

Cell[TextData[{
 "List Plot of the genuine and imposter distributions when measuring the \
distance between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950421456979*^9}, {3.694950646002103*^9, 3.6949506483204803`*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
    "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", "Blue", ",", "Magenta", ",", "Red"}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\"", ",", 
      "\"\<FB Imposter\>\"", " ", ",", "\"\<RC Imposter\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950650410201*^9, 3.6949507120590973`*^9}, {
  3.694951153748155*^9, 
  3.694951173842523*^9}},ExpressionUUID->"da0447d6-e30c-4b9c-bb40-\
840ae622e7dc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        PointBox[CompressedData["
1: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
2zYPh9qQ9VFKhfN/mDoytQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1: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
ceoOCby5hfjTkfqtOlZ2I/50bNyiju5LiT8dMX3FP7w/8adj/1YNpj9D/ekY
/aNWr6E+ycCic+oJY3wZGfX58xHjPwOnJktoH+cZMwMvfqBaMZH+z8DzfQQb
k+3z/gwc7yly6w3qt/gPi9moO/Vn4Is/1ZfeiPgz8dE36rmnE/VnYmCVuj7+
nfoz8c+L6ujKemhmIr6b4Dz7kTcTVVa9vncY8Wei5zYNXvk77Z+JBXFidqE/
Q5l4qUZ9OEb8Wahqb3n9a+rPwntn1TWG+w6ysOYOCS18mvizkDNO/J0PMP+z
ENNZzBW1tj38Wdh9S4NrGZ+BLCzdpr4u9xC/xd+iwd1ljP/s+n7whC1vZEN2
qiNvOPVnY9O3Wj19OfFnY3k38R5kvfda9FbVqa8QfzY2jBZzkZf6s3HF2j9y
blN/NnBbdU1v4s9BvwniLyki/hwMtubXRf9D++dgwmkNDoui/hxE9bWi8gL1
5+BkuBgXWtn1xZ+DruESaNKQ/znY3lcCw9iPQzl49YA6NyYSfy4GRIoxtKH/
5eLV5iKXub8gF4/sVFdCD+rPRdhNDf7O+cGbi6+sftab+evPRZuP1LWE9gvk
1tuT+2AoF026imyvJv68+vrOfmbkobiXII/9EXkIDhL/PvYbMw8ZNerZx/ro
zcP9/SSwY4E9j/nzkLhOnX0a5oU8HLug1ZG7qD8PCWvVt6Uv8buRtk59N6ts
OsyNDr+oo4DzpuHGMzfV50i36Yfc9ft9HecVNz5pa02dyfZ7Yt3Iu6S+p++0
/WG68c4U8T//mX2/2w2jtRiH2jN/3YgfLv7jrG9L3PX7x3bGkxsXa1RXHrXp
SjfatxDv/97J/uJGlwiry/zbvq/GjUVO8a8az37vxgqIdNhq31/rRvEV9UTM
of3zMeZuCewZYNNh+Ri8QV3TGR9GPj5/RAI3Ajb9UD6W9BH/AtLIR/gdYm6e
Tfz5yP1Mqyel0l/52LtRHWsvE7+tL5f5m4/4AeL9B/27JB9hVj/5oTvreT4y
rPj9YKptz8p87H9QvJF9OY/mY3oLCay7at9XY+m/S+Qb7nuhfLy1UX3zthG/
df8kMQob+k8BSveo4xnW27ACLDmrvlVf0P8F9fk0xz7/UAHq/ib+V/9gfhbU
z8Pcz2ILkD1AEMH+YhYg84JqG4dNuwtQ+ZU6DzfswwU4cUCDmWOIvwDvWvv7
1SnEX4C4oVaV5DxWWYCyI+rqvI34C1DdQYwWTe3zNQXY/bD4fy1nvSnAk9PE
H1hpy9cWYNlp9VyOpf8L0dmK5yv77fwJK7QmPjFuh3MeK8TF7mJEDKH/CxEx
TaT5GcZ/IYZa9SIt2aZjC7Hask+Tm+zXhVj6pQa3z6H/C3H4Z3Vu9TL+C1HV
RczmtP+SQjQ+o8HfNjL+C+u/N3A+qizEjjp1Dmvob4U4+LG6XnyM+AtRc7+Y
L3EfDRXirFXvRr5K/IVY1laMM6eY/0X1+xvzK6wIrlPqepP5ZxSh1+fqGNSV
/i/C1fskFMF+hSLMmizmrRP0fxFmjxBMYn02i3Ap3tpSHqD/i9AvpI5rBxn/
RWi2WX3929r8JUXwDRV/twTiL8LbTawt/BP7fGURTlvz53Hul4EinDum1Z9W
Mf4tfktBx0vEX4Q9rcQYn2bfX1uE1GYSOvE1/V+M///zd5sfVly/H3P+NooR
HVDPuEusf8UY0FTM627iL8aRe8U4X0z8xVi7V52D5hJ/Mf6ZIP63+X3JXYzb
EYJAB9bvYowYL2YZ71tSjOXb1bF6BOO/GPcNk0A487uyGH9Msv7N9weKEdVU
Arsn0//F+Ndl1QNjWf+KUf2JBntwPq4tRk2FBluM4/5egkXDxDt1Nf1fgpfr
1NWF+4VRgiYb1fXbvfR/Cd44pMEu3CdQgp3DxWzZwT4fW4JlE62oCif+EkyM
E2+rhvwvwYrzGlzgYfyX4KM7BPFh9H8JehxSx1Xut/4S7J4qEsnvQ5UluHVe
ncEa4i/Bgk3qcHG+qSnBqPj/fLWj/0tws5uE+tey/lnyrcXfP47xX4ofd6kv
6wHiL0VMUzFWxDD+S/GutZ8fZnw8VIrwu8U/7Rjxl6LXKfUsjGL9L8Uoa94+
up/4S2GcVM+ZFNve7lKknFPXSvYjbymu7dXgRc6bS0px2Mr3Eb9xnrDu6yXm
jEjmfyl+Payep34m/lIk/qyObTvY/0qRc15dUUL/l6LteAkNYH2uLcXA0YIX
0oi/DEe/VMe6G6z/ZWh/UKuf5fcUowyV0SJ/1LL+leG1+8R74FniL0P/j7V6
DL+nxpYh/Jw6NrtY/8vqv9cn2ve7y+rzgee9ZQh1FW/HnYz/Mnz4m3oGb6L/
y3Cmi4QmfWbjqyzDlIfFe24U8Zfhl0ta/ZSb8V+GF/aqI8B6FipDI2s/aXvE
lq8tw199xKycy/5Xjth+4v/+ZeZ/OfK/VU/O3cRfjpkh9UWW0v/l9d/jXyT+
cqw5oa4f64i/HP3Wq2tzw75eXv89Yandv93lWDhSzKRPiL8cRxpLoK7Y5i8p
R9OvNdif87K/HK83E7PrGfq/HDOsebLuNeIvx4uNxRjNfaOmHKmDxPv1B8Rf
jikdxahjPtSWo9Vwka41tj55AmcjxNvpH4z/J/Btc8H31684/w9f7mDO
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 417.}, {0, 1.40938818455}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 417.}, {0, 1.40938818455}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FB Genuine\"", "\"RC Genuine\"", "\"FB Imposter\"", 
       "\"RC Imposter\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> False]
                   }], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950674870565*^9, 
   3.694950681389696*^9}, 3.694950712814801*^9, 
   3.7023959615741873`*^9},ExpressionUUID->"856ebd9b-2117-4339-b6aa-\
3127fda91d01"]
}, Open  ]],

Cell[TextData[{
 "List Plot of the distances between the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["fb",
  FontWeight->"Bold"],
 " ",
 StyleBox["and",
  FontSlant->"Italic"],
 " the ",
 StyleBox["fa",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["rc",
  FontWeight->"Bold"],
 " images for genuines and for imposters. The x axis represents the Euclidean \
distance between the fa image and the specified other type of image. The y \
axis is the index of the distance in the input array and does not impact the \
distributions (essentially, this is a \[OpenCurlyDoubleQuote]histogram of \
dots\[CloseCurlyDoubleQuote]).\nAnother way to say this is  that if you look \
at a particular y value and draw a horizontal line, the Euclidean distance \
between that subject\[CloseCurlyQuote]s fa and all its other images will lie \
on that horizontal line, with their x coordinates determined by the value of \
that distance."
}], "Text",
 CellChangeTimes->{{3.694950130975534*^9, 3.694950166912586*^9}, {
  3.694950238244871*^9, 3.694950238427281*^9}, {3.6949504192406607`*^9, 
  3.694950421456979*^9}, {3.694950646002103*^9, 3.6949506483204803`*^9}, {
  3.694951398073063*^9, 3.694951398865193*^9}, {3.6949514755483*^9, 
  3.694951526117365*^9}, {3.694951640418604*^9, 3.6949517147321253`*^9}, {
  3.69495181446554*^9, 3.694951819615766*^9}, {3.694952010951602*^9, 
  3.694952065216228*^9}},
 Background->RGBColor[0.87, 0.94, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rotateData", "[", "d_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"d", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"rotateData", "/@", 
    RowBox[{"{", 
     RowBox[{
     "fbGenuine", ",", "rcGenuine", ",", "fbImposter", ",", "rcImposter"}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Cyan", ",", "Blue", ",", "Magenta", ",", "Red"}], "}"}]}], ",", 
   
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<FB Genuine\>\"", ",", "\"\<RC Genuine\>\"", ",", 
      "\"\<FB Imposter\>\"", " ", ",", "\"\<RC Imposter\>\""}], "}"}]}], ",", 
   
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.694950027243482*^9, 3.6949501265134706`*^9}, {
  3.694950241100892*^9, 3.6949502440435*^9}, {3.6949502913665*^9, 
  3.694950370055814*^9}, {3.694950650410201*^9, 3.6949507120590973`*^9}, {
  3.694951153748155*^9, 3.6949512949821978`*^9}, {3.69495132621673*^9, 
  3.6949513397118187`*^9}, {3.694951407315377*^9, 3.69495146325213*^9}, {
  3.69495152856632*^9, 3.694951625137594*^9}, {3.6949517402159*^9, 
  3.694951803184064*^9}},ExpressionUUID->"cf22a539-5ab6-4217-80f0-\
9a3309fde31d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 1]], 
        PointBox[CompressedData["
1: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
3JLI8YiYjf8CP7sytQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJw9WHlc1dW234LMs1dtUB+/1ErFjLpmDuj5oiaZE6IhCnp+zDOcAxzgoMZx
yuw20LNMe17PQdO83VJyuGXp4+TFoSyl9yo1n56jpWIqgyIIAvvuHmtd//Gz
2b+99xq+67u+6zyWUhiX7iGEqO4jxB//T2+QxgD9kkH8/79mwxAfYTNF/0pr
gbRb0vj2nh9p7Ys+3sIR/+VlWofC3C0N0YkNtO6PhCFCHPvlHK0fxnNhwrHj
vZu0HoxDQtiORDfRWsMtb4Gz3bdoPRRRd2XtbY/btB6OkCAhtn/C9jyBmBZp
2H6W7xuBcaFC+3jrdVqPguWBDC/P5PVoVDdJw8TRblqPwc1Waej+ndeRCH5C
YHtXM62fQWGXdA2JvUjrZ6FflK5qB8fnz/i7r3AHnLlG67GYECb09skcj+eQ
4yO0UTvZvnHw6itsb167QevnsatL1o71Z/vGQ/MVziMzOH4TsLpFugLXsr8T
8ZXy58BrvJ6EFX2FM+UU3xeFKcHCOXYD2zMZl/yF++a3v9F6CnylDF8bwucN
+KZTug4e5vOAs1HK16sbe9c24MHDwvZJDPsbjY3t0v7a1xQvWzTOeAnbxsN8
31Q83ixr/cVV2p+KT3uk4czPbM80VPcVjlFpZI9tGtao/I7cTd+L6XhSxW93
PX1vmw5boNDEDN5/ARn3pT1qOb//AhKCBSI2cP5mIO2+rO0Xzedn4I17Mrzx
FucjBnuVf5O2Ed5sMXhW4Ql2Pv8idocKR8RyPv8i9gnhNqz/nfZn4oUAIba6
r9D+THyt7r+wjfdfwlPN0rDvEuXb9hJ8VD1kenH8Z2F7pwyvG8T+z8KGAKHt
eZ7jM7vXnqcp3rbZOK78jwqh98QcfNImaxNHkT+2OYj7VIZveayF9ucirlvK
tuOUT9tcpLdKl8dP/P48JAnhvNTA78/Ds/ekYUI/xlssHlf+nqgjPCIW2l1p
/N6f6s8Wi59UfrWV9L0zFq4goY2uYXzPx8hOKesCXXR+PkYovEdMYzzMx5pG
WdnWRXhxzseKe1KefITxH4eTXsI9YBnFA3F4ulPap87jeMeh1UvoiTvIf2dc
Lx6vMv4WYF6gcGd8QP5hAbzuStfPq2nftgBvegj3u1PpfucCRAQJ/ehcPr8Q
K8OEze99eg8LMfWSlBWryB/bQqBVyokm2ncuxDpvoT3pzfh6GVcDhf7qPLoP
LyNG1f8buxhPL+ORwUILCvk/Ov8yzvgIvSae8xOPQ0OErf1x4h/EY+hdaWiv
4vjF46qyP9yL8uuMx/lZAklRd+j8ot781XD+FmHrw8K94xN6z7YIdV5CO3qC
8O5chApf4SgyM/4TMMdfaFos3Y8EdAUpFOpcbwmYFChEYxrbn4Chqh56krk+
F+P8HWl8J5fwgcWYECJsv/xK9WFbjKlDBIZ+RnzqXIxDbVLGt/P7S7C2VYbP
2cL5W4J0xS+H4hl/S1DTKu3/2UD+OZfge8WHnmsZP4m4GCTgMZvtT8TOYOH+
bTz1E1si4v2Edvoyn0/EM6FCj4/i/CfhjqqXiu/JHyRhsq/QLn1L/tiSsFPV
8xjub84kNDfJ2iGXuH6Xwr5AaOkDOX9L8fN9aXjXk/G7FLZWaezYzueXIlr1
j2f+i/O/DBYpXZ+FsP3L0N0k5cNfMX6XweOOtG/geDqXoX+bNPYL4PgZ8SdP
gbcH8nkj4tqka9f7HH8j5oUJ7YMj5J/TiB+DVBTZPqHjOxW//VPovKbjtyDh
rrQxnnW0+wlRe4Hs13XMapHyXiHjU0fqEWlcXk3+O3S0+QvbF7s43jryFD49
X6Hv3Tq23ZG1T2Sy/8kY2CHtcbfIXi0Za+5J+wwT4yEZ2Uo/VF0kf/Vk3A4R
mL6I+Sy5t76/pPsdyTCr/nkknvGWjOi7sjJ6MvnjTsaNP6oohvk7BZq3cDsi
6byWgh33ZfgPa2gfKbCOEc4mf/JPT8GFO9LwlR/jKwUdSl8cW0H9xZGCfF+h
l3VxvabA2Ve4Sw4QXtwpvXxew3onFd0dsrIyleKlpeK+qte92VzPqfBT9TH8
Q+IbPRXn1K0+Y5lfUnG2j0CfCZQfRyrmq6+Cfub3U3FF8WdgFvG1OxXfhQit
fjfnPw0jzkrj2C/IPy0NYd7CudzO8U/D632EI8ZM8dDTUB0oUALGVxpmqlvT
3yT7HGk41SJri2bReWcaVjXLyhujOP9p8GqThttPc/7T0V/9tfx5sl9LR3Ww
0N7x4H6QjjOqXoek0Xk9HY/5CNRFcH2lY5Hqx33SKV6OdPS7LmvnziT+dqZj
ktJ719+j793paPMUetZH3L8ysL5RGl5iPGsZmNUg5WtZXM8ZKFB43xhP+NEz
cO6BrPxxF+ulDNhVfYzdyfHPwJIH0r7qJtdbBmb3Edr+FWSfOwNHm6Rxj4P7
byaKG6Xxh1SKh5aJNao/zfma+2km/JW+6D+c4qFnIkzZn/4h4z8T/btlZcoM
qg9HJr5RfPXdee6XmTjYKO2HRrD/mbjcKStXb2X+yOrlEyvFQ8vq5dckxl8W
nuorUMnx1rPwbqhw7rvMeiML51Q+q1mPO7IQECwc5gj2PwtnVT3Mv0Lfu7Ow
pF26YvYzf2fj1HFZuTnyLr2fjRyl7yqauZ9ko08foQ97j87r2ejwE+6Gvay3
spGh8Pk3N/ufDUOA0P/jS+732bAoPpz+FuMvG8EtsjL5IPN3DgZ4Cu3QEoqX
loNNyt/Fq/j9HMQECPexEYy/HDQofxwdrNdyUK/0mw/zqSMHoQ+kq+UCxz8H
/vdkZcwkfj8H8fdl5UPBXH+52KPW28cw/nKR3i4Nj9QRvpALXfWjFfv5/Vx8
rPx55kXWg7mYqvTE+EDql45c+KrvW+po7cxFtepHH+VSvbpzMaBLyqxpzD95
yPVXXsUx/+ZhlOKjU5+z/3mwBgrb6mOc/zwsbJJ22zXKny2vd77Lp/w48rBe
6fGaC9yv8vCo+qptOeHVnYfrCq8DR/P8kY/oZhke0cP+56NHzQdxJ/j9fDwI
Vip/Fec/vzcf3/L7+XhF4aH2JY5/PuZ5CefAn7jf5qO2VdZ+zvOsOx8XPIXb
zP1WFOAvSs+cY7xqBejqJ5yVF2l+RQEmegjH0sEc/wJsbpH2vZ9xfy5AtMrX
8mEUT0cBxqivCr/h+BdgkIfQ/1RC+XIXYKSnmiqncP0XYn2AwNrJzP+F0KSs
jV3H/hfiSrOUg57g+Bfikb5C9x7H+rQQuSoeqf/k+iuE56NqSnAx/xVio9J3
SVu4/6jzav6z32b9Y8KjKl4jB5B/oSYkeQnRr4fe00wY2CNd61ZSPiNNqFB8
a09kvWRCtYdwBqXR/bEmLFbzQjvrVd2E8SrfIoDybzLh6H1pHPQW6yu1HyrE
j1fI/yoTVvsIZ9tw7ucmHFbxMS+m+2pM+K1DuvYtYnyZkKP0YfxK8r/e1Pv7
xCt0v9sEzxYZXuVN9jWbMEzpj+5K7v9m7FV8Ohp0f6gZ09T8kzuN+5EZLqUf
fC20H2mGtVvWNjzN+siMxvvSpaeTPo41o0Dh9fRwzpcZFYOFw9BD+yYzopR/
X95k/JiRr+bDs39j/81Y6iPcYw5wPzNju4p/tyfpixozImOF1t6f9L/TjD9H
C6yfT/NgvRllHTJ8XQvzvRnH1X2+rB+azehU781LYP4rwjxVDx1Tyd/QIvg1
SVdzPdmrFSFUzSO7y4hfI4sQ0i7Dvwji/lyETxX/ZXuQvbFFMPoJh2Ui67Ui
jLol7XPvsP9FuHVfynHd3D+KsCREOObG0vtVRXhb6Z+fXFzPRcj0Fc6OZLq/
pqhXP0zmeawIT/kKcWgLxbO+CBPU/FzXn/jTXYTLjTJcenH+izBU6ZtvI6k+
RDFOhwjR+Sr7Xwyj4p+/mKmetWKs6JSGrlJ6L7IYm32Ebctg1tvFiFB61HWS
3osthkvNrwmvMV8UY5rSl1Mu0HlTMcJChLPhMOuXYmztkQbbDbqvqrj39w2O
r6MY13ukDFlE/tUU4+hjwnluLPVLZzEqVP84OJbwXF8MT9XP/7mA/S/u/f1h
EvnTXIzlSn8UhdG+KMFq9cou7sehJeir8DYuj/Ffgs2Kz2UK+1+Cs2r/9xOc
/xJ831exxCyqv9gS/NAkK/93B+uVEkwPE86TrWSvqQTRN6Wr3cHzaQk2KL4b
Fc74L8EOhdec94kvHCVoU/X62V9pXVOC91R/y77O/b0EiQHCOYXnwXp1/z1p
XPY8830JwlW/2jiR/GkuwesKT+/H8/xqQa7SI5vqOf8WtCk+OZ1P/V2zQPor
NwZR/URaEKXms/38exUsSFD2/V5M78VaUKXibeHfG3QL+iv+cb1N500WTBkg
3Gt3s/8WhN2U9mX8XpUFW1Q/8b7GetqCf4QI/akz9H2NBZmqH9wJ5P5mQa3q
z//dTPmpV/40StdIyXxv6eWPUxS/Zgv2qPw858X+l2KP0itf2On70FJM+kPF
2Kh/aaX4WM2n23YQ/0SWoniwEEdvkD0o7dXPK+n72FKsaZeVqaN5XinF6/7C
ceAc4cNU2tuvjvH8WIpuNa89d5neryqFfCANx3eyniiFZ1811Szk+i/FJQ+B
7Zf496RS7L4r7S0j6L36UujeagrewXqjFCdVv+1IZP4rRWe7rB2/ivtfGVaE
Cu3aQ4z/MhxT+s5jJO1rZfhG8UF6BPNfGRoU3v7xBs+HZdjuLWwx9bQfW4Yj
4UpFf0fzp14GbzX/OIdx/ZdB65LGif/+PbEM+9S8EFhP9laVYa3y/691rGfL
YFZ8WhfC/pdhm+p/pTmEF2cZXr0sK3fYz5P/ZXhL9b/TFXTere7vkLVNEex/
GQ60SuO1Uub/cvziIWxzX2X/y3GoW4Z/xL8/a+VoUfy4WTL+y3G3v9DuHSf/
UI5bbTL8Uebf2HKk90hj9r/1Yjluq3nmyXW0byrH51KGfzCY+185qpQefcef
8FFV3hu/FOILRzmSBgn3g8PU72rK8T+NUp5PYH1djm0DhbtmKNlTX45hKj5z
5rDeKsc6hY8FTspXczmeVHrfV+P504ogVW9vnSB7Q61400vg7xd4HrPioQFC
22ilfhFpxSYp5eMnWf9Y0fmLrO05R/031ooyP4Gp3A91Kw4rfbtwJuHZZEWG
0hd+zazfrWhQ+vzXTfR+lRWnVPzbeN5xWDFYzQ+bPqT3a6wYpeJ9cDbznxVR
A4RI/JDwUG/FtOtSXo8iPLit8FXxH+7N/GfFCKVngxdw/it6f4++SvaEVuBf
x3Jbxg==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 1]], 
        PointBox[CompressedData["
1:eJxVWXl4k1X2PqyyCFR2sJogTIe9pQrUAuZF1lKgpZSyFZLupXRJ16QIJi7o
uBdHHUQlmRlGWbUqiAqSOIIii2yioGCCoAJCKVVgROH8vt/0e/s803/a89x7
7nvfc849y9c+mSUpOc1F5O/NRP7/d9Jp9aw78KtN/vtTb/tylDgSN/1iyoIb
OzVw3/orptwGQ0+o7YfXKEfA1U8c9s2Uu6K5TayHnqPcE8e2qv42nOdH4q1e
gu7dKFuBs+rb+jj334UzieIfsoJyP7x2We0tiilHYUZAbQmrqd8fT/WR8McD
L5vyQCT8oIHJs7h/MK7dJ0GtojwUr9ep54VvKcegeZzIQ4/yvGGw9xYMrqAc
i8JYwdDIq6Z8Nx7+WO3anvI9OH1BLbf+g/uH49Qm1fg4nj8CdevU88dXlEdi
uoHf9kXuj4Pxl+PAJa7fixuHVb9roByPnC80NH8Q94/C7hPqmbOX8mismCjW
T/7J/WNwfoiEp13l+n14oKcEo+/kfW0IjpTgynPcDxzfpbZVD5uyFyiYLKhz
cP9Y5A0Qb1F3ro9Fh6Oq1njq34/DP2noiZlcvx+da9Vyucm+4zD1LbXH7Tfv
4x2HHaqBHpe5Ph4NHcW72kn98chqUMv2m7z/BLzcS7zlNq5PwNxI8e5dzvWJ
SLpNrKs2cX0iikWCQ6J4/0nYPkzQcxTXJ6HNdQ0l9yP+ZPwcI9Znm/Qno910
cXSmPSQBY0+qb3as+R68CShuUM8zdq5Pwd6RYi1Yy/UpiKxXW1ZT/CdiyAwJ
fvoBz09Eaq3aj8dyfSoSkgR7eJ53KtJ/VMu201yfhs0B9f1rP9en4fW+gqNO
8puO3HvEu/9eU/ZOx7KLavc0vZ8kbA+rvvQq7Z+E8k/V06El15PRe4CE311q
ykiG87wGijzES8brUyRY+ZB5fjAZ351We+Kr1J+BpaqeaJjrmIHnhor3eeF9
ZiB6iHhzF1J/Bgae0sDOXOqnYNVosbbcYd4PKTjVXKz75hE/BZ6bGrJ3oH4K
1nyloazz9P9MPHlNLacief+ZuLZfLUMZ396Z2JwgXleiKQdnIthWrGvJT1Jx
9if1Db5I/FTs26aeuNP0ZyoyD6hnUArxU3E+SoI34mn/WUhfr7aBx4k/C9dH
iIRzyX8Wyr/V0I3biD8LL25TX58xxE+D9Su1/7U57ZeGxyZK8HIx8dPQpo1Y
L7chfho6va+hiDTqz0ZPw1/fTyf+bKyZLv7lD9HfszHmbnG8v8nMj8HZWPe7
WnLmU38ORoU0dJXxijnI/kwD7Vvy/nNQ8oGGRufWm/pzkLZbta2b/OcidbIR
1XupPxfXE8VxMIL6c3Gsj3gfeIn852JaRwnP/Qvx5+H8PSKrB5D/PNy8or6S
sdSfh2XJEqydSP7z8F07Cf88h/rzEb9HPa1vpf589G0hjs29qD8fP55R+4Vu
xJ+P6D1qGX6I9S0dya3FGj+Z90/HvNvEu/hO2i8d4RgJbj9mysH0xvfRlH8X
YGG9ehK3U38BCndrYGMe9Rdgs/GeJ3Ym/gJ826C2baXEX4icniLP/Jv6C7Fp
jHirnmf8LkSPz9SSwvoTXIjlYbV4q2h/OzJPamDvGurbcb+RT//Sivp29PlI
LX/lewza8dutAnXz/g5Mf0d97gpzv9WBq+vV89qXpr/hQFlIAx0YXw4HBnQS
xxb60+tAhzhxpCSZst84z8gX50F7OXBoimCb31wPO+Ct1dCdNfRfBppbJOi9
SfwMhG8Xx74me2Q05sdniJ+BxBtqr75O/AzsMe63ku/Dn4GU5oKBtE8wA4/u
VJ8tz5TDGdhtk/AT2cTPRJ/RIq02mfe1Zv5vvkQmer6poRm0ryMTL6/V0N+H
M74y8f4utUTRHv5M3NlMguNYb4KZuNRJrMV8X+FM1EwROXKE+Fk4/I5aEnYT
PwtpV9V3/UXyz0L9x2oZ8pi57sjCWKv446zEz8JrezSUOZP8s5DbWsIn7iD/
LJyLk/Am+iechWfbS7jZEuJnY0VP8R4eZ+63ZuO+NKPqEQ/ZyN+koVF9iZ+N
i5vVk/4o7Z+NO7pI+Jck4mdj3lH1fXOqwcTPxrujBF93p/2zcdKohyfSGL85
WPWR2p5X+j8HvY+pL/Zp8s/B2RlifXOBeZ4jBz/cK95lmcTPwcsH1H5/f+Ln
oH9/8W9pR/vnYEU7QSzrbzgHx3qLYxDjQXLx+R61r+1H/rlYkWpYmfkJuXh7
mIQnfkP/5+KVYWJd8yDxc4FB4l9pI34u/rZL9e0E4uei9H6x2tjvhHOx64za
3Of4/vKQtEVD728j/zzYosW7dgXtn4e33tPQmb7m+Y48/LJBLUV/pv/zEDtT
HCO7mvv9ebgeLeHnhvH95aFgh9ojc2j/PHTvaHRlTf1PPjZ8rr5s1ktrPoZf
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

         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJw9WGl4lFXSLZAdlAg46hjohrALAcMeCH0wEcIWQ4SEJdBvyL53ls7i1i0i
ouOn6MgHjIzd4AICGhCcCKhpBhBElMiuLN2IirIZ2cQQrOmZvCf9p5966q17
7qmqW1X3dp9fmJDeXERWNRP57//j/SXgD71uk//96my1kED/fddMWVAcL4Y/
hfo2aLii9kF7KYegrF49Ty+k3AXRoeLrO4nyfUgLqLafx/VCsXa0BFruv2rK
VjTcL4EDK6nvgcIwMT77B+17YvFEkYgN1PdGuzgxOoXTvi82dBDvI/qbKffH
i1vUIt/w+wGYs1Nd/Y9wvXBciRb4KykPxkvfqdbO5PcP4a296tn5HvUR2B8p
xrp7bpjyEExpIe4vulIeilXVajnbh98Pw2s71T5uGOXhGBkqRtJtyiNgrVL/
lU+JNxKfR4tvxUHqR2H/L2rpN4TrR6Jsg3qinuH3oxFVp/Zjz/H7MXjtploW
/EQ5Cm+sV8v3iyiPxcvtJdBsNtezIfoe8R4/TD2QO0jk8tem7AaGH1XL8Dx+
Pw7xn6i2uZP6cUgVMZJLaP8wZrYW64lnqX8Y37YRPNFAfTT+v4MEVh8w9++O
RtVRtQ2bwPVj8N411S6gfQzeDRXrcw+Q7yPw/qKes5OpfwTpU8X31R7Gfzym
/qGu7JvUj0e/4RKY0eS/Cbj+sHg7uqifgJPDBCuXcX+xGD5BfK1foz4W46pU
M+6ifiJ6xYuv1yITzz0RF/oFvVrK/U1C4l7Vtp1oPwkLW4vX+jztJ8M3QnzL
q6ifjP/boTW1G6ifgjNjRea+Qf0ULIuRQNjPXH8qdiWIt61B/VRkR4rE5ZBf
HH68oa6VsabsjkP9fnXNC+H6j2J1jOB6Mf3/KOoni1H7J9ePR6CfePMYT8Tj
TDfxdsghXjwy/Wof87y5vi8e1YlijY0m/jQM+k09R+42ZUyDvVr99U35NA0N
VWqPYz75piHrsNpPNp2fBJweKe6TzYmfgE+2qusGz6c7AW+3F+/b9I8vATE2
MbaGk99jiNynrlZukw8ew+27JFD4O+0fw/k7xX2b8fQ9huFV6lm6nfbTsfK8
2jZbiT8d45NEzp+iv6Y3xsfJ/U/H1huqiV/SfgaWtxDrs+3JfwYmnlbPzSTG
Iyi/p/7qN831fDPw4AW1zMinfSJ+s4o37hDxExvzifXQnYiUCAkkr+D+E5G3
Qz3JfRm/JPSYJHhnFfknIb2d+C7uoX0Sbm1W27yGOtM+Cf/qJbiX+Sozcc8p
tXRqSfyZWDdWrOO7c/8zsa2TuJe9ZNZX30xE/Km2dysZv1mIbCXGsvO0n4W3
rSJLWW/ds3B6vPiePMP9z0JqtBhRQ4g/G70fEd/uP2k/G8v2q6X5KtrPxmK/
ujZeov1sfPm+2pYzP2UO3nxArD+wvmIOHj2p9ln9uf85+GCH+mP60X4OrBe0
5tlQ+i8Z5TtUB86gfTKe+Fo9f97geU/GkGNa09LG+CUj3SLWU8/Rfi46HVPP
q/toPxdh48VYeo7+n4tLkeLu9j3x5+L2GHEbJ1i/5sHeQeSlJv/PQ3RA/cvs
5D8PK8eL+/UC2s9Dt7+IdWgK/W9H+NeqMe/Q3g7fWAn8fJH4dvTrKMZHocxf
Ox5fr5pfxv0bmNlH3A8yXlYD0dfVtvi2mS8wMLSj+BaNMPWGASNKAp/05f4M
dJ4s7rdmmbLXwNUGtV+Opr8MPNBcjM7EDxjYe0TtbZr6Uwq+ULX88iPxU5D4
oBijed6Rgvafqr0ui/gpiAr6s00fxjcFz0JQNMmUvSnoWq2eTux3vhTErVdX
3xLip+D3e4NeakP8+UgL1ptc1gPrfFQfU9vR3jxP87F5YLBrv038+ZjaWnxt
RxF/PtaMFO/uF8l/PqpmiHXNesZrPtYeV9fhVqYcmI8TwfOf25fxS8WxSPE9
cdLEs6bi0BGt+Zb9E6n4bKf6FyWaeiMVu7pKYC/5uVPx6AdakzWW/FNROEkC
864TPxWPRQrW9yB+KuJvqn9FNvmnYfUGtTybZtpb0zD6Y7UntiV+Gh46rK7d
u818NdJwfqjIm8r4p+HUObXNacJPgz1WAqGzr5j4aXj5frGuvo/+T0PDUfVf
bpo/0nF8nAS+HEb8dAz5UfWddOKno6pKa14PIX46UrqKO4/57k5H5RiRJbn0
fzq2f6v+8SeYf+moiRdZsYb805E+XQJdfyV+Bsa1F8RyfrJmYEyI+Pr8QfwM
RAb5Lt7G+GfAFyK4+QHxM7AwXKw7ThE/A7lnVDd0pP8zsDhJcDCC/DPgfE/t
tzvz/GXi5hb1D3yK+JkIayfuFh7mXyZuHdCaN5lvRiZKe4kM6sz4Z6JzMzGK
e5rfezNx+ZhaLi0g/0w8eEr9W8KJn4mEE1rzAvuDZMEWJb7YxcTPwuk7xPfG
VvLPQsY3alnZk/yzsGmrWnotJf8sxA4Q76hB5J+FA9vUn/U08bMw7getWUO8
QBYWnVdXCPNLshvPz4fM/2ycniqB/ZxnkI0X3letmsz4Z+O5/oJNqaxv2TjR
R6ThdeIH9Q+J0awX8bPx+R/qyWpG/tn48Gt13dOV+DkYUq32j34jfg7+fkkt
PVgPkYPEnoIL7EdGDqqD9frekeSfgz7b1X/1r/R/DhYkiNGd8fTl4MVa9eA4
+QftOwej/BXxc/HuObXH8L5jzcWaOySw8Cnyz0X+BPF2O8jzn4vYbmKsqGN/
ysWeBvWvZX56c7F0u3q630P+Qf1W9e+pYP7nNvaDx9l/8iC71FI4ivh52PyN
1sxYTv55WN5T3IdY742gvE112svkn4cN48RY5CZ+Hq4G7x/5t4mfB9xWXdOP
/PMwcJJ4y0rJPx/DgvPron/S//mYdEb9I6OIn4+oAcEsvEj8fJwKE+vFdmZ9
ceejR5j4WjSd/3zsGCC+kezHvny8clBtm5LJPx8RkWId0dT/CvBKa5ErvL9Y
C/DwLrUn9SZ+AUJuqf83zg9GAb4M9rN+PL/uAnT4UO1L6D9vQaM/eR/0FaBF
D5EdNeRf0Fjf2c+kEM6+gkL2R2sh/EPFu5/9BoXIrlXXftZHoxD3DxTfzgXm
POYuRPI6tfXnvOAtxPGLWhO5m/iFSFqrnq0DyL8QmevUc6ua+A50+VktxZw3
Qxx4+pZ6LFmMh6Pxfl9v5stgBz7uGJwyU5mfDhReVs9Td5rxiHfg7TjxPvcp
/eWAtb1YD3c27R0OJI4S7wnWN7ej8f6xw/x+iQOXalVXHiMfBzq3Efe/7zTx
NjrQPTzYVf5lrudzYJFNvKsmmvpaB1ZApMs2+tsB51V1hc815ToHYu4W394I
xr8IwzaofQbzI6QInz0svps+5kMRlvQX7wLKg4sQdocYW+aQfxEKPtWaKRmm
Pr4I+zapZe0V8i9qxCsw8RxFSIwQ998YX3cRQoL95Pte5npLipAdzN/3p5n+
9BbhwIPijhxg8t1YhBltxLfuGs9XEP8uka9536stwpub1DN/O/kH158i1hL2
n7oilO9Vy9Ost1KMJefUs+pzxr+48TzNZT4Wo/4v4n3ld1M/uLhxHub9DMXI
ixCEs7/EFyPnomoHC/O1GBu/VNsR3ocdxTh5UP05MeRfjHeC9/drceRfjIQR
warIecxbjIqjau+2nfyLUdNFrG1acr4rxp6HxPtLpbm/2mI8MV28vpXM92Is
O6OuK/GMfzG6BfP56gG+F5UEJzyx3g4z1wspwaVeYg0fzviXIHy6SOuzzP8S
jAjWi8xUU0YJVgf90+KWuX58CZZ+of4dcxn/Ehz5SW3b3Mz/ElR3F6M1/e8u
QfOz6v91E/O/pPG9gfORtwQ769U2kv1tYwkOfaT2Fx4l/xLU3i/Gi7yP1pbg
XLDejXmF/EuwrKNYz5425bqSxvsbz5eUwn5a7W/w/IWUou9nahnag/EvxbX7
JBDOfjW4FLOnitFwkvEvxZzRgimsz/GluJwYvJU8wPiXYmBALdcPMf9L0WqL
egZ15PxSCs8I8fZMIv9SvNUieOv+mP20FGeC8+cJ3i83luL8ca35pJr5H9S3
FYReJv9S7G0n1omZ7PelyGglgZNfMf6l+N//Xzl/Oxvvx5y/Q5yI9qlrwmXW
PyciWopxw0H+Thy9V6wXnOTvxNp9ahs6j/yd+HuSeN/i+5LhxO1wga+Liedw
YvREMSq4ntuJ5TvUsno089+J+0aKL4zn2+vE71OCf9z/RieiWopvz1TG34l/
XFE9OJ71z4maj9Xfm/NxwInaKvW3mWDme50Ti0aKe9pqxr8ML9WrvTvvFyFl
aLFJ7b/ey/iX4fXD6u/O+8TgMuwaJUbbLpxPy7BscjCLwsi/DJMTxN2u6fyX
YcUF9S9wMf/L8OEdgsQQxr8MvQ+r5Rrvt0vKsGeaSCTfh7xlaLigNn8t+Zdh
wWa12JvmmzKMTfzvKx3jX4ZbPSUwqI71L2jfXryDEpj/Zfhht3pyHyD/csS2
FOuKWOZ/Od4J3s+PMD+s5Qi7W7zTj5N/OfqeVtfCKNb/cowNztvHDpB/Oayn
1HU23fS3UY7082pfyX7kKMf1feq/xHnTXY4jwfM++ldTXhJcr68YMyN5/svx
yxF1PfkT+Zcj+Se1bN/J/leO/AtqjxLGvxwdJ0oggvU5UI4h4wTPZ5J/OY59
oZZ1N1n/K9D5kNY8w/eUkApsjBb5vY71rwKv3ifug8+QfwUGfaQ1MXxPRQXC
zqtli531v6LxvT6Z82pF43ng944KBHqIO3QX878CH/yqrmGbGf8KnO0ugSmf
mvy8FYh7SNznx5J/BX6+rDVPOpj/FXh+n1p8rGe1FWgWvJ90PGraByrwZ38x
Ns5j/6tA/EDxfvcSz38lir5RV/7d5F+JWQH1RJYz/pWN7/EvkH8l1pxU+w/1
5F+JgevVvoX39fjKxveEpWb/NiqxcIwYKR+TfyWONhdfvZPzayVafqX+QZyX
l1TitVZi9DjL+FdiZnCerH+V/CvxQnOxjuN9w1eJjKHi/up98q9EXKhY63ke
ApVoN0qkR62JV1eJc+Hi7vo35v/j+Ka14Du+d4U8jv8AeEZgzg==
         
         "]]}, {}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0.}, 
     PlotRange -> {{0., 1.40938818455}, {0., 417.}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 1.40938818455}, {0., 417.}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FB Genuine\"", "\"RC Genuine\"", "\"FB Imposter\"", 
       "\"RC Imposter\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.6666666666666666, 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False", ",", "False"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.694950068900639*^9, 3.694950127790386*^9}, 
   3.6949502451716013`*^9, 3.694950370852537*^9, {3.694950674870565*^9, 
   3.694950681389696*^9}, 3.694950712814801*^9, 3.694951245669045*^9, 
   3.694951300223398*^9, {3.69495133163838*^9, 3.694951340351562*^9}, {
   3.694951435796805*^9, 3.694951464169969*^9}, 3.694951577647393*^9, {
   3.694951615621798*^9, 3.694951625785763*^9}, {3.694951750212654*^9, 
   3.694951765418528*^9}, 3.6949518041712008`*^9, 
   3.70239596175489*^9},ExpressionUUID->"1b7b59e9-8ac6-4fbb-8db7-\
fb1281cbef6c"]
}, Open  ]]
},
WindowSize->{1182, 918},
WindowMargins->{{2, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 16, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 93, 1, 30, "Text", "ExpressionUUID" -> \
"8321abdc-1960-4654-bc21-bf6131cbf158"],
Cell[654, 23, 1542, 48, 180, "Input", "ExpressionUUID" -> \
"86de4abd-1850-49b6-a92f-6914ff9c855b"],
Cell[2199, 73, 334, 11, 46, "Text", "ExpressionUUID" -> \
"dd9e4499-07a1-437e-9512-b31f7b80497f"],
Cell[CellGroupData[{
Cell[2558, 88, 513, 14, 32, "Input", "ExpressionUUID" -> \
"8eb787ef-5f3b-4274-b7fd-d60826e7b00c"],
Cell[3074, 104, 35035, 713, 241, "Output", "ExpressionUUID" -> \
"9dc1de5e-1a95-44ed-932e-ef65d0b055da"]
}, Open  ]],
Cell[38124, 820, 383, 12, 46, "Text", "ExpressionUUID" -> \
"e25f21f7-2d61-48ef-862e-37edf8249b94"],
Cell[CellGroupData[{
Cell[38532, 836, 558, 14, 32, "Input", "ExpressionUUID" -> \
"9ad8ee94-d810-4f60-83a8-1cba3aa0f760"],
Cell[39093, 852, 48185, 979, 240, "Output", "ExpressionUUID" -> \
"86200f5d-5e22-4e2a-a02f-5461e2764656"]
}, Open  ]],
Cell[87293, 1834, 530, 19, 46, "Text", "ExpressionUUID" -> \
"0a53b3db-6bc8-43e1-b89f-cdc745232200"],
Cell[CellGroupData[{
Cell[87848, 1857, 1020, 26, 75, "Input", "ExpressionUUID" -> \
"c3475905-e17b-4b32-9545-2535252dd684"],
Cell[88871, 1885, 69576, 1442, 344, "Output", "ExpressionUUID" -> \
"511cbb3c-211e-41b4-9e23-cba585c88e30"]
}, Open  ]],
Cell[158462, 3330, 517, 19, 46, "Text", "ExpressionUUID" -> \
"8c19a6c3-48a2-47b7-9e68-e0b7ec01e6b2"],
Cell[CellGroupData[{
Cell[159004, 3353, 705, 18, 32, "Input", "ExpressionUUID" -> \
"6846d520-5a68-497e-8ba0-6d0eef8ec0e4"],
Cell[159712, 3373, 67675, 1399, 240, "Output", "ExpressionUUID" -> \
"16233cbd-b956-43d2-8d1d-e581afc22c64"]
}, Open  ]],
Cell[227402, 4775, 565, 19, 46, "Text", "ExpressionUUID" -> \
"2e28ea05-de1f-46b5-bcda-fd27b52f1c2c"],
Cell[CellGroupData[{
Cell[227992, 4798, 751, 19, 32, "Input", "ExpressionUUID" -> \
"f1d69974-06c7-4810-8bd6-88a9d8149459"],
Cell[228746, 4819, 37463, 691, 246, "Output", "ExpressionUUID" -> \
"20443d34-84e0-4ea0-a1e5-99399b1b0923"]
}, Open  ]],
Cell[266224, 5513, 578, 19, 46, "Text", "ExpressionUUID" -> \
"b6af222e-6741-49c7-95dc-9c5434796473"],
Cell[CellGroupData[{
Cell[266827, 5536, 855, 22, 54, "Input", "ExpressionUUID" -> \
"da0447d6-e30c-4b9c-bb40-840ae622e7dc"],
Cell[267685, 5560, 39877, 748, 246, "Output", "ExpressionUUID" -> \
"856ebd9b-2117-4339-b6aa-3127fda91d01"]
}, Open  ]],
Cell[307577, 6311, 1447, 33, 122, "Text", "ExpressionUUID" -> \
"51307457-e21f-45e2-967f-a6eb65675038"],
Cell[CellGroupData[{
Cell[309049, 6348, 1573, 41, 96, "Input", "ExpressionUUID" -> \
"cf22a539-5ab6-4217-80f0-9a3309fde31d"],
Cell[310625, 6391, 40178, 754, 278, "Output", "ExpressionUUID" -> \
"1b7b59e9-8ac6-4fbb-8db7-fb1281cbef6c"]
}, Open  ]]
}
]
*)

